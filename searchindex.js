Search.setIndex({"alltitles": {"An Example": [[16, "an-example"]], "Architecture": [[16, "architecture"]], "Assertions": [[6, "module-pedal.assertions"]], "Autograder Integrations": [[20, "autograder-integrations"]], "Basic Arithmetic Question": [[19, "basic-arithmetic-question"]], "Basic Function Call Question": [[19, "basic-function-call-question"]], "Best Practices": [[21, "best-practices"]], "BlockPy": [[20, "blockpy"]], "Built-in Functions": [[33, "built-in-functions"]], "CAIT": [[7, "module-pedal.cait"], [24, "cait"]], "Cait Report Data": [[7, "id1"]], "Calling Students\u2019 Functions": [[22, "calling-students-functions"]], "Checking Execution Results": [[22, "checking-execution-results"]], "Command Line Usage": [[22, "command-line-usage"]], "Compatibility": [[15, "compatibility"]], "Compatiblity": [[4, "compatiblity"]], "Compilation": [[1, "compilation"]], "Compiling Pedal for Pyodide": [[1, "compiling-pedal-for-pyodide"]], "Compiling Pedal for Skulpt": [[1, "compiling-pedal-for-skulpt"]], "Complex Question": [[19, "complex-question"]], "Contact": [[13, "contact"]], "Contents": [[5, null], [17, null], [23, null]], "Core Commands": [[0, "module-pedal.core.commands"], [25, "core-commands"]], "Core Feedback Functions": [[22, "core-feedback-functions"]], "Creating a Feedback Function": [[3, "creating-a-feedback-function"]], "Critical Standard Libraries": [[4, "critical-standard-libraries"]], "Custom Environments": [[22, "custom-environments"]], "Developer API": [[0, "developer-api"]], "Developer Tools Reference": [[5, "developer-tools-reference"]], "Developers: Feedback Functions": [[3, "developers-feedback-functions"]], "Different Ways of Disabling Feedback": [[3, "different-ways-of-disabling-feedback"]], "Documenting Feedback": [[21, "documenting-feedback"]], "Environment": [[0, "module-pedal.core.environment"]], "Equivalent Names": [[28, "equivalent-names"]], "Extensions": [[8, "module-pedal.extensions.plotting"]], "Feedback": [[0, "module-pedal.core.feedback"]], "Feedback Function Concepts": [[3, "feedback-function-concepts"]], "Feedback Functions": [[26, "feedback-functions"]], "Finding AST Patterns": [[22, "finding-ast-patterns"]], "Finding Data types": [[24, "finding-data-types"]], "Formatter": [[27, "formatter"]], "Generics": [[33, "generics"]], "GitHub": [[15, "github"]], "Glossary": [[14, "glossary"]], "GradeScope": [[20, "gradescope"]], "Important Concepts": [[0, "important-concepts"]], "Indices and tables": [[17, "indices-and-tables"]], "Installation": [[15, "installation"]], "Instructor Control Scripts": [[22, "instructor-control-scripts"]], "Internal Naming Conventions": [[2, "internal-naming-conventions"]], "Introduction": [[16, "introduction"]], "JSON Type Hints": [[33, "json-type-hints"]], "Jupyter Notebooks": [[20, "jupyter-notebooks"]], "Large Project": [[19, "large-project"]], "List of Pedal Data Types": [[24, "list-of-pedal-data-types"]], "Location": [[0, "module-pedal.core.location"]], "Medium Project": [[19, "medium-project"]], "Methods of Feedback Functions": [[3, "methods-of-feedback-functions"]], "MicroPython": [[4, "micropython"]], "Necessary Libraries": [[4, "necessary-libraries"]], "Non-Critical Standard Libraries": [[4, "non-critical-standard-libraries"]], "Objects": [[33, "objects"]], "Optional Third Party Libraries": [[4, "optional-third-party-libraries"]], "Other Assertions": [[22, "other-assertions"]], "Overriding Existing Feedback Functions": [[3, "overriding-existing-feedback-functions"]], "Pedal\u2019s Type System": [[33, "pedal-s-type-system"]], "PyPi": [[15, "pypi"]], "Questions": [[9, "module-pedal.questions.setup"]], "Reference a function call": [[24, "reference-a-function-call"]], "Reference a function definition": [[24, "reference-a-function-definition"]], "Report": [[0, "module-pedal.core.report"]], "Researchers: Analyzing with Pedal": [[18, "researchers-analyzing-with-pedal"]], "Resolver Feedback": [[22, "resolver-feedback"]], "Runtime Assertions": [[28, "runtime-assertions"]], "Sandbox": [[10, "module-pedal.sandbox"], [29, "sandbox"]], "Save and reference variable": [[24, "save-and-reference-variable"]], "Sections": [[30, "sections"]], "Simple Assertions": [[22, "simple-assertions"]], "Simple Unit Testing": [[22, "simple-unit-testing"]], "Skulpt": [[4, "skulpt"]], "Source": [[11, "source"], [30, "source"]], "Source Feedbacks": [[30, "source-feedbacks"]], "Source Report Data": [[11, "id2"]], "Static Assertions": [[31, "static-assertions"]], "Student Defined Function": [[19, "student-defined-function"]], "Submission": [[0, "module-pedal.core.submission"]], "Subtree matching": [[24, "subtree-matching"]], "TIFA": [[12, "tifa"], [32, "tifa"]], "Teacher Examples": [[19, "teacher-examples"]], "Teacher Quick Start Guide": [[22, "teacher-quick-start-guide"]], "Teacher Reference": [[23, "teacher-reference"]], "The Lifetime of a Feedback Function": [[3, "the-lifetime-of-a-feedback-function"]], "The Metadata of Feedback Functions": [[3, "the-metadata-of-feedback-functions"]], "Tools": [[0, "module-pedal.core.tool"]], "Use Novice-Friendly Language": [[21, "use-novice-friendly-language"]], "VPL": [[20, "vpl"]], "Web-CAT": [[20, "web-cat"]], "Welcome to Pedal\u2019s documentation!": [[17, "welcome-to-pedal-s-documentation"]], "Why Feedback Functions?": [[3, "why-feedback-functions"]]}, "docnames": ["developers/api", "developers/compilation", "developers/conventions", "developers/ffs", "developers/libraries", "developers/tools", "developers/tools/assertions", "developers/tools/cait", "developers/tools/extensions", "developers/tools/questions", "developers/tools/sandbox", "developers/tools/source", "developers/tools/tifa", "everyone/contact", "everyone/glossary", "everyone/installation", "everyone/introduction", "index", "teachers/analysis", "teachers/examples", "teachers/integrations", "teachers/practices", "teachers/quickstart", "teachers/reference", "teachers/tools/cait", "teachers/tools/core", "teachers/tools/ffs", "teachers/tools/formatter", "teachers/tools/runtime_assertions", "teachers/tools/sandbox", "teachers/tools/source", "teachers/tools/static_assertions", "teachers/tools/tifa", "teachers/tools/types"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["developers/api.rst", "developers/compilation.rst", "developers/conventions.rst", "developers/ffs.rst", "developers/libraries.rst", "developers/tools.rst", "developers/tools/assertions.rst", "developers/tools/cait.rst", "developers/tools/extensions.rst", "developers/tools/questions.rst", "developers/tools/sandbox.rst", "developers/tools/source.rst", "developers/tools/tifa.rst", "everyone/contact.rst", "everyone/glossary.rst", "everyone/installation.rst", "everyone/introduction.rst", "index.rst", "teachers/analysis.rst", "teachers/examples.rst", "teachers/integrations.rst", "teachers/practices.rst", "teachers/quickstart.rst", "teachers/reference.rst", "teachers/tools/cait.rst", "teachers/tools/core.rst", "teachers/tools/ffs.rst", "teachers/tools/formatter.rst", "teachers/tools/runtime_assertions.rst", "teachers/tools/sandbox.rst", "teachers/tools/source.rst", "teachers/tools/static_assertions.rst", "teachers/tools/tifa.rst", "teachers/tools/types.rst"], "indexentries": {"_context (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._context", false]], "_current_patches (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._current_patches", false]], "_next_context_id (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._next_context_id", false]], "_tool_data (report attribute)": [[0, "pedal.core.report.Report._tool_data", false]], "activate": [[26, "activate", false]], "activate (feedback attribute)": [[0, "pedal.core.commands.Feedback.activate", false], [0, "pedal.core.feedback.Feedback.activate", false]], "add_class_hook() (report class method)": [[0, "pedal.core.report.Report.add_class_hook", false]], "add_feedback() (report method)": [[0, "pedal.core.report.Report.add_feedback", false]], "add_hook() (report method)": [[0, "pedal.core.report.Report.add_hook", false]], "add_ignored_feedback() (report method)": [[0, "pedal.core.report.Report.add_ignored_feedback", false]], "algorithmic (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.ALGORITHMIC", false], [0, "pedal.core.feedback_category.FeedbackCategory.ALGORITHMIC", false]], "allow_function()": [[29, "allow_function", false]], "allow_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_function", false]], "allow_module()": [[29, "allow_module", false]], "allow_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_module", false]], "allow_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.allow_module", false]], "allow_real_io()": [[29, "allow_real_io", false]], "allow_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_real_io", false]], "allowed_time (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.allowed_time", false]], "append_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.append_output", false]], "assert_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_almost_equal", false]], "assert_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_contains_subset", false]], "assert_contains_subset()": [[28, "assert_contains_subset", false]], "assert_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_equal", false]], "assert_equal()": [[28, "assert_equal", false]], "assert_false (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_false", false]], "assert_false()": [[28, "assert_false", false]], "assert_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater", false]], "assert_greater()": [[28, "assert_greater", false]], "assert_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater_equal", false]], "assert_greater_equal()": [[28, "assert_greater_equal", false]], "assert_has_attr (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_attr", false]], "assert_has_attr()": [[28, "assert_has_attr", false]], "assert_has_function (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_function", false]], "assert_has_function()": [[28, "assert_has_function", false]], "assert_has_variable (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_variable", false]], "assert_has_variable()": [[28, "assert_has_variable", false]], "assert_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_in", false]], "assert_in()": [[28, "assert_in", false]], "assert_is (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is", false]], "assert_is()": [[28, "assert_is", false]], "assert_is_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_dataclass", false]], "assert_is_dataclass()": [[28, "assert_is_dataclass", false]], "assert_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_instance", false]], "assert_is_instance()": [[28, "assert_is_instance", false]], "assert_is_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_none", false]], "assert_is_none()": [[28, "assert_is_none", false]], "assert_is_not (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not", false]], "assert_is_not()": [[28, "assert_is_not", false]], "assert_is_not_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass", false]], "assert_is_not_dataclass()": [[28, "assert_is_not_dataclass", false]], "assert_is_not_instance()": [[28, "assert_is_not_instance", false]], "assert_is_not_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_none", false]], "assert_is_not_none()": [[28, "assert_is_not_none", false]], "assert_length_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_equal", false]], "assert_length_equal()": [[28, "assert_length_equal", false]], "assert_length_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater", false]], "assert_length_greater()": [[28, "assert_length_greater", false]], "assert_length_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater_equal", false]], "assert_length_greater_equal()": [[28, "assert_length_greater_equal", false]], "assert_length_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less", false]], "assert_length_less()": [[28, "assert_length_less", false]], "assert_length_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less_equal", false]], "assert_length_less_equal()": [[28, "assert_length_less_equal", false]], "assert_length_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_not_equal", false]], "assert_length_not_equal()": [[28, "assert_length_not_equal", false]], "assert_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less", false]], "assert_less()": [[28, "assert_less", false]], "assert_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less_equal", false]], "assert_less_equal()": [[28, "assert_less_equal", false]], "assert_not_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_almost_equal", false]], "assert_not_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_contains_subset", false]], "assert_not_contains_subset()": [[28, "assert_not_contains_subset", false]], "assert_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_equal", false]], "assert_not_equal()": [[28, "assert_not_equal", false]], "assert_not_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_in", false]], "assert_not_in()": [[28, "assert_not_in", false]], "assert_not_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_is_instance", false]], "assert_not_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output", false]], "assert_not_output()": [[28, "assert_not_output", false]], "assert_not_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output_contains", false]], "assert_not_output_contains()": [[28, "assert_not_output_contains", false]], "assert_not_output_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output_regex", false]], "assert_not_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_regex", false]], "assert_not_regex()": [[28, "assert_not_regex", false]], "assert_not_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_type", false]], "assert_not_type()": [[28, "assert_not_type", false]], "assert_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output", false]], "assert_output()": [[28, "assert_output", false]], "assert_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output_contains", false]], "assert_output_contains()": [[28, "assert_output_contains", false]], "assert_output_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output_regex", false]], "assert_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.assert_plot", false]], "assert_prints (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_prints", false]], "assert_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_regex", false]], "assert_regex()": [[28, "assert_regex", false]], "assert_true (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_true", false]], "assert_true()": [[28, "assert_true", false]], "assert_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_type", false]], "assert_type()": [[28, "assert_type", false]], "assertalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertAlmostEqual", false]], "assertequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertEqual", false]], "assertfalse (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertFalse", false]], "assertgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreater", false]], "assertgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreaterEqual", false]], "asserthasattr (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasAttr", false]], "asserthasfunction (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasFunction", false]], "asserthasvariable (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasVariable", false]], "assertin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIn", false]], "assertis (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIs", false]], "assertisinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsInstance", false]], "assertisnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNone", false]], "assertisnot (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNot", false]], "assertisnotinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotInstance", false]], "assertisnotnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotNone", false]], "assertlengthequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthEqual", false]], "assertlengthgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreater", false]], "assertlengthgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreaterEqual", false]], "assertlengthless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLess", false]], "assertlengthlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLessEqual", false]], "assertlengthnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthNotEqual", false]], "assertless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLess", false]], "assertlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLessEqual", false]], "assertnotalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotAlmostEqual", false]], "assertnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotEqual", false]], "assertnotin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotIn", false]], "assertnotoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutput", false]], "assertnotoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutputContains", false]], "assertnotregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotRegex", false]], "assertnottype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotType", false]], "assertoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutput", false]], "assertoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutputContains", false]], "assertprints (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertPrints", false]], "assertregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertRegex", false]], "asserttrue (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertTrue", false]], "asserttype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertType", false]], "assign_target() (tifa method)": [[12, "pedal.tifa.Tifa.assign_target", false]], "assignment (submission attribute)": [[0, "pedal.core.submission.Submission.assignment", false]], "atomic feedback function": [[14, "term-Atomic-Feedback-Function", true]], "attribute_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.attribute_error", false]], "author (feedback attribute)": [[0, "pedal.core.commands.Feedback.author", false], [0, "pedal.core.feedback.Feedback.author", false]], "badgraphfeedback (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.BadGraphFeedback", false]], "block_function()": [[29, "block_function", false]], "block_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_function", false]], "block_module()": [[29, "block_module", false]], "block_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_module", false]], "block_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.block_module", false]], "block_real_io()": [[29, "block_real_io", false]], "block_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_real_io", false]], "built-in function": [[25, "clear_report", false], [25, "compliment", false], [25, "contextualize_report", false], [25, "debug", false], [25, "explain", false], [25, "gently", false], [25, "get_all_feedback", false], [25, "give_partial", false], [25, "guidance", false], [25, "hide_correctness", false], [25, "log", false], [25, "set_success", false], [25, "suppress", false], [28, "assert_contains_subset", false], [28, "assert_equal", false], [28, "assert_false", false], [28, "assert_greater", false], [28, "assert_greater_equal", false], [28, "assert_has_attr", false], [28, "assert_has_function", false], [28, "assert_has_variable", false], [28, "assert_in", false], [28, "assert_is", false], [28, "assert_is_dataclass", false], [28, "assert_is_instance", false], [28, "assert_is_none", false], [28, "assert_is_not", false], [28, "assert_is_not_dataclass", false], [28, "assert_is_not_instance", false], [28, "assert_is_not_none", false], [28, "assert_length_equal", false], [28, "assert_length_greater", false], [28, "assert_length_greater_equal", false], [28, "assert_length_less", false], [28, "assert_length_less_equal", false], [28, "assert_length_not_equal", false], [28, "assert_less", false], [28, "assert_less_equal", false], [28, "assert_not_contains_subset", false], [28, "assert_not_equal", false], [28, "assert_not_in", false], [28, "assert_not_output", false], [28, "assert_not_output_contains", false], [28, "assert_not_regex", false], [28, "assert_not_type", false], [28, "assert_output", false], [28, "assert_output_contains", false], [28, "assert_regex", false], [28, "assert_true", false], [28, "assert_type", false], [28, "check_dataclass_instance", false], [28, "ensure_called_uniquely", false], [28, "ensure_coverage", false], [28, "ensure_function_callable", false], [28, "unit_test", false], [29, "allow_function", false], [29, "allow_module", false], [29, "allow_real_io", false], [29, "block_function", false], [29, "block_module", false], [29, "block_real_io", false], [29, "call", false], [29, "check_coverage", false], [29, "clear_input", false], [29, "clear_mocks", false], [29, "clear_output", false], [29, "clear_sandbox", false], [29, "clear_student_data", false], [29, "count_unique_calls", false], [29, "evaluate", false], [29, "get_call_arguments", false], [29, "get_exception", false], [29, "get_input", false], [29, "get_module", false], [29, "get_output", false], [29, "get_python_errors", false], [29, "get_raw_output", false], [29, "get_sandbox", false], [29, "get_student_data", false], [29, "get_trace", false], [29, "mock_function", false], [29, "mock_module", false], [29, "queue_input", false], [29, "run", false], [29, "set_input", false], [29, "start_trace", false], [29, "stop_trace", false], [30, "check_section_exists", false], [30, "get_program", false], [30, "next_section", false], [30, "restore_code", false], [30, "separate_into_sections", false], [30, "set_source", false], [30, "stop_sections", false], [30, "verify", false], [31, "ensure_ast", false], [31, "ensure_dataclass", false], [31, "ensure_documented_functions", false], [31, "ensure_function", false], [31, "ensure_function_call", false], [31, "ensure_functions_return", false], [31, "ensure_import", false], [31, "ensure_literal", false], [31, "ensure_literal_type", false], [31, "ensure_operation", false], [31, "ensure_operator", false], [31, "ensure_prints_exactly", false], [31, "ensure_starting_code", false], [31, "files_not_handled_correctly", false], [31, "function_prints", false], [31, "only_printing_variables", false], [31, "prevent_advanced_iteration", false], [31, "prevent_ast", false], [31, "prevent_embedded_answer", false], [31, "prevent_function_call", false], [31, "prevent_import", false], [31, "prevent_literal", false], [31, "prevent_literal_type", false], [31, "prevent_operation", false], [31, "prevent_operator", false], [31, "prevent_printing_functions", false], [32, "tifa_analysis", false]], "caitexception": [[7, "pedal.cait.cait_api.CaitException", false]], "call()": [[29, "call", false]], "call() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.call", false]], "call() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.call", false]], "categories (feedback attribute)": [[0, "pedal.core.commands.Feedback.CATEGORIES", false], [0, "pedal.core.feedback.Feedback.CATEGORIES", false]], "category": [[26, "category", false]], "category (feedback attribute)": [[0, "pedal.core.commands.Feedback.category", false], [0, "pedal.core.feedback.Feedback.category", false]], "check_coverage()": [[29, "check_coverage", false]], "check_coverage() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.check_coverage", false]], "check_dataclass_error (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.check_dataclass_error", false]], "check_dataclass_instance()": [[28, "check_dataclass_instance", false]], "check_mark() (formatter method)": [[27, "Formatter.check_mark", false]], "check_section_exists()": [[30, "check_section_exists", false]], "clear() (report method)": [[0, "pedal.core.report.Report.clear", false]], "clear() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear", false]], "clear_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_context", false]], "clear_exception() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_exception", false]], "clear_input()": [[29, "clear_input", false]], "clear_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_input", false]], "clear_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_input", false]], "clear_mocked_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocked_function", false]], "clear_mocks()": [[29, "clear_mocks", false]], "clear_mocks() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_mocks", false]], "clear_mocks() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocks", false]], "clear_output()": [[29, "clear_output", false]], "clear_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_output", false]], "clear_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_output", false]], "clear_report()": [[25, "clear_report", false]], "clear_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.clear_report", false]], "clear_sandbox()": [[29, "clear_sandbox", false]], "clear_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_sandbox", false]], "clear_student_data()": [[29, "clear_student_data", false]], "clear_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_student_data", false]], "clear_tracer() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_tracer", false]], "col (location attribute)": [[0, "pedal.core.location.Location.col", false]], "commandblock (built-in class)": [[29, "CommandBlock", false]], "commandblock (class in pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.CommandBlock", false]], "compare_data() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.compare_data", false]], "complete (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.COMPLETE", false], [0, "pedal.core.feedback_category.FeedbackCategory.COMPLETE", false]], "compliment (class in pedal.core.commands)": [[0, "pedal.core.commands.compliment", false]], "compliment()": [[25, "compliment", false]], "composite feedback function": [[14, "term-Composite-Feedback-Function", true]], "compositefeedbackfunction() (in module pedal.core.feedback)": [[0, "pedal.core.feedback.CompositeFeedbackFunction", false]], "condition() (assert_contains_subset method)": [[6, "pedal.assertions.runtime.assert_contains_subset.condition", false]], "condition() (assert_equal method)": [[6, "pedal.assertions.runtime.assert_equal.condition", false]], "condition() (assert_false method)": [[6, "pedal.assertions.runtime.assert_false.condition", false]], "condition() (assert_greater method)": [[6, "pedal.assertions.runtime.assert_greater.condition", false]], "condition() (assert_greater_equal method)": [[6, "pedal.assertions.runtime.assert_greater_equal.condition", false]], "condition() (assert_has_attr method)": [[6, "pedal.assertions.runtime.assert_has_attr.condition", false]], "condition() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.condition", false]], "condition() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.condition", false]], "condition() (assert_in method)": [[6, "pedal.assertions.runtime.assert_in.condition", false]], "condition() (assert_is method)": [[6, "pedal.assertions.runtime.assert_is.condition", false]], "condition() (assert_is_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_dataclass.condition", false]], "condition() (assert_is_instance method)": [[6, "pedal.assertions.runtime.assert_is_instance.condition", false]], "condition() (assert_is_none method)": [[6, "pedal.assertions.runtime.assert_is_none.condition", false]], "condition() (assert_is_not method)": [[6, "pedal.assertions.runtime.assert_is_not.condition", false]], "condition() (assert_is_not_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass.condition", false]], "condition() (assert_is_not_none method)": [[6, "pedal.assertions.runtime.assert_is_not_none.condition", false]], "condition() (assert_length_equal method)": [[6, "pedal.assertions.runtime.assert_length_equal.condition", false]], "condition() (assert_length_greater method)": [[6, "pedal.assertions.runtime.assert_length_greater.condition", false]], "condition() (assert_length_greater_equal method)": [[6, "pedal.assertions.runtime.assert_length_greater_equal.condition", false]], "condition() (assert_length_less method)": [[6, "pedal.assertions.runtime.assert_length_less.condition", false]], "condition() (assert_length_less_equal method)": [[6, "pedal.assertions.runtime.assert_length_less_equal.condition", false]], "condition() (assert_length_not_equal method)": [[6, "pedal.assertions.runtime.assert_length_not_equal.condition", false]], "condition() (assert_less method)": [[6, "pedal.assertions.runtime.assert_less.condition", false]], "condition() (assert_less_equal method)": [[6, "pedal.assertions.runtime.assert_less_equal.condition", false]], "condition() (assert_not_contains_subset method)": [[6, "pedal.assertions.runtime.assert_not_contains_subset.condition", false]], "condition() (assert_not_equal method)": [[6, "pedal.assertions.runtime.assert_not_equal.condition", false]], "condition() (assert_not_in method)": [[6, "pedal.assertions.runtime.assert_not_in.condition", false]], "condition() (assert_not_is_instance method)": [[6, "pedal.assertions.runtime.assert_not_is_instance.condition", false]], "condition() (assert_not_output method)": [[6, "pedal.assertions.runtime.assert_not_output.condition", false]], "condition() (assert_not_output_contains method)": [[6, "pedal.assertions.runtime.assert_not_output_contains.condition", false]], "condition() (assert_not_output_regex method)": [[6, "pedal.assertions.runtime.assert_not_output_regex.condition", false]], "condition() (assert_not_regex method)": [[6, "pedal.assertions.runtime.assert_not_regex.condition", false]], "condition() (assert_not_type method)": [[6, "pedal.assertions.runtime.assert_not_type.condition", false]], "condition() (assert_output method)": [[6, "pedal.assertions.runtime.assert_output.condition", false]], "condition() (assert_output_contains method)": [[6, "pedal.assertions.runtime.assert_output_contains.condition", false]], "condition() (assert_output_regex method)": [[6, "pedal.assertions.runtime.assert_output_regex.condition", false]], "condition() (assert_regex method)": [[6, "pedal.assertions.runtime.assert_regex.condition", false]], "condition() (assert_true method)": [[6, "pedal.assertions.runtime.assert_true.condition", false]], "condition() (ensure_ast method)": [[6, "pedal.assertions.static.ensure_ast.condition", false]], "condition() (ensure_called_uniquely method)": [[6, "pedal.assertions.runtime.ensure_called_uniquely.condition", false]], "condition() (ensure_coverage method)": [[6, "pedal.assertions.runtime.ensure_coverage.condition", false]], "condition() (ensure_documented_functions method)": [[6, "pedal.assertions.static.ensure_documented_functions.condition", false]], "condition() (ensure_function_call method)": [[6, "pedal.assertions.static.ensure_function_call.condition", false]], "condition() (ensure_functions_return method)": [[6, "pedal.assertions.static.ensure_functions_return.condition", false]], "condition() (ensure_import method)": [[6, "pedal.assertions.static.ensure_import.condition", false]], "condition() (ensure_literal method)": [[6, "pedal.assertions.static.ensure_literal.condition", false]], "condition() (ensure_literal_type method)": [[6, "pedal.assertions.static.ensure_literal_type.condition", false]], "condition() (ensure_operation method)": [[6, "pedal.assertions.static.ensure_operation.condition", false]], "condition() (ensure_show method)": [[8, "pedal.extensions.plotting.ensure_show.condition", false]], "condition() (ensure_starting_code method)": [[6, "pedal.assertions.static.ensure_starting_code.condition", false]], "condition() (feedback method)": [[0, "pedal.core.commands.Feedback.condition", false], [0, "pedal.core.feedback.Feedback.condition", false]], "condition() (only_printing_variables method)": [[6, "pedal.assertions.static.only_printing_variables.condition", false]], "condition() (plt_rename_err method)": [[8, "pedal.extensions.plotting.plt_rename_err.condition", false]], "condition() (plt_wrong_import method)": [[8, "pedal.extensions.plotting.plt_wrong_import.condition", false]], "condition() (prevent_ast method)": [[6, "pedal.assertions.static.prevent_ast.condition", false]], "condition() (prevent_embedded_answer method)": [[6, "pedal.assertions.static.prevent_embedded_answer.condition", false]], "condition() (prevent_function_call method)": [[6, "pedal.assertions.static.prevent_function_call.condition", false]], "condition() (prevent_import method)": [[6, "pedal.assertions.static.prevent_import.condition", false]], "condition() (prevent_literal method)": [[6, "pedal.assertions.static.prevent_literal.condition", false]], "condition() (prevent_literal_type method)": [[6, "pedal.assertions.static.prevent_literal_type.condition", false]], "condition() (prevent_operation method)": [[6, "pedal.assertions.static.prevent_operation.condition", false]], "condition() (prevent_printing_functions method)": [[6, "pedal.assertions.static.prevent_printing_functions.condition", false]], "condition() (wheat_chaff_game_class method)": [[6, "pedal.assertions.commands.wheat_chaff_game_class.condition", false]], "constraint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.CONSTRAINT", false], [0, "pedal.core.feedback_category.FeedbackKind.CONSTRAINT", false]], "context (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.context", false]], "contextualize() (report method)": [[0, "pedal.core.report.Report.contextualize", false]], "contextualize_report()": [[25, "contextualize_report", false]], "contextualize_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.contextualize_report", false]], "correct": [[26, "correct", false]], "correct (feedback attribute)": [[0, "pedal.core.commands.Feedback.correct", false], [0, "pedal.core.feedback.Feedback.correct", false]], "count_unique_calls()": [[29, "count_unique_calls", false]], "count_unique_calls() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.count_unique_calls", false]], "course (submission attribute)": [[0, "pedal.core.submission.Submission.course", false]], "data (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.data", false]], "data_state() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_state", false]], "data_type() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_type", false]], "debug()": [[25, "debug", false]], "debug() (in module pedal.core.commands)": [[0, "pedal.core.commands.debug", false]], "def_use_error() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.def_use_error", false]], "else_message": [[26, "else_message", false]], "else_message (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message", false], [0, "pedal.core.feedback.Feedback.else_message", false]], "else_message_template": [[26, "else_message_template", false]], "else_message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message_template", false], [0, "pedal.core.feedback.Feedback.else_message_template", false]], "end_col (location attribute)": [[0, "pedal.core.location.Location.end_col", false]], "end_line (location attribute)": [[0, "pedal.core.location.Location.end_line", false]], "ensure_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_ast", false]], "ensure_ast()": [[31, "ensure_ast", false]], "ensure_called_uniquely (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_called_uniquely", false]], "ensure_called_uniquely()": [[28, "ensure_called_uniquely", false]], "ensure_correct_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_correct_plot", false]], "ensure_coverage (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_coverage", false]], "ensure_coverage()": [[28, "ensure_coverage", false]], "ensure_dataclass()": [[31, "ensure_dataclass", false]], "ensure_dataclass() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_dataclass", false]], "ensure_documented_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_documented_functions", false]], "ensure_documented_functions()": [[31, "ensure_documented_functions", false]], "ensure_function()": [[31, "ensure_function", false]], "ensure_function() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function", false]], "ensure_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function_call", false]], "ensure_function_call()": [[31, "ensure_function_call", false]], "ensure_function_callable()": [[28, "ensure_function_callable", false]], "ensure_functions_return (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_functions_return", false]], "ensure_functions_return()": [[31, "ensure_functions_return", false]], "ensure_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_import", false]], "ensure_import()": [[31, "ensure_import", false]], "ensure_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal", false]], "ensure_literal()": [[31, "ensure_literal", false]], "ensure_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal_type", false]], "ensure_literal_type()": [[31, "ensure_literal_type", false]], "ensure_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operation", false]], "ensure_operation()": [[31, "ensure_operation", false]], "ensure_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operator", false]], "ensure_operator()": [[31, "ensure_operator", false]], "ensure_prints_exactly()": [[31, "ensure_prints_exactly", false]], "ensure_prints_exactly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_prints_exactly", false]], "ensure_show (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_show", false]], "ensure_starting_code (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_starting_code", false]], "ensure_starting_code()": [[31, "ensure_starting_code", false]], "environment": [[14, "term-Environment", true]], "environment (class in pedal.core.environment)": [[0, "pedal.core.environment.Environment", false]], "error": [[12, "term-Error", true]], "evaluate()": [[29, "evaluate", false]], "evaluate() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.evaluate", false]], "evaluate() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.evaluate", false]], "exception (formatter attribute)": [[27, "Formatter.exception", false]], "exception (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception", false]], "exception (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.exception", false]], "exception_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_message", false]], "exception_name (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_name", false]], "execute_hooks() (report method)": [[0, "pedal.core.report.Report.execute_hooks", false]], "execution (submission attribute)": [[0, "pedal.core.submission.Submission.execution", false]], "expire_cait_cache() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.expire_cait_cache", false]], "explain (class in pedal.core.commands)": [[0, "pedal.core.commands.explain", false]], "explain()": [[25, "explain", false]], "feedback": [[14, "term-Feedback", true]], "feedback (class in pedal.core.commands)": [[0, "pedal.core.commands.Feedback", false]], "feedback (class in pedal.core.feedback)": [[0, "pedal.core.feedback.Feedback", false]], "feedback (in module pedal.core.commands)": [[0, "pedal.core.commands.feedback", false]], "feedback (report attribute)": [[0, "pedal.core.report.Report.feedback", false]], "feedback (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.feedback", false]], "feedback category": [[14, "term-Feedback-Category", true]], "feedback condition": [[14, "term-Feedback-Condition", true]], "feedback function": [[14, "term-Feedback-Function", true]], "feedback kind": [[14, "term-Feedback-Kind", true]], "feedback label": [[14, "term-Feedback-Label", true]], "feedback response": [[14, "term-Feedback-Response", true]], "feedbackcategory (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackCategory", false]], "feedbackcategory (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackCategory", false]], "feedbackkind (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackKind", false]], "feedbackkind (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackKind", false]], "feedbackresponse (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackResponse", false]], "feedbackstatus (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackStatus", false]], "field_names": [[26, "field_names", false]], "fields": [[26, "fields", false]], "fields (feedback attribute)": [[0, "pedal.core.commands.Feedback.fields", false], [0, "pedal.core.feedback.Feedback.fields", false]], "filename (formatter attribute)": [[27, "Formatter.filename", false]], "filename (location attribute)": [[0, "pedal.core.location.Location.filename", false]], "files (submission attribute)": [[0, "pedal.core.submission.Submission.files", false]], "files_not_handled_correctly()": [[31, "files_not_handled_correctly", false]], "files_not_handled_correctly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.files_not_handled_correctly", false]], "find_asts() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_asts", false]], "find_expr_sub_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_expr_sub_matches", false]], "find_function_calls() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_calls", false]], "find_function_definition() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_definition", false]], "find_match() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_match", false]], "find_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_matches", false]], "find_operation() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_operation", false]], "find_prior_initializations() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_prior_initializations", false]], "find_submatches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_submatches", false]], "format_assertion() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.format_assertion", false]], "format_assertion() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.format_assertion", false]], "formatter (built-in class)": [[27, "Formatter", false]], "frame (formatter attribute)": [[27, "Formatter.frame", false]], "from_ast() (location class method)": [[0, "pedal.core.location.Location.from_ast", false]], "full_clear() (report method)": [[0, "pedal.core.report.Report.full_clear", false]], "fully qualified name": [[12, "term-Fully-Qualified-Name", true]], "function_is_called() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.function_is_called", false]], "function_prints()": [[31, "function_prints", false]], "function_prints() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.function_prints", false]], "functions (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.functions", false]], "gently (class in pedal.core.commands)": [[0, "pedal.core.commands.gently", false]], "gently()": [[25, "gently", false]], "get_all_feedback()": [[25, "get_all_feedback", false]], "get_all_feedback() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_all_feedback", false]], "get_call_arguments()": [[29, "get_call_arguments", false]], "get_call_arguments() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_call_arguments", false]], "get_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_context", false]], "get_exception()": [[29, "get_exception", false]], "get_exception() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_exception", false]], "get_files_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_files_lines", false]], "get_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_function", false]], "get_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_function", false]], "get_input()": [[29, "get_input", false]], "get_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_input", false]], "get_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_lines", false]], "get_module()": [[29, "get_module", false]], "get_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_module", false]], "get_names_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_names_by_type", false]], "get_original_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_original_program", false]], "get_output()": [[29, "get_output", false]], "get_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_output", false]], "get_plots() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.get_plots", false]], "get_program()": [[30, "get_program", false]], "get_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_program", false]], "get_python_errors()": [[29, "get_python_errors", false]], "get_python_errors() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_python_errors", false]], "get_raw_output()": [[29, "get_raw_output", false]], "get_raw_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_raw_output", false]], "get_sandbox()": [[29, "get_sandbox", false]], "get_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_sandbox", false]], "get_student_data()": [[29, "get_student_data", false]], "get_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_student_data", false]], "get_submission() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_submission", false]], "get_trace()": [[29, "get_trace", false]], "get_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_trace", false]], "get_values_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_values_by_type", false]], "get_variables_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_variables_by_type", false]], "give_partial (class in pedal.core.commands)": [[0, "pedal.core.commands.give_partial", false]], "give_partial()": [[25, "give_partial", false]], "group (report attribute)": [[0, "pedal.core.report.Report.group", false]], "group_names (report attribute)": [[0, "pedal.core.report.Report.group_names", false]], "guidance (class in pedal.core.commands)": [[0, "pedal.core.commands.guidance", false]], "guidance()": [[25, "guidance", false]], "has_import() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.has_import", false]], "hiddens (report attribute)": [[0, "pedal.core.report.Report.hiddens", false]], "hide_correctness()": [[25, "hide_correctness", false]], "hide_correctness() (in module pedal.core.commands)": [[0, "pedal.core.commands.hide_correctness", false]], "hide_correctness() (report method)": [[0, "pedal.core.report.Report.hide_correctness", false]], "hint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.HINT", false], [0, "pedal.core.feedback_category.FeedbackKind.HINT", false]], "hooks (report attribute)": [[0, "pedal.core.report.Report.hooks", false]], "htmlformatter (built-in class)": [[27, "HtmlFormatter", false]], "identifier": [[12, "term-Identifier", true]], "import_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.import_error", false]], "indent() (formatter method)": [[27, "Formatter.indent", false]], "indentation_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.indentation_error", false]], "index_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.index_error", false]], "inputs (formatter attribute)": [[27, "Formatter.inputs", false]], "inputs (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.inputs", false]], "instructions (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTIONS", false], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTIONS", false]], "instructor (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTOR", false], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTOR", false]], "instructor control script": [[14, "term-Instructor-Control-Script", true]], "io_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.io_error", false]], "is_top_level() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.is_top_level", false]], "issue": [[12, "term-Issue", true]], "justification": [[26, "justification", false]], "justification (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification", false], [0, "pedal.core.feedback.Feedback.justification", false]], "justification_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification_template", false], [0, "pedal.core.feedback.Feedback.justification_template", false]], "key_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.key_error", false]], "kind": [[26, "kind", false]], "kind (feedback attribute)": [[0, "pedal.core.commands.Feedback.kind", false], [0, "pedal.core.feedback.Feedback.kind", false]], "kinds (feedback attribute)": [[0, "pedal.core.commands.Feedback.KINDS", false], [0, "pedal.core.feedback.Feedback.KINDS", false]], "label": [[26, "label", false]], "label (feedback attribute)": [[0, "pedal.core.commands.Feedback.label", false], [0, "pedal.core.feedback.Feedback.label", false]], "line (formatter attribute)": [[27, "Formatter.line", false]], "line (location attribute)": [[0, "pedal.core.location.Location.line", false]], "literal": [[12, "term-Literal", true]], "location (class in pedal.core.location)": [[0, "pedal.core.location.Location", false]], "location (feedback attribute)": [[0, "pedal.core.commands.Feedback.location", false], [0, "pedal.core.feedback.Feedback.location", false]], "log()": [[25, "log", false]], "log() (in module pedal.core.commands)": [[0, "pedal.core.commands.log", false]], "main report": [[14, "term-Main-Report", true]], "main_code (submission attribute)": [[0, "pedal.core.submission.Submission.main_code", false]], "main_file (submission attribute)": [[0, "pedal.core.submission.Submission.main_file", false]], "main_report (in module pedal.core.report)": [[0, "pedal.core.report.MAIN_REPORT", false]], "make_safe_variable() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.make_safe_variable", false]], "maximum_temporary_length (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.MAXIMUM_TEMPORARY_LENGTH", false]], "memory_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.memory_error", false]], "message": [[26, "message", false]], "message (feedback attribute)": [[0, "pedal.core.commands.Feedback.message", false], [0, "pedal.core.feedback.Feedback.message", false]], "message_template": [[26, "message_template", false]], "message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.message_template", false], [0, "pedal.core.feedback.Feedback.message_template", false]], "metacognitive (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.METACOGNITIVE", false], [0, "pedal.core.feedback_category.FeedbackKind.METACOGNITIVE", false]], "misconception (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISCONCEPTION", false], [0, "pedal.core.feedback_category.FeedbackKind.MISCONCEPTION", false]], "mistake (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISTAKE", false], [0, "pedal.core.feedback_category.FeedbackKind.MISTAKE", false]], "mistakes (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.MISTAKES", false], [0, "pedal.core.feedback_category.FeedbackCategory.MISTAKES", false]], "mock_function()": [[29, "mock_function", false]], "mock_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_function", false]], "mock_module()": [[29, "mock_module", false]], "mock_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_module", false]], "mock_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.mock_module", false]], "module": [[0, "module-pedal.core.commands", false], [0, "module-pedal.core.environment", false], [0, "module-pedal.core.feedback", false], [0, "module-pedal.core.feedback_category", false], [0, "module-pedal.core.location", false], [0, "module-pedal.core.report", false], [0, "module-pedal.core.submission", false], [0, "module-pedal.core.tool", false], [6, "module-pedal.assertions", false], [6, "module-pedal.assertions.commands", false], [6, "module-pedal.assertions.runtime", false], [6, "module-pedal.assertions.static", false], [7, "module-pedal.cait", false], [7, "module-pedal.cait.cait_api", false], [7, "module-pedal.cait.find_node", false], [8, "module-pedal.extensions.plotting", false], [8, "module-pedal.extensions.turtles", false], [9, "module-pedal.questions.setup", false], [10, "module-pedal.sandbox", false], [10, "module-pedal.sandbox.commands", false], [10, "module-pedal.sandbox.feedbacks", false], [10, "module-pedal.sandbox.sandbox", false], [11, "module-pedal.source.source", false], [12, "module-pedal.tifa", false]], "muted": [[26, "muted", false]], "muted (feedback attribute)": [[0, "pedal.core.commands.Feedback.muted", false], [0, "pedal.core.feedback.Feedback.muted", false]], "name": [[12, "term-Name", true]], "name (formatter attribute)": [[27, "Formatter.name", false]], "name (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.name", false]], "name map": [[12, "term-Name-Map", true]], "name_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.name_error", false]], "negative_mark() (formatter method)": [[27, "Formatter.negative_mark", false]], "next_section()": [[30, "next_section", false]], "no_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.no_plt", false]], "only_printing_variables (class in pedal.assertions.static)": [[6, "pedal.assertions.static.only_printing_variables", false]], "only_printing_variables()": [[31, "only_printing_variables", false]], "open_without_arguments (class in pedal.assertions.static)": [[6, "pedal.assertions.static.open_without_arguments", false]], "other_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.other_plt", false]], "output (formatter attribute)": [[27, "Formatter.output", false]], "output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.output", false]], "parent (feedback attribute)": [[0, "pedal.core.commands.Feedback.parent", false], [0, "pedal.core.feedback.Feedback.parent", false]], "parse_program() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.parse_program", false]], "path": [[12, "term-Path", true]], "pedal.assertions": [[6, "module-pedal.assertions", false]], "pedal.assertions.commands": [[6, "module-pedal.assertions.commands", false]], "pedal.assertions.runtime": [[6, "module-pedal.assertions.runtime", false]], "pedal.assertions.static": [[6, "module-pedal.assertions.static", false]], "pedal.cait": [[7, "module-pedal.cait", false]], "pedal.cait.cait_api": [[7, "module-pedal.cait.cait_api", false]], "pedal.cait.find_node": [[7, "module-pedal.cait.find_node", false]], "pedal.core.commands": [[0, "module-pedal.core.commands", false]], "pedal.core.environment": [[0, "module-pedal.core.environment", false]], "pedal.core.feedback": [[0, "module-pedal.core.feedback", false]], "pedal.core.feedback_category": [[0, "module-pedal.core.feedback_category", false]], "pedal.core.location": [[0, "module-pedal.core.location", false]], "pedal.core.report": [[0, "module-pedal.core.report", false]], "pedal.core.submission": [[0, "module-pedal.core.submission", false]], "pedal.core.tool": [[0, "module-pedal.core.tool", false]], "pedal.extensions.plotting": [[8, "module-pedal.extensions.plotting", false]], "pedal.extensions.turtles": [[8, "module-pedal.extensions.turtles", false]], "pedal.questions.setup": [[9, "module-pedal.questions.setup", false]], "pedal.sandbox": [[10, "module-pedal.sandbox", false]], "pedal.sandbox.commands": [[10, "module-pedal.sandbox.commands", false]], "pedal.sandbox.feedbacks": [[10, "module-pedal.sandbox.feedbacks", false]], "pedal.sandbox.sandbox": [[10, "module-pedal.sandbox.sandbox", false]], "pedal.source.source": [[11, "module-pedal.source.source", false]], "pedal.tifa": [[12, "module-pedal.tifa", false]], "plots (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.plots", false]], "plt_rename_err (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_rename_err", false]], "plt_wrong_import (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_wrong_import", false]], "positive (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.POSITIVE", false], [0, "pedal.core.feedback_category.FeedbackCategory.POSITIVE", false]], "prevent_advanced_iteration()": [[31, "prevent_advanced_iteration", false]], "prevent_advanced_iteration() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_advanced_iteration", false]], "prevent_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_ast", false]], "prevent_ast()": [[31, "prevent_ast", false]], "prevent_embedded_answer (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_embedded_answer", false]], "prevent_embedded_answer()": [[31, "prevent_embedded_answer", false]], "prevent_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_function_call", false]], "prevent_function_call()": [[31, "prevent_function_call", false]], "prevent_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_import", false]], "prevent_import()": [[31, "prevent_import", false]], "prevent_incorrect_plt() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.prevent_incorrect_plt", false]], "prevent_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal", false]], "prevent_literal()": [[31, "prevent_literal", false]], "prevent_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal_type", false]], "prevent_literal_type()": [[31, "prevent_literal_type", false]], "prevent_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operation", false]], "prevent_operation()": [[31, "prevent_operation", false]], "prevent_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operator", false]], "prevent_operator()": [[31, "prevent_operator", false]], "prevent_printing_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_printing_functions", false]], "prevent_printing_functions()": [[31, "prevent_printing_functions", false]], "priority": [[26, "priority", false]], "priority (feedback attribute)": [[0, "pedal.core.commands.Feedback.priority", false], [0, "pedal.core.feedback.Feedback.priority", false]], "process_ast() (tifa method)": [[12, "pedal.tifa.Tifa.process_ast", false]], "process_code() (tifa method)": [[12, "pedal.tifa.Tifa.process_code", false]], "python_code (formatter attribute)": [[27, "Formatter.python_code", false]], "python_expression (formatter attribute)": [[27, "Formatter.python_expression", false]], "python_value (formatter attribute)": [[27, "Formatter.python_value", false]], "queue_input()": [[29, "queue_input", false]], "queue_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.queue_input", false]], "raw_output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.raw_output", false]], "register_tool() (report class method)": [[0, "pedal.core.report.Report.register_tool", false]], "reparse_if_needed() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reparse_if_needed", false]], "replace_main() (submission method)": [[0, "pedal.core.submission.Submission.replace_main", false]], "report": [[14, "term-Report", true]], "report (class in pedal.core.report)": [[0, "pedal.core.report.Report", false]], "report (feedback attribute)": [[0, "pedal.core.commands.Feedback.report", false], [0, "pedal.core.feedback.Feedback.report", false]], "require_tifa() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.require_tifa", false]], "reset (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.reset", false]], "reset() (in module pedal.assertions)": [[6, "pedal.assertions.reset", false]], "reset() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reset", false]], "reset() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.reset", false]], "reset() (in module pedal.sandbox)": [[10, "pedal.sandbox.reset", false]], "reset() (in module pedal.source.source)": [[11, "pedal.source.source.reset", false]], "reset_default_overrides() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.reset_default_overrides", false]], "reset_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.reset_output", false]], "resolver": [[14, "term-Resolver", true]], "resolves (report attribute)": [[0, "pedal.core.report.Report.resolves", false]], "restore_code()": [[30, "restore_code", false]], "restore_code() (in module pedal.source.source)": [[11, "pedal.source.source.restore_code", false]], "result (report attribute)": [[0, "pedal.core.report.Report.result", false]], "result (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.result", false]], "run()": [[29, "run", false]], "run() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.run", false]], "run() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.run", false]], "runtime (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.RUNTIME", false], [0, "pedal.core.feedback_category.FeedbackCategory.RUNTIME", false]], "runtime_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.runtime_error", false]], "sandbox (built-in class)": [[29, "Sandbox", false]], "sandbox (class in pedal.sandbox.sandbox)": [[10, "pedal.sandbox.sandbox.Sandbox", false]], "scope": [[12, "term-Scope", true]], "scope chain": [[12, "term-Scope-Chain", true]], "score": [[26, "score", false]], "score (feedback attribute)": [[0, "pedal.core.commands.Feedback.score", false], [0, "pedal.core.feedback.Feedback.score", false]], "separate_into_sections()": [[30, "separate_into_sections", false]], "set_correct (class in pedal.core.commands)": [[0, "pedal.core.commands.set_correct", false]], "set_formatter() (in module pedal.core.commands)": [[0, "pedal.core.commands.set_formatter", false]], "set_formatter() (report method)": [[0, "pedal.core.report.Report.set_formatter", false]], "set_input()": [[29, "set_input", false]], "set_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.set_input", false]], "set_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_input", false]], "set_line_offset() (submission method)": [[0, "pedal.core.submission.Submission.set_line_offset", false]], "set_seed() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.set_seed", false]], "set_source()": [[30, "set_source", false]], "set_source() (in module pedal.source.source)": [[11, "pedal.source.source.set_source", false]], "set_source_file() (in module pedal.source.source)": [[11, "pedal.source.source.set_source_file", false]], "set_student_data() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_student_data", false]], "set_success (in module pedal.core.commands)": [[0, "pedal.core.commands.set_success", false]], "set_success()": [[25, "set_success", false]], "specification (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SPECIFICATION", false], [0, "pedal.core.feedback_category.FeedbackCategory.SPECIFICATION", false]], "start_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.start_grouping_context", false]], "start_trace()": [[29, "start_trace", false]], "start_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.start_trace", false]], "state": [[12, "term-State", true]], "stop_group() (report method)": [[0, "pedal.core.report.Report.stop_group", false]], "stop_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.stop_grouping_context", false]], "stop_sections()": [[30, "stop_sections", false]], "stop_trace()": [[29, "stop_trace", false]], "stop_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.stop_trace", false]], "student (built-in variable)": [[29, "student", false]], "student (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STUDENT", false], [0, "pedal.core.feedback_category.FeedbackCategory.STUDENT", false]], "style (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STYLE", false], [0, "pedal.core.feedback_category.FeedbackCategory.STYLE", false]], "submission": [[14, "term-Submission", true]], "submission (class in pedal.core.submission)": [[0, "pedal.core.submission.Submission", false]], "submission (report attribute)": [[0, "pedal.core.report.Report.submission", false]], "suppress()": [[25, "suppress", false]], "suppress() (in module pedal.core.commands)": [[0, "pedal.core.commands.suppress", false]], "suppress() (report method)": [[0, "pedal.core.report.Report.suppress", false]], "suppressions (report attribute)": [[0, "pedal.core.report.Report.suppressions", false]], "syntax (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYNTAX", false], [0, "pedal.core.feedback_category.FeedbackCategory.SYNTAX", false]], "system (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYSTEM", false], [0, "pedal.core.feedback_category.FeedbackCategory.SYSTEM", false]], "system_error (class in pedal.core.commands)": [[0, "pedal.core.commands.system_error", false]], "table() (formatter method)": [[27, "Formatter.table", false]], "tags (feedback attribute)": [[0, "pedal.core.commands.Feedback.tags", false], [0, "pedal.core.feedback.Feedback.tags", false]], "target (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.target", false]], "textformatter (built-in class)": [[27, "TextFormatter", false]], "tifa (class in pedal.tifa)": [[12, "pedal.tifa.Tifa", false]], "tifa_analysis()": [[32, "tifa_analysis", false]], "tifa_analysis() (in module pedal.tifa)": [[12, "pedal.tifa.tifa_analysis", false]], "timeout_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.timeout_error", false]], "title": [[26, "title", false]], "title (feedback attribute)": [[0, "pedal.core.commands.Feedback.title", false], [0, "pedal.core.feedback.Feedback.title", false]], "to_json() (location method)": [[0, "pedal.core.location.Location.to_json", false]], "tool": [[14, "term-Tool", true], [26, "tool", false]], "tool (feedback attribute)": [[0, "pedal.core.commands.Feedback.tool", false], [0, "pedal.core.feedback.Feedback.tool", false]], "toolregistration (class in pedal.core.tool)": [[0, "pedal.core.tool.ToolRegistration", false]], "tools (report attribute)": [[0, "pedal.core.report.Report.TOOLS", false]], "traceback (formatter attribute)": [[27, "Formatter.traceback", false]], "traceback (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback", false]], "traceback_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback_message", false]], "tracer_style (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.tracer_style", false]], "turtles (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.turtles", false]], "type": [[12, "term-Type", true]], "type_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.type_error", false]], "unit_test()": [[28, "unit_test", false]], "unit_test() (in module pedal.assertions.commands)": [[6, "pedal.assertions.commands.unit_test", false]], "unknown (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.UNKNOWN", false], [0, "pedal.core.feedback_category.FeedbackCategory.UNKNOWN", false]], "unscored": [[26, "unscored", false]], "unscored (feedback attribute)": [[0, "pedal.core.commands.Feedback.unscored", false], [0, "pedal.core.feedback.Feedback.unscored", false]], "update_location() (feedback method)": [[0, "pedal.core.commands.Feedback.update_location", false], [0, "pedal.core.feedback.Feedback.update_location", false]], "user (submission attribute)": [[0, "pedal.core.submission.Submission.user", false]], "valence (feedback attribute)": [[0, "pedal.core.commands.Feedback.valence", false], [0, "pedal.core.feedback.Feedback.valence", false]], "value_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.value_error", false]], "var (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.var", false]], "verify()": [[30, "verify", false]], "verify() (in module pedal.source.source)": [[11, "pedal.source.source.verify", false]], "verify_section() (in module pedal.source.source)": [[11, "pedal.source.source.verify_section", false]], "version (feedback attribute)": [[0, "pedal.core.commands.Feedback.version", false], [0, "pedal.core.feedback.Feedback.version", false]], "visit() (tifa method)": [[12, "pedal.tifa.Tifa.visit", false]], "visit_annassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AnnAssign", false]], "visit_assign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Assign", false]], "visit_attribute() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Attribute", false]], "visit_augassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AugAssign", false]], "visit_binop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BinOp", false]], "visit_bool() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Bool", false]], "visit_boolop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BoolOp", false]], "visit_classdef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ClassDef", false]], "visit_compare() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Compare", false]], "visit_comprehension() (tifa method)": [[12, "pedal.tifa.Tifa.visit_comprehension", false]], "visit_constant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Constant", false]], "visit_dict() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Dict", false]], "visit_dictcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_DictComp", false]], "visit_expr() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Expr", false]], "visit_for() (tifa method)": [[12, "pedal.tifa.Tifa.visit_For", false]], "visit_functiondef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_FunctionDef", false]], "visit_generatorexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_GeneratorExp", false]], "visit_if() (tifa method)": [[12, "pedal.tifa.Tifa.visit_If", false]], "visit_ifexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_IfExp", false]], "visit_import() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Import", false]], "visit_importfrom() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ImportFrom", false]], "visit_lambda() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Lambda", false]], "visit_list() (tifa method)": [[12, "pedal.tifa.Tifa.visit_List", false]], "visit_listcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ListComp", false]], "visit_name() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Name", false]], "visit_nameconstant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_NameConstant", false]], "visit_num() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Num", false]], "visit_return() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Return", false]], "visit_setcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_SetComp", false]], "visit_slice() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Slice", false]], "visit_statements() (tifa method)": [[12, "pedal.tifa.Tifa.visit_statements", false]], "visit_str() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Str", false]], "visit_subscript() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Subscript", false]], "visit_unaryop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_UnaryOp", false]], "visit_while() (tifa method)": [[12, "pedal.tifa.Tifa.visit_While", false]], "visit_with() (tifa method)": [[12, "pedal.tifa.Tifa.visit_With", false]], "wheat_chaff_game_class (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.wheat_chaff_game_class", false]], "wrong_plt_data (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_data", false]], "wrong_plt_type (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_type", false]], "zero_division_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.zero_division_error", false]]}, "objects": {"": [[29, 0, 1, "", "CommandBlock"], [27, 0, 1, "", "Formatter"], [27, 0, 1, "", "HtmlFormatter"], [29, 0, 1, "", "Sandbox"], [27, 0, 1, "", "TextFormatter"], [26, 2, 1, "", "activate"], [29, 3, 1, "", "allow_function"], [29, 3, 1, "", "allow_module"], [29, 3, 1, "", "allow_real_io"], [28, 3, 1, "", "assert_contains_subset"], [28, 3, 1, "", "assert_equal"], [28, 3, 1, "", "assert_false"], [28, 3, 1, "", "assert_greater"], [28, 3, 1, "", "assert_greater_equal"], [28, 3, 1, "", "assert_has_attr"], [28, 3, 1, "", "assert_has_function"], [28, 3, 1, "", "assert_has_variable"], [28, 3, 1, "", "assert_in"], [28, 3, 1, "", "assert_is"], [28, 3, 1, "", "assert_is_dataclass"], [28, 3, 1, "", "assert_is_instance"], [28, 3, 1, "", "assert_is_none"], [28, 3, 1, "", "assert_is_not"], [28, 3, 1, "", "assert_is_not_dataclass"], [28, 3, 1, "", "assert_is_not_instance"], [28, 3, 1, "", "assert_is_not_none"], [28, 3, 1, "", "assert_length_equal"], [28, 3, 1, "", "assert_length_greater"], [28, 3, 1, "", "assert_length_greater_equal"], [28, 3, 1, "", "assert_length_less"], [28, 3, 1, "", "assert_length_less_equal"], [28, 3, 1, "", "assert_length_not_equal"], [28, 3, 1, "", "assert_less"], [28, 3, 1, "", "assert_less_equal"], [28, 3, 1, "", "assert_not_contains_subset"], [28, 3, 1, "", "assert_not_equal"], [28, 3, 1, "", "assert_not_in"], [28, 3, 1, "", "assert_not_output"], [28, 3, 1, "", "assert_not_output_contains"], [28, 3, 1, "", "assert_not_regex"], [28, 3, 1, "", "assert_not_type"], [28, 3, 1, "", "assert_output"], [28, 3, 1, "", "assert_output_contains"], [28, 3, 1, "", "assert_regex"], [28, 3, 1, "", "assert_true"], [28, 3, 1, "", "assert_type"], [29, 3, 1, "", "block_function"], [29, 3, 1, "", "block_module"], [29, 3, 1, "", "block_real_io"], [29, 3, 1, "", "call"], [26, 2, 1, "", "category"], [29, 3, 1, "", "check_coverage"], [28, 3, 1, "", "check_dataclass_instance"], [30, 3, 1, "", "check_section_exists"], [29, 3, 1, "", "clear_input"], [29, 3, 1, "", "clear_mocks"], [29, 3, 1, "", "clear_output"], [25, 3, 1, "", "clear_report"], [29, 3, 1, "", "clear_sandbox"], [29, 3, 1, "", "clear_student_data"], [25, 3, 1, "", "compliment"], [25, 3, 1, "", "contextualize_report"], [26, 2, 1, "", "correct"], [29, 3, 1, "", "count_unique_calls"], [25, 3, 1, "", "debug"], [26, 2, 1, "", "else_message"], [26, 2, 1, "", "else_message_template"], [31, 3, 1, "", "ensure_ast"], [28, 3, 1, "", "ensure_called_uniquely"], [28, 3, 1, "", "ensure_coverage"], [31, 3, 1, "", "ensure_dataclass"], [31, 3, 1, "", "ensure_documented_functions"], [31, 3, 1, "", "ensure_function"], [31, 3, 1, "", "ensure_function_call"], [28, 3, 1, "", "ensure_function_callable"], [31, 3, 1, "", "ensure_functions_return"], [31, 3, 1, "", "ensure_import"], [31, 3, 1, "", "ensure_literal"], [31, 3, 1, "", "ensure_literal_type"], [31, 3, 1, "", "ensure_operation"], [31, 3, 1, "", "ensure_operator"], [31, 3, 1, "", "ensure_prints_exactly"], [31, 3, 1, "", "ensure_starting_code"], [29, 3, 1, "", "evaluate"], [25, 3, 1, "", "explain"], [26, 2, 1, "", "field_names"], [26, 2, 1, "", "fields"], [31, 3, 1, "", "files_not_handled_correctly"], [31, 3, 1, "", "function_prints"], [25, 3, 1, "", "gently"], [25, 3, 1, "", "get_all_feedback"], [29, 3, 1, "", "get_call_arguments"], [29, 3, 1, "", "get_exception"], [29, 3, 1, "", "get_input"], [29, 3, 1, "", "get_module"], [29, 3, 1, "", "get_output"], [30, 3, 1, "", "get_program"], [29, 3, 1, "", "get_python_errors"], [29, 3, 1, "", "get_raw_output"], [29, 3, 1, "", "get_sandbox"], [29, 3, 1, "", "get_student_data"], [29, 3, 1, "", "get_trace"], [25, 3, 1, "", "give_partial"], [25, 3, 1, "", "guidance"], [25, 3, 1, "", "hide_correctness"], [26, 2, 1, "", "justification"], [26, 2, 1, "", "kind"], [26, 2, 1, "", "label"], [25, 3, 1, "", "log"], [26, 2, 1, "", "message"], [26, 2, 1, "", "message_template"], [29, 3, 1, "", "mock_function"], [29, 3, 1, "", "mock_module"], [26, 2, 1, "", "muted"], [30, 3, 1, "", "next_section"], [31, 3, 1, "", "only_printing_variables"], [31, 3, 1, "", "prevent_advanced_iteration"], [31, 3, 1, "", "prevent_ast"], [31, 3, 1, "", "prevent_embedded_answer"], [31, 3, 1, "", "prevent_function_call"], [31, 3, 1, "", "prevent_import"], [31, 3, 1, "", "prevent_literal"], [31, 3, 1, "", "prevent_literal_type"], [31, 3, 1, "", "prevent_operation"], [31, 3, 1, "", "prevent_operator"], [31, 3, 1, "", "prevent_printing_functions"], [26, 2, 1, "", "priority"], [29, 3, 1, "", "queue_input"], [30, 3, 1, "", "restore_code"], [29, 3, 1, "", "run"], [26, 2, 1, "", "score"], [30, 3, 1, "", "separate_into_sections"], [29, 3, 1, "", "set_input"], [30, 3, 1, "", "set_source"], [25, 3, 1, "", "set_success"], [29, 3, 1, "", "start_trace"], [30, 3, 1, "", "stop_sections"], [29, 3, 1, "", "stop_trace"], [29, 6, 1, "", "student"], [25, 3, 1, "", "suppress"], [32, 3, 1, "", "tifa_analysis"], [26, 2, 1, "", "title"], [26, 2, 1, "", "tool"], [28, 3, 1, "", "unit_test"], [26, 2, 1, "", "unscored"], [30, 3, 1, "", "verify"]], "Formatter": [[27, 1, 1, "", "check_mark"], [27, 2, 1, "", "exception"], [27, 2, 1, "", "filename"], [27, 2, 1, "", "frame"], [27, 1, 1, "", "indent"], [27, 2, 1, "", "inputs"], [27, 2, 1, "", "line"], [27, 2, 1, "", "name"], [27, 1, 1, "", "negative_mark"], [27, 2, 1, "", "output"], [27, 2, 1, "", "python_code"], [27, 2, 1, "", "python_expression"], [27, 2, 1, "", "python_value"], [27, 1, 1, "", "table"], [27, 2, 1, "", "traceback"]], "pedal": [[6, 4, 0, "-", "assertions"], [7, 4, 0, "-", "cait"], [10, 4, 0, "-", "sandbox"], [12, 4, 0, "-", "tifa"]], "pedal.assertions": [[6, 4, 0, "-", "commands"], [6, 3, 1, "", "reset"], [6, 4, 0, "-", "runtime"], [6, 4, 0, "-", "static"]], "pedal.assertions.commands": [[6, 0, 1, "", "check_dataclass_error"], [6, 3, 1, "", "unit_test"], [6, 0, 1, "", "wheat_chaff_game_class"]], "pedal.assertions.commands.wheat_chaff_game_class": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime": [[6, 2, 1, "", "assertAlmostEqual"], [6, 2, 1, "", "assertEqual"], [6, 2, 1, "", "assertFalse"], [6, 2, 1, "", "assertGreater"], [6, 2, 1, "", "assertGreaterEqual"], [6, 2, 1, "", "assertHasAttr"], [6, 2, 1, "", "assertHasFunction"], [6, 2, 1, "", "assertHasVariable"], [6, 2, 1, "", "assertIn"], [6, 2, 1, "", "assertIs"], [6, 2, 1, "", "assertIsInstance"], [6, 2, 1, "", "assertIsNone"], [6, 2, 1, "", "assertIsNot"], [6, 2, 1, "", "assertIsNotInstance"], [6, 2, 1, "", "assertIsNotNone"], [6, 2, 1, "", "assertLengthEqual"], [6, 2, 1, "", "assertLengthGreater"], [6, 2, 1, "", "assertLengthGreaterEqual"], [6, 2, 1, "", "assertLengthLess"], [6, 2, 1, "", "assertLengthLessEqual"], [6, 2, 1, "", "assertLengthNotEqual"], [6, 2, 1, "", "assertLess"], [6, 2, 1, "", "assertLessEqual"], [6, 2, 1, "", "assertNotAlmostEqual"], [6, 2, 1, "", "assertNotEqual"], [6, 2, 1, "", "assertNotIn"], [6, 2, 1, "", "assertNotOutput"], [6, 2, 1, "", "assertNotOutputContains"], [6, 2, 1, "", "assertNotRegex"], [6, 2, 1, "", "assertNotType"], [6, 2, 1, "", "assertOutput"], [6, 2, 1, "", "assertOutputContains"], [6, 2, 1, "", "assertPrints"], [6, 2, 1, "", "assertRegex"], [6, 2, 1, "", "assertTrue"], [6, 2, 1, "", "assertType"], [6, 0, 1, "", "assert_almost_equal"], [6, 0, 1, "", "assert_contains_subset"], [6, 0, 1, "", "assert_equal"], [6, 0, 1, "", "assert_false"], [6, 0, 1, "", "assert_greater"], [6, 0, 1, "", "assert_greater_equal"], [6, 0, 1, "", "assert_has_attr"], [6, 0, 1, "", "assert_has_function"], [6, 0, 1, "", "assert_has_variable"], [6, 0, 1, "", "assert_in"], [6, 0, 1, "", "assert_is"], [6, 0, 1, "", "assert_is_dataclass"], [6, 0, 1, "", "assert_is_instance"], [6, 0, 1, "", "assert_is_none"], [6, 0, 1, "", "assert_is_not"], [6, 0, 1, "", "assert_is_not_dataclass"], [6, 0, 1, "", "assert_is_not_none"], [6, 0, 1, "", "assert_length_equal"], [6, 0, 1, "", "assert_length_greater"], [6, 0, 1, "", "assert_length_greater_equal"], [6, 0, 1, "", "assert_length_less"], [6, 0, 1, "", "assert_length_less_equal"], [6, 0, 1, "", "assert_length_not_equal"], [6, 0, 1, "", "assert_less"], [6, 0, 1, "", "assert_less_equal"], [6, 0, 1, "", "assert_not_almost_equal"], [6, 0, 1, "", "assert_not_contains_subset"], [6, 0, 1, "", "assert_not_equal"], [6, 0, 1, "", "assert_not_in"], [6, 0, 1, "", "assert_not_is_instance"], [6, 0, 1, "", "assert_not_output"], [6, 0, 1, "", "assert_not_output_contains"], [6, 0, 1, "", "assert_not_output_regex"], [6, 0, 1, "", "assert_not_regex"], [6, 0, 1, "", "assert_not_type"], [6, 0, 1, "", "assert_output"], [6, 0, 1, "", "assert_output_contains"], [6, 0, 1, "", "assert_output_regex"], [6, 0, 1, "", "assert_prints"], [6, 0, 1, "", "assert_regex"], [6, 0, 1, "", "assert_true"], [6, 0, 1, "", "assert_type"], [6, 0, 1, "", "ensure_called_uniquely"], [6, 0, 1, "", "ensure_coverage"]], "pedal.assertions.runtime.assert_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_false": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_attr": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_function": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_has_variable": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_true": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_called_uniquely": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_coverage": [[6, 1, 1, "", "condition"]], "pedal.assertions.static": [[6, 0, 1, "", "ensure_ast"], [6, 3, 1, "", "ensure_dataclass"], [6, 0, 1, "", "ensure_documented_functions"], [6, 3, 1, "", "ensure_function"], [6, 0, 1, "", "ensure_function_call"], [6, 0, 1, "", "ensure_functions_return"], [6, 0, 1, "", "ensure_import"], [6, 0, 1, "", "ensure_literal"], [6, 0, 1, "", "ensure_literal_type"], [6, 0, 1, "", "ensure_operation"], [6, 2, 1, "", "ensure_operator"], [6, 3, 1, "", "ensure_prints_exactly"], [6, 0, 1, "", "ensure_starting_code"], [6, 3, 1, "", "files_not_handled_correctly"], [6, 3, 1, "", "function_prints"], [6, 3, 1, "", "has_import"], [6, 0, 1, "", "only_printing_variables"], [6, 0, 1, "", "open_without_arguments"], [6, 3, 1, "", "prevent_advanced_iteration"], [6, 0, 1, "", "prevent_ast"], [6, 0, 1, "", "prevent_embedded_answer"], [6, 0, 1, "", "prevent_function_call"], [6, 0, 1, "", "prevent_import"], [6, 0, 1, "", "prevent_literal"], [6, 0, 1, "", "prevent_literal_type"], [6, 0, 1, "", "prevent_operation"], [6, 2, 1, "", "prevent_operator"], [6, 0, 1, "", "prevent_printing_functions"]], "pedal.assertions.static.ensure_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_documented_functions": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_functions_return": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_starting_code": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.only_printing_variables": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_embedded_answer": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_printing_functions": [[6, 1, 1, "", "condition"]], "pedal.cait": [[7, 4, 0, "-", "cait_api"], [7, 4, 0, "-", "find_node"]], "pedal.cait.cait_api": [[7, 5, 1, "", "CaitException"], [7, 3, 1, "", "data_state"], [7, 3, 1, "", "data_type"], [7, 3, 1, "", "def_use_error"], [7, 3, 1, "", "expire_cait_cache"], [7, 3, 1, "", "find_asts"], [7, 3, 1, "", "find_expr_sub_matches"], [7, 3, 1, "", "find_match"], [7, 3, 1, "", "find_matches"], [7, 3, 1, "", "find_submatches"], [7, 3, 1, "", "parse_program"], [7, 3, 1, "", "reparse_if_needed"], [7, 3, 1, "", "require_tifa"], [7, 3, 1, "", "reset"]], "pedal.cait.find_node": [[7, 3, 1, "", "find_function_calls"], [7, 3, 1, "", "find_function_definition"], [7, 3, 1, "", "find_operation"], [7, 3, 1, "", "find_prior_initializations"], [7, 3, 1, "", "function_is_called"], [7, 3, 1, "", "is_top_level"]], "pedal.core": [[0, 4, 0, "-", "commands"], [0, 4, 0, "-", "environment"], [0, 4, 0, "-", "feedback"], [0, 4, 0, "-", "feedback_category"], [0, 4, 0, "-", "location"], [0, 4, 0, "-", "report"], [0, 4, 0, "-", "submission"], [0, 4, 0, "-", "tool"]], "pedal.core.commands": [[0, 0, 1, "", "Feedback"], [0, 3, 1, "", "clear_report"], [0, 0, 1, "", "compliment"], [0, 3, 1, "", "contextualize_report"], [0, 3, 1, "", "debug"], [0, 0, 1, "", "explain"], [0, 2, 1, "", "feedback"], [0, 0, 1, "", "gently"], [0, 3, 1, "", "get_all_feedback"], [0, 3, 1, "", "get_submission"], [0, 0, 1, "", "give_partial"], [0, 0, 1, "", "guidance"], [0, 3, 1, "", "hide_correctness"], [0, 3, 1, "", "log"], [0, 0, 1, "", "set_correct"], [0, 3, 1, "", "set_formatter"], [0, 2, 1, "", "set_success"], [0, 3, 1, "", "suppress"], [0, 0, 1, "", "system_error"]], "pedal.core.commands.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.environment": [[0, 0, 1, "", "Environment"]], "pedal.core.feedback": [[0, 3, 1, "", "CompositeFeedbackFunction"], [0, 0, 1, "", "Feedback"], [0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackResponse"]], "pedal.core.feedback.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.feedback.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.feedback_category": [[0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackStatus"]], "pedal.core.feedback_category.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback_category.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.location": [[0, 0, 1, "", "Location"]], "pedal.core.location.Location": [[0, 2, 1, "", "col"], [0, 2, 1, "", "end_col"], [0, 2, 1, "", "end_line"], [0, 2, 1, "", "filename"], [0, 1, 1, "", "from_ast"], [0, 2, 1, "", "line"], [0, 1, 1, "", "to_json"]], "pedal.core.report": [[0, 6, 1, "", "MAIN_REPORT"], [0, 0, 1, "", "Report"]], "pedal.core.report.Report": [[0, 2, 1, "", "TOOLS"], [0, 2, 1, "", "_tool_data"], [0, 1, 1, "", "add_class_hook"], [0, 1, 1, "", "add_feedback"], [0, 1, 1, "", "add_hook"], [0, 1, 1, "", "add_ignored_feedback"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "contextualize"], [0, 1, 1, "", "execute_hooks"], [0, 2, 1, "", "feedback"], [0, 1, 1, "", "full_clear"], [0, 2, 1, "", "group"], [0, 2, 1, "", "group_names"], [0, 2, 1, "", "hiddens"], [0, 1, 1, "", "hide_correctness"], [0, 2, 1, "", "hooks"], [0, 1, 1, "", "register_tool"], [0, 2, 1, "", "resolves"], [0, 2, 1, "", "result"], [0, 1, 1, "", "set_formatter"], [0, 1, 1, "", "stop_group"], [0, 2, 1, "", "submission"], [0, 1, 1, "", "suppress"], [0, 2, 1, "", "suppressions"]], "pedal.core.submission": [[0, 0, 1, "", "Submission"]], "pedal.core.submission.Submission": [[0, 2, 1, "", "assignment"], [0, 2, 1, "", "course"], [0, 2, 1, "", "execution"], [0, 2, 1, "", "files"], [0, 1, 1, "", "get_files_lines"], [0, 1, 1, "", "get_lines"], [0, 2, 1, "", "main_code"], [0, 2, 1, "", "main_file"], [0, 1, 1, "", "replace_main"], [0, 1, 1, "", "set_line_offset"], [0, 2, 1, "", "user"]], "pedal.core.tool": [[0, 0, 1, "", "ToolRegistration"]], "pedal.core.tool.ToolRegistration": [[0, 2, 1, "", "name"], [0, 2, 1, "", "reset"]], "pedal.extensions": [[8, 4, 0, "-", "plotting"], [8, 4, 0, "-", "turtles"]], "pedal.extensions.plotting": [[8, 0, 1, "", "BadGraphFeedback"], [8, 3, 1, "", "assert_plot"], [8, 3, 1, "", "compare_data"], [8, 3, 1, "", "ensure_correct_plot"], [8, 0, 1, "", "ensure_show"], [8, 3, 1, "", "get_plots"], [8, 0, 1, "", "no_plt"], [8, 0, 1, "", "other_plt"], [8, 0, 1, "", "plt_rename_err"], [8, 0, 1, "", "plt_wrong_import"], [8, 3, 1, "", "prevent_incorrect_plt"], [8, 0, 1, "", "wrong_plt_data"], [8, 0, 1, "", "wrong_plt_type"]], "pedal.extensions.plotting.ensure_show": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_rename_err": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_wrong_import": [[8, 1, 1, "", "condition"]], "pedal.questions": [[9, 4, 0, "-", "setup"]], "pedal.questions.setup": [[9, 3, 1, "", "reset"], [9, 3, 1, "", "set_seed"]], "pedal.sandbox": [[10, 4, 0, "-", "commands"], [10, 4, 0, "-", "feedbacks"], [10, 3, 1, "", "reset"], [10, 4, 0, "-", "sandbox"]], "pedal.sandbox.commands": [[10, 0, 1, "", "CommandBlock"], [10, 3, 1, "", "allow_function"], [10, 3, 1, "", "allow_module"], [10, 3, 1, "", "allow_real_io"], [10, 3, 1, "", "block_function"], [10, 3, 1, "", "block_module"], [10, 3, 1, "", "block_real_io"], [10, 3, 1, "", "call"], [10, 3, 1, "", "check_coverage"], [10, 3, 1, "", "clear_input"], [10, 3, 1, "", "clear_mocks"], [10, 3, 1, "", "clear_output"], [10, 3, 1, "", "clear_sandbox"], [10, 3, 1, "", "clear_student_data"], [10, 3, 1, "", "count_unique_calls"], [10, 3, 1, "", "evaluate"], [10, 3, 1, "", "get_call_arguments"], [10, 3, 1, "", "get_exception"], [10, 3, 1, "", "get_function"], [10, 3, 1, "", "get_input"], [10, 3, 1, "", "get_module"], [10, 3, 1, "", "get_output"], [10, 3, 1, "", "get_python_errors"], [10, 3, 1, "", "get_raw_output"], [10, 3, 1, "", "get_sandbox"], [10, 3, 1, "", "get_student_data"], [10, 3, 1, "", "get_trace"], [10, 3, 1, "", "mock_function"], [10, 3, 1, "", "mock_module"], [10, 3, 1, "", "queue_input"], [10, 3, 1, "", "reset_output"], [10, 3, 1, "", "run"], [10, 3, 1, "", "set_input"], [10, 3, 1, "", "start_trace"], [10, 3, 1, "", "stop_trace"]], "pedal.sandbox.feedbacks": [[10, 0, 1, "", "attribute_error"], [10, 0, 1, "", "import_error"], [10, 0, 1, "", "indentation_error"], [10, 0, 1, "", "index_error"], [10, 0, 1, "", "io_error"], [10, 0, 1, "", "key_error"], [10, 0, 1, "", "memory_error"], [10, 0, 1, "", "name_error"], [10, 0, 1, "", "runtime_error"], [10, 0, 1, "", "timeout_error"], [10, 0, 1, "", "type_error"], [10, 0, 1, "", "value_error"], [10, 0, 1, "", "zero_division_error"]], "pedal.sandbox.feedbacks.runtime_error": [[10, 2, 1, "", "context"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "exception_message"], [10, 2, 1, "", "exception_name"], [10, 2, 1, "", "traceback"], [10, 2, 1, "", "traceback_message"]], "pedal.sandbox.sandbox": [[10, 0, 1, "", "Sandbox"]], "pedal.sandbox.sandbox.Sandbox": [[10, 2, 1, "", "MAXIMUM_TEMPORARY_LENGTH"], [10, 2, 1, "", "_context"], [10, 2, 1, "", "_current_patches"], [10, 2, 1, "", "_next_context_id"], [10, 1, 1, "", "allow_module"], [10, 2, 1, "", "allowed_time"], [10, 1, 1, "", "append_output"], [10, 1, 1, "", "block_module"], [10, 1, 1, "", "call"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_context"], [10, 1, 1, "", "clear_exception"], [10, 1, 1, "", "clear_input"], [10, 1, 1, "", "clear_mocked_function"], [10, 1, 1, "", "clear_mocks"], [10, 1, 1, "", "clear_output"], [10, 1, 1, "", "clear_tracer"], [10, 2, 1, "", "data"], [10, 1, 1, "", "evaluate"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "feedback"], [10, 7, 1, "", "functions"], [10, 1, 1, "", "get_context"], [10, 1, 1, "", "get_function"], [10, 1, 1, "", "get_names_by_type"], [10, 1, 1, "", "get_values_by_type"], [10, 1, 1, "", "get_variables_by_type"], [10, 2, 1, "", "inputs"], [10, 1, 1, "", "make_safe_variable"], [10, 1, 1, "", "mock_module"], [10, 2, 1, "", "output"], [10, 2, 1, "", "raw_output"], [10, 1, 1, "", "reset_default_overrides"], [10, 2, 1, "", "result"], [10, 1, 1, "", "run"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "set_student_data"], [10, 1, 1, "", "start_grouping_context"], [10, 1, 1, "", "stop_grouping_context"], [10, 2, 1, "", "target"], [10, 2, 1, "", "tracer_style"], [10, 7, 1, "", "var"]], "pedal.sandbox.sandbox.Sandbox.modules": [[10, 2, 1, "", "plots"], [10, 2, 1, "", "turtles"]], "pedal.source": [[11, 4, 0, "-", "source"]], "pedal.source.source": [[11, 3, 1, "", "get_original_program"], [11, 3, 1, "", "get_program"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "restore_code"], [11, 3, 1, "", "set_source"], [11, 3, 1, "", "set_source_file"], [11, 3, 1, "", "verify"], [11, 3, 1, "", "verify_section"]], "pedal.tifa": [[12, 0, 1, "", "Tifa"], [12, 3, 1, "", "tifa_analysis"]], "pedal.tifa.Tifa": [[12, 1, 1, "", "assign_target"], [12, 1, 1, "", "process_ast"], [12, 1, 1, "", "process_code"], [12, 1, 1, "", "visit"], [12, 1, 1, "", "visit_AnnAssign"], [12, 1, 1, "", "visit_Assign"], [12, 1, 1, "", "visit_Attribute"], [12, 1, 1, "", "visit_AugAssign"], [12, 1, 1, "", "visit_BinOp"], [12, 1, 1, "", "visit_Bool"], [12, 1, 1, "", "visit_BoolOp"], [12, 1, 1, "", "visit_ClassDef"], [12, 1, 1, "", "visit_Compare"], [12, 1, 1, "", "visit_Constant"], [12, 1, 1, "", "visit_Dict"], [12, 1, 1, "", "visit_DictComp"], [12, 1, 1, "", "visit_Expr"], [12, 1, 1, "", "visit_For"], [12, 1, 1, "", "visit_FunctionDef"], [12, 1, 1, "", "visit_GeneratorExp"], [12, 1, 1, "", "visit_If"], [12, 1, 1, "", "visit_IfExp"], [12, 1, 1, "", "visit_Import"], [12, 1, 1, "", "visit_ImportFrom"], [12, 1, 1, "", "visit_Lambda"], [12, 1, 1, "", "visit_List"], [12, 1, 1, "", "visit_ListComp"], [12, 1, 1, "", "visit_Name"], [12, 1, 1, "", "visit_NameConstant"], [12, 1, 1, "", "visit_Num"], [12, 1, 1, "", "visit_Return"], [12, 1, 1, "", "visit_SetComp"], [12, 1, 1, "", "visit_Slice"], [12, 1, 1, "", "visit_Str"], [12, 1, 1, "", "visit_Subscript"], [12, 1, 1, "", "visit_UnaryOp"], [12, 1, 1, "", "visit_While"], [12, 1, 1, "", "visit_With"], [12, 1, 1, "", "visit_comprehension"], [12, 1, 1, "", "visit_statements"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:module", "5": "py:exception", "6": "py:data", "7": "py:property"}, "terms": {"": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "0": [0, 3, 6, 9, 12, 19, 20, 22, 24, 25, 28, 29, 30, 31], "0000": 19, "0000001": 28, "0001": 28, "001": [6, 28], "01": 19, "013": 19, "05": 19, "1": [0, 1, 3, 4, 6, 12, 16, 19, 22, 25, 28, 29, 30, 31], "10": [16, 19, 22, 27, 28], "100": [20, 22, 28], "1000": 18, "11": 19, "12": 19, "12323": 16, "13": [19, 22], "14": 24, "15": 19, "1998": 19, "1d": 27, "2": [0, 1, 16, 19, 22, 27, 28, 30, 31], "20": 19, "2005": 19, "201": 19, "2010": 19, "2013": 19, "2015": 19, "2019": 19, "2020": 19, "2021": 19, "256": 9, "27": 22, "29": [19, 22], "29am": 19, "2d": 27, "3": [12, 15, 16, 19, 22, 27, 28, 30, 31], "30": 19, "3000": 19, "31": 19, "32": 19, "35": 22, "38pm": 19, "4": [12, 19, 22, 27, 28, 30], "47": 22, "5": [0, 6, 16, 19, 22, 25, 26, 27, 28, 31], "50": [3, 19, 28], "6": [15, 16, 19, 20, 22, 28], "63": 22, "7": [15, 16, 19, 22, 28, 29], "8": [12, 19], "9": [19, 28], "90": 28, "9999": 19, "A": [0, 3, 4, 6, 7, 8, 10, 12, 14, 21, 22, 25, 26, 27, 28, 29], "AND": [3, 6], "And": 28, "As": [22, 26, 27], "At": 16, "Be": 25, "But": [3, 4, 10, 19, 22, 28, 32], "By": [0, 3, 10, 14, 20, 24, 25, 29, 31], "FORs": 12, "For": [0, 3, 6, 7, 12, 15, 16, 19, 22, 24, 25, 27, 28, 29, 31], "IF": [0, 19], "IFs": 12, "If": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31], "In": [0, 3, 6, 10, 19, 22, 24, 28], "It": [0, 3, 10, 14, 19, 22, 23, 29, 31, 32, 33], "Its": [0, 22], "NOT": [0, 3, 4, 26], "No": [0, 10, 12, 19, 20, 30, 31], "Not": [3, 19, 25, 28, 30, 31, 32], "OR": 6, "Of": 0, "One": [0, 3, 10, 32], "Or": [19, 20, 22, 26, 27], "Such": 14, "THAT": 3, "That": [0, 3], "The": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "Then": [3, 22], "There": [0, 2, 3, 16, 22, 31, 32], "These": [0, 2, 3, 4, 14, 22, 26, 29], "To": [10, 24, 28], "Will": [0, 10, 26], "_": [10, 29], "___": [3, 16, 19, 22, 24, 32], "____": [16, 19], "__all__": 0, "__dataclass_fields__": 28, "__exit__": 4, "__exp__": 24, "__import__": 10, "__init__": [0, 3], "__initial__": 22, "__targets__": 12, "__value__": 12, "__version__": 19, "_accumulator_": 22, "_activ": 4, "_context": 10, "_current_patch": 10, "_expr_": 16, "_field": 4, "_function_": 24, "_get_child_feedback": 3, "_handle_condit": 3, "_item_": 24, "_list_": [16, 24], "_my_func_": 24, "_next_context_id": 10, "_special_custom_help": 16, "_sum_": 24, "_thread": 4, "_tool_data": 0, "_var_": 24, "a_dog": 32, "abl": [0, 3, 4, 10, 19, 29, 31], "about": [0, 3, 4, 6, 10, 12, 14, 19, 21, 22, 25, 28, 29, 31], "abov": [15, 16, 22, 24], "absolut": 4, "abstract": 0, "acbart": [0, 13, 19], "accept": [0, 7, 28, 31], "access": [0, 3, 10, 12, 20, 22, 24, 29], "accomplish": 10, "accordingli": 25, "account": 28, "accumul": [11, 22], "accur": [16, 19], "achiev": 20, "across": [6, 9], "act": 10, "actaul": 28, "action": 32, "action_after_return": 32, "activ": [0, 3, 6, 8, 23, 26], "actual": [0, 3, 4, 6, 8, 10, 12, 19, 25, 26, 27, 28, 29, 30, 31, 32], "actual_count": 32, "actual_messag": 31, "ad": [0, 3, 4, 10, 14, 15, 16, 22, 24, 25, 29], "ada": [22, 25], "adapt": [0, 27], "add": [0, 3, 7, 10, 14, 22, 28, 29, 31], "add_3": 19, "add_class_hook": 0, "add_feedback": 0, "add_hook": 0, "add_ignored_feedback": 0, "add_numb": 22, "add_pric": 16, "addit": [0, 3, 10, 14, 16, 19, 20, 22, 24, 25, 27, 28, 31], "addition": 12, "addition_error": 3, "adequ": 28, "adjac": 4, "adjust": [14, 29], "advanc": [0, 6, 22, 30], "adventur": 19, "affect": 0, "after": [10, 19, 22, 27, 30, 32], "afterthought": 17, "ag": 31, "against": [0, 6, 7], "aggreg": 3, "aka": [0, 6, 28], "algorithm": [0, 3, 22, 25], "alia": [0, 6, 28], "alias": 28, "all": [0, 3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "all_docu": 19, "allow": [0, 3, 4, 6, 10, 14, 16, 21, 22, 28, 29, 31], "allow_for": [6, 31], "allow_funct": [5, 6, 10, 23, 29, 31], "allow_modul": [5, 10, 23, 29], "allow_real_io": [5, 10, 23, 29], "allow_whil": [6, 31], "allowed_tim": 10, "almost": [0, 1, 3, 4, 6, 15, 25], "along": [0, 14, 19, 20, 31], "alpha": 29, "alreadi": [0, 10, 22, 29, 32], "also": [0, 3, 4, 6, 10, 11, 14, 16, 17, 20, 21, 22, 24, 25, 28, 29, 31], "altern": [0, 4, 10, 16, 20, 28, 31], "although": [0, 3, 4, 10, 14, 15, 22, 28, 29, 31], "alwai": [3, 12, 14, 22, 25], "am": [4, 19], "among": [16, 22], "amount": [3, 14, 19, 22], "an": [0, 3, 4, 6, 7, 9, 10, 11, 12, 14, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "analys": 12, "analysi": [0, 3, 7, 12, 16, 17, 22, 26, 32], "analyz": [0, 3, 12, 14, 16, 17, 19], "anecdot": 22, "ani": [0, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32], "annassign": 12, "annot": [19, 31], "anoth": [0, 3, 7, 14, 19, 28, 31, 32], "answer": [0, 11, 19, 22, 25, 31], "anyth": [0, 26, 29], "anywher": [6, 19, 20], "api": [14, 17, 23], "appear": [0, 3, 6, 10, 22, 29], "append": [10, 19, 32], "append_output": 10, "append_to_non_list": 32, "appli": [0, 6, 7], "appreci": 19, "approach": 3, "appropri": [3, 10, 12, 16, 20, 22, 27, 28], "ar": [0, 2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32], "arbitrari": [10, 16, 29], "architectur": 17, "aren": [0, 18, 21], "arg": [0, 3, 6, 8, 10, 19, 24], "args_loc": 10, "argument": [0, 1, 3, 4, 6, 10, 22, 24, 25, 28, 29, 31, 32], "argument_type_nam": 32, "argv": [4, 10], "arithmet": 17, "ariti": [6, 16, 19, 22, 31, 32], "around": [4, 12, 28, 31], "arrow": 19, "aspect": 22, "assert": [0, 4, 5, 8, 17, 19, 23, 29], "assert_": [22, 28], "assert_almost_equ": [5, 6], "assert_contains_subset": [5, 6, 23, 28], "assert_coverag": 6, "assert_equ": [3, 5, 6, 16, 22, 23, 28], "assert_fals": [5, 6, 23, 28], "assert_funct": [6, 28], "assert_great": [5, 6, 23, 28], "assert_greater_equ": [5, 6, 23, 28], "assert_has_attr": [5, 6, 23, 28], "assert_has_class": 6, "assert_has_funct": [5, 6, 23, 28], "assert_has_vari": [5, 6, 23, 28], "assert_i": [5, 6, 23, 28], "assert_in": [5, 6, 23, 28], "assert_is_dataclass": [5, 6, 23, 28], "assert_is_inst": [5, 6, 23, 28], "assert_is_non": [5, 6, 23, 28], "assert_is_not": [5, 6, 23, 28], "assert_is_not_dataclass": [5, 6, 23, 28], "assert_is_not_inst": [23, 28], "assert_is_not_non": [5, 6, 23, 28], "assert_length_equ": [5, 6, 23, 28], "assert_length_great": [5, 6, 23, 28], "assert_length_greater_equ": [5, 6, 23, 28], "assert_length_less": [5, 6, 23, 28], "assert_length_less_equ": [5, 6, 23, 28], "assert_length_not_equ": [5, 6, 23, 28], "assert_less": [5, 6, 23, 28], "assert_less_equ": [5, 6, 23, 28], "assert_not_almost_equ": [5, 6], "assert_not_contains_subset": [5, 6, 23, 28], "assert_not_equ": [5, 6, 23, 28], "assert_not_in": [5, 6, 23, 28], "assert_not_is_inst": [5, 6, 28], "assert_not_output": [5, 6, 23, 28], "assert_not_output_contain": [5, 6, 23, 28], "assert_not_output_regex": [5, 6], "assert_not_regex": [5, 6, 23, 28], "assert_not_typ": [5, 6, 23, 28], "assert_output": [5, 6, 19, 22, 23, 28], "assert_output_contain": [5, 6, 23, 28], "assert_output_regex": [5, 6], "assert_plot": [5, 8], "assert_print": [5, 6, 28], "assert_ran": 6, "assert_regex": [5, 6, 23, 28], "assert_tru": [5, 6, 23, 28], "assert_typ": [5, 6, 23, 28], "assertalmostequ": [5, 6, 28], "assertequ": [5, 6, 16, 19, 28], "assertfals": [5, 6, 28], "assertgener": 19, "assertgraphtyp": 6, "assertgraphvalu": 6, "assertgreat": [5, 6, 19, 28], "assertgreaterequ": [5, 6, 19, 28], "assertha": 19, "asserthasattr": [5, 6, 28], "asserthasfunct": [5, 6, 19, 28], "asserthasvari": [5, 6, 28], "asserti": [5, 6, 28], "assertin": [5, 6, 19, 28], "assertion_messag": 28, "assertionerror": 16, "assertisinst": [5, 6, 19, 28], "assertisnon": [5, 6, 28], "assertisnot": [5, 6, 28], "assertisnotinst": [5, 6, 28], "assertisnotnon": [5, 6, 28], "assertlengthequ": [5, 6, 28], "assertlengthgreat": [5, 6, 28], "assertlengthgreaterequ": [5, 6, 28], "assertlengthless": [5, 6, 28], "assertlengthlessequ": [5, 6, 28], "assertlengthnotequ": [5, 6, 28], "assertless": [5, 6, 28], "assertlessequ": [5, 6, 28], "assertnotalmostequ": [5, 6, 28], "assertnotequ": [5, 6, 28], "assertnotin": [5, 6, 28], "assertnotoutput": [5, 6, 28], "assertnotoutputcontain": [5, 6, 28], "assertnotregex": [5, 6, 28], "assertnottyp": [5, 6, 28], "assertoutput": [5, 6, 28], "assertoutputcontain": [5, 6, 28], "assertprint": [5, 6, 28], "assertregex": [5, 6, 28], "asserttru": [5, 6, 28], "asserttyp": [5, 6, 28], "assign": [0, 3, 7, 10, 12, 14, 19, 20, 22, 29], "assign_target": 12, "assigned_literal_value_to_answ": 22, "assigned_to_answ": 22, "associ": [0, 3, 10, 11, 16], "assum": [0, 10, 25, 27, 31], "ast": [0, 4, 6, 7, 11, 12, 17, 19, 24, 30, 31], "ast_map": 7, "ast_nam": [19, 31], "ast_nod": [7, 24], "ast_tre": 12, "astmap": 7, "astnod": 7, "asymmetri": 28, "at_least": [6, 19, 22, 28, 31], "at_least_messag": 28, "at_most": [6, 19, 22, 31], "atom": [0, 3, 14], "atomicfeedbackfunct": 14, "attach": [0, 3, 7, 10, 12, 14, 25, 29, 32], "attempt": [0, 3, 4, 10, 14, 21, 23, 29, 32], "attent": 3, "attr": [6, 28], "attribut": [0, 3, 4, 10, 12, 22, 24, 28], "attribute_error": [5, 10], "attributeerror": 10, "augassign": 12, "austin": 13, "author": [0, 6, 8, 14, 19, 23, 27], "autograd": [0, 14, 15, 16, 17, 22, 26], "autom": 3, "automat": [0, 3, 10, 16, 20, 22, 29], "auxiliari": 0, "avail": [0, 4, 10, 12, 20, 23, 24, 25, 28, 29, 30, 31], "averag": 0, "avoid": [0, 4, 14, 21, 25, 28, 29], "award": 3, "b": [19, 26], "babbag": 22, "back": [0, 3, 11, 14, 16, 19, 30], "bad": 30, "badgraphfeedback": [5, 8], "bart": [0, 13, 22, 25], "base": [0, 3, 7, 10, 14, 20, 27], "bash": 20, "basic": [2, 17, 22, 25, 28], "bdb": 4, "bdbquit": 4, "beat": 31, "becam": 3, "becaus": [0, 4, 6, 10, 12, 14, 26, 28, 31], "becom": 3, "been": [0, 6, 10, 11, 12, 14, 20, 22, 29, 31, 32], "befor": [0, 10, 11, 12, 19, 22, 27, 30, 31, 32], "began": 10, "begin": 16, "behav": 22, "behavior": [0, 3, 10, 26, 27, 28], "behind": [0, 10], "being": [0, 3, 6, 8, 10, 12, 14, 26, 29], "believ": [0, 4, 16, 20], "belong": 0, "below": 16, "benefit": 23, "besid": [3, 25], "best": [14, 28], "beta": 19, "better": [0, 3, 29], "between": [0, 3, 6, 8], "big": 4, "bin": 20, "binari": [6, 7, 31], "bit": [14, 28], "bitwis": [3, 31], "blank": [28, 30], "blank_sourc": 30, "block": [6, 10, 19, 20, 27, 29, 31, 32], "block_funct": [5, 10, 23, 29], "block_modul": [5, 10, 23, 29], "block_real_io": [5, 10, 23, 29], "blockedmodul": 19, "blockpi": [0, 1, 4, 10, 14, 16, 17, 22, 27, 29], "bodi": [19, 22, 24, 32], "boilerpl": 22, "book": 16, "bool": [0, 3, 6, 7, 8, 10, 11, 12, 19, 22, 25, 28, 31], "boolean": [0, 3, 6, 7, 12, 28, 31], "booltyp": 24, "both": [0, 6, 7, 10, 20, 22, 25, 27, 32], "bottom": 20, "brace": [4, 26], "bracket": 4, "branch": [7, 31, 32], "break": [0, 3, 27, 30, 32], "breaker": 4, "breviti": 24, "briefli": 0, "broadcast": 0, "broke": 29, "browser": 1, "bug": 0, "bui": 19, "build": [0, 3, 4, 14], "built": [0, 4, 8, 10, 17, 19, 23, 24, 28, 29, 31], "builtin": [4, 10, 29], "bunch": 28, "bundl": [12, 22], "by_nam": 10, "bypass": 28, "c": [19, 26], "c_long": 4, "cach": 7, "cait": [0, 4, 5, 6, 17, 19, 22, 23, 31], "cait_api": 24, "cait_nod": [6, 7], "caitexcept": [5, 7], "caitexpress": 7, "caitnod": [0, 6, 7, 10, 24], "calcul": [3, 4, 12, 19, 28], "call": [0, 3, 4, 5, 6, 7, 8, 10, 12, 16, 17, 23, 27, 28, 29, 30, 31, 32], "callabl": [0, 8, 10, 28], "callback": 0, "camelcas": 28, "can": [0, 1, 2, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "cannot": [0, 4, 12, 19, 28, 32], "capabl": 27, "capac": 31, "captur": [4, 7, 16], "card": 22, "care": [3, 14, 25, 27], "caret": 3, "cascad": 0, "case": [0, 3, 6, 19, 22, 26, 27, 28, 31], "cat": 17, "catch": 4, "categor": 26, "categori": [0, 2, 3, 6, 8, 14, 21, 23, 25, 26, 29], "caus": [0, 10, 12, 22], "cell": 20, "central": [0, 14, 16, 17, 22], "certain": [1, 6, 22, 24, 28], "certainli": 0, "chaff": 6, "chain": [3, 12], "chang": [0, 3, 4, 6, 10, 12, 20, 26, 28, 31, 32], "changelog": 0, "charact": [6, 27, 28, 30], "characterist": [12, 28], "cheat": 28, "check": [0, 3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 17, 19, 20, 24, 27, 28, 29, 30, 31, 32], "check_coverag": [5, 10, 23, 29], "check_dataclass_error": [5, 6], "check_dataclass_inst": [23, 28], "check_mark": 27, "check_section_exist": 30, "checker": [28, 33], "child": [3, 7, 24], "chmod": 20, "choos": [3, 16, 19, 22, 25, 26, 29, 32], "chop": [6, 28], "chose": 3, "chosen": 26, "chunk": [0, 3, 11], "circumst": 29, "cisc108": 19, "cl": [6, 28], "clariti": 4, "class": [0, 2, 3, 4, 6, 8, 10, 12, 24, 26, 27, 28, 29, 31], "classic": 6, "classifi": 0, "classmethod": 0, "clean": 10, "clean_data": 31, "clear": [0, 10, 25, 28, 29], "clear_context": 10, "clear_except": 10, "clear_input": [5, 10, 23, 29], "clear_mock": [5, 10, 23, 29], "clear_mocked_funct": 10, "clear_output": [5, 10, 23, 29], "clear_report": [0, 23, 25], "clear_sandbox": [5, 10, 23, 29], "clear_student_data": [5, 10, 23, 29], "clear_trac": 10, "clearli": [0, 3, 16, 28], "clickabl": 3, "close": [6, 19, 25, 28, 31], "closur": 12, "code": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "codebas": 14, "coher": 14, "col": 0, "collaps": 29, "collect": [0, 6, 10, 17, 22], "color": 3, "column": [0, 27], "com": [15, 20], "combin": [0, 3, 14], "come": [3, 16, 20, 32], "comfort": [22, 28], "command": [1, 6, 10, 14, 17, 19, 20, 23, 24, 27], "command_lin": 4, "commandblock": [5, 6, 10, 23, 29], "comment": [28, 31], "common": [0, 12, 14, 16, 19, 22, 29, 31], "compar": [6, 10, 19, 28], "compare_data": [5, 8], "comparison": [4, 6, 7, 8, 28, 31], "compat": [4, 16, 17], "compatibl": 17, "compil": [4, 10, 17], "complement": 22, "complet": [0, 3, 4, 10, 19, 22, 25, 26, 33], "complex": [3, 12, 16, 17, 22, 25, 26], "compliant": 4, "complic": 28, "compliment": [0, 6, 16, 19, 22, 23, 25, 31], "compon": [0, 12, 16], "compos": [3, 22], "composit": [0, 3, 14, 26], "compositefeedbackfunct": 0, "comprehens": 31, "comput": [10, 31], "concaten": [4, 10], "concept": [12, 14, 17, 26], "concern": 10, "concis": 28, "conclus": [16, 19], "concret": 14, "condens": 14, "condit": [0, 3, 6, 8, 14, 16, 21, 22, 25, 26], "condition": 3, "configur": [0, 11, 14, 20, 25, 32], "confirm": [7, 8, 19, 31], "conflict": 10, "confus": 28, "conjunct": 28, "connect": 32, "consid": [0, 3, 7, 11], "consist": [0, 4, 32, 33], "consol": [0, 10, 27, 29], "constant": [0, 2, 3, 12], "constant_field": 3, "constraint": 0, "construct": [0, 6, 10, 26], "constructor": 3, "consult": 26, "consum": [3, 19, 28], "contact": 17, "contain": [0, 3, 4, 6, 10, 11, 12, 14, 19, 24, 28, 29], "content": [0, 11, 19, 28], "context": [0, 3, 4, 6, 8, 10, 12, 16, 19, 28, 29], "context_id": 10, "context_messag": 28, "contextu": [0, 11, 25, 30], "contextualize_report": [0, 19, 22, 23, 25], "continu": 7, "contribut": [0, 3], "control": [0, 3, 12, 14, 16, 17, 19, 20, 26, 28], "conveni": [0, 4, 14, 22, 25, 28, 30], "convent": [0, 3, 17], "convers": [4, 26, 27, 28], "convert": [0, 19, 28, 29], "coordin": 14, "copi": 10, "core": [3, 6, 7, 8, 9, 10, 11, 12, 17, 23], "cori": [0, 13], "correct": [0, 3, 6, 8, 19, 22, 23, 25, 26, 27, 31], "correct_stori": 19, "correctli": [0, 6, 7, 8, 22, 25, 28, 31], "correspond": [9, 10, 14, 26, 31], "cost": 19, "could": [0, 3, 4, 6, 8, 10, 14, 16, 22, 25, 30], "couldn": 4, "count": [3, 4, 6, 10, 28, 30, 31], "count_unique_cal": [5, 10, 23, 29], "cours": [0, 14, 17, 19], "cover": [6, 19, 28], "coverag": [4, 6, 10, 19, 28], "coverage_messag": 28, "cpython": [4, 28], "crash": 18, "crazi": 2, "creat": [0, 4, 6, 10, 11, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30], "create_world": 19, "create_world_compon": 19, "create_world_don": 19, "creation": 3, "creator": 3, "credit": [3, 6, 16, 22, 25, 31], "criteria": 7, "critic": [3, 17, 21], "cross": 27, "ctvt": 20, "ctype": 4, "cumbersom": 0, "curli": 26, "current": [0, 3, 4, 6, 7, 10, 11, 12, 25, 26, 28, 29, 30, 31, 32], "curriculum": 20, "curriculum_snek": 19, "custom": [0, 3, 4, 10, 16, 17, 20, 25], "cut": 7, "cutom": 31, "d": [0, 3, 9, 11, 19, 29], "data": [0, 3, 6, 8, 9, 10, 12, 14, 19, 22, 23, 25, 26, 27, 29, 31], "data_st": [5, 7, 24], "data_typ": [5, 7, 24], "dataclass": [4, 6, 28, 31], "dataclass_not_avail": 31, "date": 19, "datetim": 19, "dc_annot": 31, "de": 19, "deactiv": 0, "deal": 4, "debug": [0, 1, 3, 23, 25, 31], "decid": [0, 3, 4], "decim": [6, 28], "decis": [0, 32], "declar": [3, 16, 22, 32], "decor": [0, 14], "deeper": 16, "def": [3, 16, 19, 24, 29, 31], "def_use_error": [5, 7], "default": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32], "defeat": 31, "defin": [0, 3, 4, 6, 10, 16, 17, 24, 28, 29, 31, 32], "definit": [6, 7, 19, 23, 31, 32], "delai": [0, 3], "delawar": 13, "delay_condit": [0, 3, 6, 8], "delet": [0, 7, 12], "delic": 3, "deliv": [0, 11, 14, 22], "delta": [6, 28], "demand": 25, "denni": 13, "denot": 22, "depend": [1, 4, 6, 15, 24, 26], "depened": 0, "deploy": 1, "deprec": [6, 7], "depth": 3, "descend": [3, 4], "describ": [0, 3, 23, 26], "descript": [0, 3, 6, 7, 11, 22, 26], "deseri": 3, "design": [4, 15, 17], "desir": [0, 3, 10, 20, 28], "despit": 28, "destroi": 10, "detail": [16, 22, 28], "detect": [0, 3, 6, 8, 10, 14, 16, 22, 25, 31], "detector": 0, "determin": [3, 6, 7, 8, 14, 19, 28], "determinist": 9, "develop": [13, 17, 20, 23, 26], "diagram": 16, "dict": [0, 3, 6, 7, 8, 10, 11, 19, 25, 26, 29, 31], "dictionari": [0, 3, 6, 7, 10, 12, 25, 29, 31], "dicttyp": 24, "did": [0, 19, 25, 28, 31, 32], "differ": [0, 4, 6, 7, 8, 14, 16, 17, 19, 22, 27, 28, 32], "difficult": 4, "digit": 0, "direct": [3, 24], "directli": [0, 3, 10, 19, 28, 31], "directori": 11, "disabl": [17, 28], "disabled_builtin": 19, "discourag": 3, "discuss": 13, "disk": 29, "disori": 16, "dispatch": 10, "displai": [0, 3, 4, 25, 26, 32], "dist": 1, "distinct": [0, 2, 14, 28], "divid": [6, 11, 22, 28], "do": [0, 3, 4, 6, 10, 14, 16, 19, 20, 22, 24, 25, 26, 28, 31, 32], "do_not_use_for_loop": 25, "docstr": [0, 28, 31], "document": [3, 4, 6, 14, 15, 18, 19, 20, 22, 23, 26, 31], "doe": [0, 3, 4, 6, 10, 22, 23, 28, 29, 31], "doesn": [0, 4, 7], "dog": 32, "dollar": 19, "don": [3, 4, 15, 19, 26, 29, 31], "done": [0, 22], "done_earli": 19, "done_is_d": 19, "done_parse_date_dai": 19, "done_parse_date_month": 19, "done_parse_date_year": 19, "doubl": [22, 31], "down": [1, 32], "download": 15, "dr": [0, 13], "draw": 10, "driven": 3, "dude": 3, "dunder": 12, "duplic": 31, "duplicate_dataclass_definit": 31, "duplicate_function_definit": 31, "dure": [0, 3, 10, 12, 27, 30], "dynam": [3, 4], "e": [0, 3, 4, 6, 7, 10, 11, 14, 20, 22, 24, 25, 28, 29, 31, 32], "each": [6, 9, 10, 14, 22, 24, 27, 28, 29], "earlier": [0, 19, 20], "easi": [3, 33], "easier": [3, 16, 24, 28], "easili": 31, "echo": 20, "edu": [0, 1, 13, 15, 20], "effect": [0, 10, 14, 22], "effort": 20, "either": [0, 6, 8, 10, 14, 25, 27, 28, 30], "elegantli": 0, "element": [10, 12, 31], "elev": [3, 17], "els": [3, 22, 31, 32], "else_messag": [0, 3, 6, 8, 23, 26, 28], "else_message_templ": [0, 6, 8, 23, 26], "else_on_loop_bodi": 32, "email": [0, 13], "emb": [19, 31], "embed": [19, 31], "empti": [6, 12, 19, 28, 32], "emul": [0, 4, 10, 22], "en": 6, "enabl": 20, "encapsul": [3, 16, 26], "encourag": [3, 22], "end": [0, 1, 10, 11, 19, 22, 28], "end_col": 0, "end_lin": 0, "engin": [17, 32], "enhanc": [7, 10, 11, 22], "enough": [9, 28, 30, 31], "ensur": [6, 22, 29], "ensure_ast": [5, 6, 19, 22, 23, 31], "ensure_called_uniqu": [5, 6, 23, 28], "ensure_cisc108_test": 19, "ensure_correct_plot": [5, 8], "ensure_coverag": [5, 6, 19, 23, 28], "ensure_dataclass": [5, 6, 23, 31], "ensure_documented_funct": [5, 6, 19, 22, 23, 31], "ensure_funct": [5, 6, 16, 19, 22, 23, 31], "ensure_function_cal": [5, 6, 19, 22, 23, 28, 31], "ensure_functions_return": [5, 6, 19, 23, 31], "ensure_import": [5, 6, 19, 22, 23, 31], "ensure_liter": [5, 6, 19, 22, 23, 31], "ensure_literal_typ": [5, 6, 22, 23, 31], "ensure_oper": [5, 6, 19, 22, 23, 31], "ensure_prints_exactli": [5, 6, 23, 31], "ensure_show": [5, 8], "ensure_starting_cod": [5, 6, 23, 31], "enter": 27, "entir": [0, 3, 4, 24, 25, 29], "entri": [0, 10], "enumer": 0, "env": 20, "environ": [3, 4, 10, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29], "equal": [3, 6, 19, 22, 28, 32], "equival": [3, 6, 23, 24], "error": [0, 3, 4, 6, 7, 10, 11, 12, 16, 19, 21, 22, 25, 26, 28, 29, 30], "especi": [0, 2, 14], "essenti": 25, "etc": [0, 12, 22, 30], "eval": [10, 31], "evalu": [0, 3, 5, 6, 7, 10, 12, 20, 23, 25, 28, 29], "even": [3, 7, 25, 28, 29, 31, 32], "event": 0, "event_nam": 0, "eventu": 14, "ever": [3, 6], "everi": [3, 4, 12, 20, 31], "everyth": [4, 24], "evid": 0, "exact": [6, 31], "exact_str": [6, 28], "exactli": [0, 6, 28, 31], "exam": 25, "exampl": [0, 1, 2, 3, 6, 12, 17, 20, 22, 24, 27, 28, 29, 31], "exc_info": 4, "exceed": 30, "except": [0, 3, 4, 6, 7, 9, 10, 19, 24, 25, 26, 27, 29, 31], "exception_messag": [10, 30], "exception_nam": 10, "exclude_builtin": 10, "exclus": 3, "exec": [10, 29, 31], "execut": [0, 3, 6, 10, 12, 16, 17, 20, 27, 28, 29], "execute_hook": 0, "executioncontext": 10, "exhaust": 23, "exist": [0, 6, 7, 8, 10, 11, 12, 14, 16, 17, 22, 25, 28, 29, 30, 31, 32], "expandedtraceback": 10, "expect": [0, 3, 6, 8, 14, 19, 20, 22, 28, 29, 30, 31, 32], "expected_count": 32, "expected_messag": 31, "expected_typ": [6, 28], "expected_verb": 6, "experiment": [0, 4], "expire_cait_cach": [5, 7], "explain": [0, 6, 16, 19, 22, 23, 25, 27], "explan": [6, 26, 28], "explicit": [26, 30], "explicitli": [3, 10, 22, 25, 29], "explor": 24, "expos": 0, "exposur": 0, "expr": [12, 19], "express": [4, 7, 10, 11, 12, 19, 22, 24, 30, 32], "extend": 26, "extens": [0, 5, 17, 20, 22], "extern": [0, 15], "extra": [0, 3, 22, 29], "extract_tb": 4, "extrem": 29, "f": [3, 4], "face": 0, "fact": [3, 22, 28], "factor": 4, "fail": [0, 3, 4, 10, 16, 22, 28], "failur": [6, 19], "fairli": [6, 28], "fall": 0, "fals": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 31], "falsei": 28, "fanci": 19, "fancier": 4, "far": [0, 6, 19, 25, 28, 29], "fashion": 0, "faster": 1, "favor": 29, "featur": [0, 3, 4, 14, 22, 23], "feedback": [6, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 23, 25, 27, 28, 29, 31, 32], "feedback_categori": [0, 25], "feedbackcategori": [0, 2, 25, 26], "feedbackkind": [0, 2, 26], "feedbackloc": 3, "feedbackregistri": 10, "feedbackrespons": 0, "feedbackstatu": 0, "few": [3, 4, 14, 15, 22, 28, 29, 31], "fewer": 31, "ff": [3, 26], "field": [0, 3, 4, 6, 7, 8, 10, 11, 21, 23, 24, 25, 26, 27, 29, 31], "field_messag": 31, "field_nam": [0, 6, 8, 23, 26], "fight": 19, "figur": 4, "file": [0, 4, 6, 10, 11, 12, 16, 19, 20, 25, 27, 29, 30, 31], "filenam": [0, 6, 10, 11, 12, 25, 27, 29, 30, 31], "files_not_handled_correctli": [5, 6, 23, 31], "filesystem": 11, "fill": 0, "filter": 31, "final": [0, 6, 16, 22, 25, 26, 28], "finalfeedback": 0, "find": [0, 1, 6, 7, 11, 12, 16, 17, 20, 23], "find_al": 6, "find_ast": [5, 7, 16], "find_expr_sub_match": [5, 7], "find_function_cal": [5, 7], "find_function_definit": [5, 7], "find_match": [3, 5, 6, 7, 16, 19, 22, 24], "find_oper": [5, 7], "find_prior_initi": [5, 7], "find_submatch": [5, 7], "fine": 22, "finish": [0, 3, 19], "finish_grad": 19, "finit": 0, "first": [0, 3, 6, 7, 10, 11, 12, 16, 20, 22, 24, 25, 28, 29, 30, 31], "fit": 3, "five": 28, "fix": [0, 18], "flag": [0, 3, 26, 27, 31], "flatten": [6, 28], "flexibl": [3, 6, 28, 31], "flexibli": 28, "float": [3, 6, 10, 19, 25, 28, 31], "flow": 12, "fo": 27, "folder": [1, 22], "folk": 28, "follow": [0, 1, 3, 4, 6, 8, 12, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32], "followup": 0, "food": 19, "forbid": 22, "forc": [0, 6], "fork": 4, "form": [0, 14, 28, 31, 32], "formal": [0, 32], "format": [0, 3, 6, 10, 19, 25, 27, 28], "format_assert": 6, "formatt": [0, 3, 17, 23, 26], "found": [6, 7, 8, 11, 19, 22, 28, 30, 31, 32], "four": 27, "frame": 27, "framework": [17, 22], "friendli": [0, 2, 6, 16], "friendly_nam": [10, 29], "from": [0, 1, 3, 4, 6, 7, 9, 10, 12, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "from_ast": 0, "front": 0, "full": [4, 15, 25, 33], "full_clear": 0, "fulli": [10, 12], "funciton": 0, "function": [0, 4, 6, 7, 8, 10, 12, 14, 16, 17, 23, 25, 27, 28, 29, 30, 31, 32], "function_is_cal": [5, 7], "function_kwarg": 10, "function_nam": [6, 8, 10, 28, 29, 31], "function_name_messag": 32, "function_not_avail": 28, "function_print": [5, 6, 23, 31], "function_signatur": 19, "function_typ": 32, "function_valu": 19, "functiondef": 7, "functiontyp": 24, "functool": 4, "fundament": 3, "further": [0, 26], "futur": 26, "g": [0, 3, 4, 6, 7, 10, 11, 20, 22, 24, 25, 28, 29, 31, 32], "gain": 0, "game": 19, "gave": 32, "gener": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 20, 22, 23, 24, 26, 27, 28, 29, 31], "generate_numb": 29, "gentli": [0, 19, 21, 22, 23, 24, 25], "get": [0, 3, 4, 10, 20, 22, 24, 28, 29], "get_all_feedback": [0, 23, 25], "get_call_argu": [5, 10, 23, 29], "get_child_feedback": 3, "get_context": 10, "get_data_st": 24, "get_data_typ": 24, "get_evalu": 0, "get_except": [5, 10, 23, 29], "get_files_lin": 0, "get_funct": [5, 10], "get_input": [5, 10, 23, 29], "get_lin": 0, "get_modul": [5, 10, 23, 29], "get_names_by_typ": 10, "get_opt": 19, "get_original_program": [5, 11], "get_output": [5, 10, 19, 23, 29], "get_plot": [5, 8], "get_program": [0, 5, 11, 19, 23, 30], "get_python_error": [5, 10, 23, 29], "get_raw_output": [5, 10, 23, 28, 29], "get_sandbox": [5, 10, 23, 29], "get_student_data": [5, 10, 23, 29], "get_submiss": 0, "get_trac": [5, 10, 23, 29], "get_values_by_typ": 10, "get_variables_by_typ": 10, "getattr": 31, "getter": 4, "gettrac": 4, "git": 20, "github": [13, 17, 20], "give": [0, 3, 6, 16, 17, 19, 22, 25, 26, 28, 31], "give_parti": [0, 19, 23, 25, 31], "given": [0, 3, 6, 7, 8, 10, 11, 12, 14, 19, 22, 25, 28, 29, 30, 31, 32], "global": [0, 3, 9, 10, 11, 14], "glossari": 17, "go": [0, 10, 19, 22], "goal": [0, 4, 16, 17, 29], "goe": [3, 19], "gone": [0, 3], "good": [16, 19, 22], "good_coverage_so_far": 19, "got": [22, 31], "grab": 19, "grade": [0, 3, 14, 16, 19, 20, 22, 25], "grade_assign": [19, 21, 22], "grade_choos": 19, "grade_create_world": 19, "grade_create_world_finish": 19, "grade_create_world_map": 19, "grade_create_world_play": 19, "grade_create_world_statu": 19, "grade_get_opt": 19, "grade_record": 19, "grade_rend": 19, "grade_render_end": 19, "grade_render_introduct": 19, "grade_upd": 19, "grade_win_and_lose_path": 19, "grader": [0, 22], "gradescop": [0, 14, 17], "grammat": 0, "grasp": 16, "great": [19, 25], "greater": [6, 28], "green": 6, "greentreesnak": [6, 31], "group": [0, 3, 10, 28], "group_nam": 0, "guess_numb": 28, "guid": [17, 24, 25], "guidanc": [0, 23, 25], "gusukuma": 13, "ha": [0, 3, 6, 7, 10, 11, 12, 14, 16, 18, 20, 22, 25, 27, 28, 29, 31, 32], "hack": [7, 28], "had": [19, 31, 32], "half": [6, 28], "handl": [0, 4, 6, 7, 8, 10, 12, 22, 25, 28, 29], "happen": [0, 3, 10, 22, 26], "hard": 16, "hardcod": 4, "harder": 3, "has_import": [5, 6], "hasattr": 28, "hash": 9, "hashlib": 4, "have": [0, 3, 4, 6, 10, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32], "haven": [24, 25], "haystack": [6, 28], "header": [20, 26, 31], "heavili": [0, 22], "hello": [22, 25, 28, 29, 31], "hello_world": 31, "help": [0, 1, 3, 14, 16, 25], "helper": [6, 7, 19], "here": [4, 6, 16, 19, 20, 22, 24], "hidden": 0, "hide": [0, 20], "hide_correct": [0, 23, 25], "hierarchi": 3, "high": [0, 2, 22], "higher": [0, 3, 32], "highest": [3, 20, 22], "highlight": 27, "hint": [0, 14, 21, 22, 23, 25, 26], "hist": 8, "histogram": 8, "histori": [10, 11], "hoc": 3, "hold": [0, 12, 29], "holder": 22, "hole": 32, "homogen": 12, "hook": 0, "host": 14, "hour": 0, "how": [0, 3, 6, 10, 11, 18, 19, 22, 27, 28], "howev": [0, 1, 3, 12, 15, 19, 20, 22, 24, 25, 26, 29, 31, 32], "html": [0, 6, 14, 20, 22, 26, 27], "htmlformatt": [23, 27], "http": [6, 15], "huge": 3, "human": [0, 2, 6, 10], "hundr": 22, "hyperlink": 27, "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "ic": [20, 27], "id": [10, 12, 22, 24], "idea": [0, 3, 4, 19, 22, 26], "ideal": [0, 2, 3], "ident": [6, 28], "identif": 3, "identifi": [0, 2, 3, 12, 14, 22, 24, 26, 32], "ignor": [0, 6, 11, 28], "ignored_feedback": 3, "imagin": 16, "imit": 29, "immedi": 3, "impact": 3, "imper": 0, "implement": [3, 4], "implicit": [14, 31], "import": [3, 4, 6, 8, 10, 12, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32], "import_error": [5, 10], "imported_arrow": 19, "imported_datetim": 19, "imported_panda": 19, "imported_r": 19, "importerror": 10, "imprecis": 28, "improv": [6, 15, 22, 25], "inact": [0, 3], "includ": [0, 3, 6, 7, 12, 14, 20, 22, 25, 29, 31], "inclus": [3, 7], "incompat": [22, 32], "incompatible_typ": 32, "incomplet": 7, "incorpor": [7, 25, 26], "incorporate_vari": 25, "incorrect": [27, 30, 32], "incorrect_answ": 22, "incorrect_ar": 32, "incorrect_number_of_sect": 30, "incorrectli": 31, "increas": [0, 10, 25], "incredibli": 4, "increment": 0, "indent": [24, 27], "indentation_error": [5, 10], "indentationerror": 10, "independ": [3, 11], "index": [9, 17, 19, 30, 32], "index_error": [5, 10], "indexerror": 10, "indic": [0, 3, 12, 25, 27, 30], "individu": [6, 22, 25, 28], "infer": [14, 26], "inferenc": 12, "infinit": 18, "info": [4, 11, 22], "inform": [0, 1, 3, 6, 8, 10, 12, 14, 15, 22, 25, 28, 29, 31], "infrastructur": 0, "inherit": [0, 3, 4, 12, 27], "initi": [0, 6, 7, 9, 10, 11, 16, 20, 22, 32], "initial_world": 19, "initialization_problem": 32, "initialized_accumul": 22, "inject": [0, 3, 10], "inner": 10, "innermost": 12, "input": [6, 10, 19, 25, 27, 28, 29], "insid": [4, 6, 16, 22, 27, 28, 31, 32], "insight": 16, "inspect": [0, 4, 22, 25], "instal": [17, 20], "instanc": [0, 3, 6, 10, 28], "instanti": [3, 12], "instantli": 0, "instead": [0, 3, 7, 10, 14, 19, 22, 24, 25, 26, 28, 30, 31, 32], "instruct": [0, 3, 17, 19, 25, 28, 31], "instructor": [0, 3, 6, 10, 14, 16, 17, 19, 20, 23, 24, 25, 26, 28, 29, 31], "instructor_fil": 0, "instructor_ignore_messag": 28, "instructor_test": 0, "int": [0, 3, 6, 7, 8, 9, 10, 16, 19, 22, 24, 27, 28, 29, 30, 31], "integ": [19, 22, 28, 29, 31], "integr": [15, 17, 22], "intellig": [0, 3], "intend": 15, "intens": 0, "intention": 14, "interact": [0, 27], "interest": [0, 3, 4, 20, 26], "interfac": [14, 20, 25], "intern": [0, 3, 10, 12, 17, 25, 26, 27, 29, 33], "interpol": [0, 26, 27], "interpolat": 3, "interpolatedvalu": 6, "interpret": 3, "introduc": 31, "introduct": [17, 19], "introspect": 12, "intuit": 28, "invalid": [0, 12, 31], "invalid_field_typ": 31, "invalid_parameter_typ": 31, "inventori": 19, "invers": 6, "inverse_oper": 6, "invert": 31, "investig": 4, "involv": [14, 29], "io": [4, 6], "io_error": [5, 10], "ioerror": [10, 30], "is_dat": 19, "is_dataclass": 28, "is_mod": 7, "is_top_level": [5, 7], "isinst": [28, 29], "isn": [9, 11], "issu": [3, 12, 14, 16, 20, 22, 29, 30, 31, 32], "item": [0, 19, 24, 28], "iter": [6, 9, 16, 19, 28, 31, 32], "iter_field": 4, "iterating_over_empty_list": 32, "iterating_over_non_list": 32, "iteration_problem": 32, "itertool": 4, "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 20, 22, 26, 27, 28, 29, 31, 32], "itself": [0, 3, 10, 12, 14, 16, 28, 29], "j": 1, "join": [13, 19], "json": [0, 3, 20, 23], "jupyt": [4, 17, 18], "just": [0, 3, 6, 10, 12, 16, 22, 26, 27, 28, 29, 31, 32], "justif": [0, 3, 6, 8, 23, 25, 26, 28, 30, 32], "justification_templ": 0, "kafura": 13, "keep": [0, 2, 20], "keep_context": 19, "kei": [0, 3, 4, 10, 19], "key_error": [5, 10], "keyerror": 10, "keyword": [0, 3, 10, 24, 25, 26], "keyword_argu": 0, "kind": [0, 2, 3, 6, 8, 10, 12, 14, 16, 21, 22, 23, 25, 26, 29, 31, 32], "know": [0, 10, 15, 19], "knowledg": 7, "known": 0, "kwarg": [0, 3, 6, 8, 10], "kwargs_loc": 10, "l": [19, 22], "label": [0, 2, 3, 6, 8, 14, 16, 19, 21, 22, 23, 25, 26, 28, 30, 31, 32], "languag": [12, 16], "larg": [3, 17, 20, 22, 26], "last": [0, 10, 16, 24, 29], "later": [0, 3], "latest": [6, 10, 11, 20, 30], "learn": 12, "learner": [0, 3, 14, 16, 22, 25], "least": [3, 12, 19, 28, 31], "leav": [1, 3], "led": 3, "left": [6, 9, 11, 28], "left_nam": 32, "legaci": 30, "len": [24, 28, 31], "length": [6, 28, 30], "less": [0, 6, 28], "lesser": 26, "let": [3, 15, 16, 19, 22, 29], "level": [0, 7, 10, 19, 24, 28, 31, 32], "librari": [1, 8, 15, 16, 17, 20], "lifetim": 17, "light": 30, "like": [0, 2, 3, 4, 6, 7, 10, 12, 16, 20, 22, 24, 25, 27, 28, 29, 31, 32], "limit": [4, 9, 22], "line": [0, 3, 6, 7, 8, 10, 14, 16, 17, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32], "lineno": [0, 30], "lines_messag": 31, "link": 3, "list": [0, 3, 6, 7, 8, 10, 11, 12, 16, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32], "list_inside_loop": 16, "liter": [4, 6, 10, 12, 19, 22, 31], "literal_messag": 31, "literal_typ": [6, 31], "literal_type_messag": 31, "literalbool": 24, "literalnon": 24, "literalnum": 24, "literalstr": 24, "littl": [3, 16, 28, 31, 33], "live": 16, "ll": [0, 22, 24], "load": [4, 10, 11, 16, 22, 29, 30], "load_error": 0, "local": 10, "locat": [3, 6, 8, 10, 17, 19, 31, 32], "log": [0, 23, 25, 31], "logic": [0, 3, 10, 14, 22], "long": [2, 6, 9, 10, 16, 19, 27, 28], "longer": [10, 30], "look": [3, 6, 7, 16, 19, 20, 22, 24, 25, 31, 32], "loop": [0, 16, 18, 22, 24, 25, 31, 32], "lose": 19, "lose_path": 19, "lost": 19, "lot": [16, 21, 28, 29], "low": [0, 2], "lower": [19, 22, 25], "lowercas": [0, 2, 6, 28], "lowest": [3, 19, 22], "luke": 13, "lukesg08": 13, "m": [1, 4, 20], "machineri": 22, "mad": 4, "made": [0, 6, 8, 10, 22, 29], "madlib": 19, "magic": 20, "mai": [0, 1, 4, 12, 14, 16, 19, 24, 26, 28, 31], "main": [0, 1, 3, 6, 10, 11, 12, 14, 27, 28, 30, 31], "main_cod": [0, 3], "main_fil": 0, "main_report": [0, 3, 7, 9, 10, 11], "maintain": 13, "major": [3, 4, 16, 26], "make": [0, 1, 3, 6, 7, 10, 16, 17, 19, 20, 22, 28, 30, 31, 32], "make_safe_vari": 10, "manag": [4, 10, 28, 29], "mangl": 19, "mani": [3, 6, 10, 16, 22, 24, 31], "manipul": [12, 26], "manner": 3, "manual": 3, "map": [0, 7, 10, 12, 19, 22, 29, 31], "mark": [0, 3, 22, 27], "markdown": [0, 14, 26, 27], "match": [0, 6, 7, 8, 16, 22, 23, 28, 32], "match_signatur": 19, "materi": 0, "math": [4, 22, 29, 31], "matplotlib": [8, 10], "matter": 4, "max": 31, "maximum": [6, 20], "maximum_temporary_length": 10, "mayb": [12, 32], "md5": 4, "mean": [0, 3], "meant": [0, 3, 14, 22, 25, 27], "measur": 16, "mechan": [0, 26], "medium": [0, 2, 17], "meet": [0, 7, 26], "member": [0, 3], "memory_error": [5, 10], "memoryerror": 10, "mental": 14, "mess": 31, "messag": [0, 3, 4, 6, 8, 10, 11, 14, 16, 19, 20, 22, 23, 25, 26, 28], "message_templ": [0, 3, 6, 8, 23, 25, 26, 27], "message_text": 0, "messi": 28, "met": [0, 3, 6, 26], "meta": [7, 14, 25, 29], "metacognit": 0, "metadata": [0, 14, 17, 21, 22], "method": [4, 6, 7, 10, 12, 17, 19, 31], "methodtyp": 4, "middl": 0, "might": [0, 1, 3, 4, 10, 16, 19, 22, 25, 26, 27, 28, 29], "min": 31, "mind": 0, "minim": 3, "minimalist": 16, "minimum": [6, 22], "mirror": 24, "misconcept": [0, 14], "mismatch": 32, "miss": [0, 4, 6, 31], "missing_dataclass": 31, "missing_dataclass_annot": 31, "missing_field_typ": 31, "missing_funct": 31, "missing_parameter_typ": 31, "missing_return_typ": 31, "mistak": [0, 3, 14, 16, 19, 22, 26, 27], "mistakenli": [28, 31], "mock": [4, 8, 10, 19, 29], "mock_funct": [5, 10, 23, 29], "mock_modul": [5, 10, 23, 29], "mockedmockmodul": 29, "mockmodul": 10, "mockped": 19, "mod": 4, "model": 17, "modif": 10, "modifi": [0, 3, 10, 19, 24, 25, 29], "modul": [0, 4, 5, 6, 7, 8, 10, 15, 17, 19, 22, 28, 29, 31, 32], "module_nam": [10, 29, 31], "module_not_found": 32, "moduletyp": 4, "modulo": 9, "monkei": 4, "more": [0, 3, 4, 6, 10, 14, 15, 16, 19, 22, 24, 25, 26, 28, 29, 30, 31], "most": [0, 1, 3, 4, 6, 7, 10, 14, 16, 20, 22, 24, 25, 26, 28, 29, 31, 32], "mostli": [0, 2, 4, 27, 30], "motiv": 0, "move": [0, 30, 31], "move_forward": 31, "mro": 4, "much": [3, 7, 19, 21, 25, 29, 32], "multilin": [4, 7], "multipl": [0, 4, 6, 11, 12, 25, 26, 28, 29, 30, 31, 32], "multiple_return_typ": 32, "multipli": 22, "mundan": 31, "must": [0, 6, 7, 19, 27, 28, 31, 32], "mutabl": [10, 12], "mute": [0, 3, 6, 8, 11, 19, 23, 25, 26, 32], "my": [0, 3], "my_point": 28, "my_sum": 29, "my_variable_nam": 12, "n": [16, 19, 24, 31], "n2": [22, 25], "n3": 22, "n31": 25, "n44": 25, "name": [0, 3, 6, 7, 10, 12, 14, 17, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32], "name_error": [3, 5, 10], "name_is_not_a_dataclass": 31, "name_is_not_a_funct": 28, "name_messag": [28, 31, 32], "nameerror": [0, 10], "names_messag": 31, "namespac": [0, 10, 11, 12, 14, 28, 29], "narrow": 31, "nativ": [10, 11, 29], "nbformat": 4, "nearest": 19, "necessari": [1, 3, 15, 17, 22, 28, 30], "necessarili": 14, "need": [0, 1, 3, 4, 9, 12, 14, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32], "need_multipl": 25, "needl": [6, 28], "neg": [0, 3, 22], "negative_mark": 27, "neighbor": 19, "neither": 33, "nest": [4, 28], "neutral": [0, 3], "never": [0, 22, 32], "new": [0, 3, 10, 11, 12, 19, 20, 26, 27, 28, 29, 30, 32], "new_data": 10, "new_vers": [10, 29], "newark": 19, "newlin": [6, 10, 28, 29], "next": [0, 10, 11, 22, 30, 31], "next_sect": 30, "nice": [10, 28], "no_plt": [5, 8], "node": [0, 6, 7, 11, 12, 22, 24, 31, 32], "node_nam": 7, "nodevisitor": 4, "non": [0, 3, 12, 17, 19, 28, 29, 32], "none": [0, 3, 6, 7, 8, 9, 10, 11, 12, 19, 24, 25, 28, 29, 31], "nonetyp": 24, "nor": 33, "normal": [0, 6, 10, 22, 24, 28, 29, 31], "not_a_funct": 32, "not_enough_sect": 30, "not_print": 25, "notabl": 0, "note": [0, 10, 19, 24, 26, 28, 29, 31], "notebook": [17, 18], "noth": [1, 7, 10], "notic": [0, 19, 22, 28], "now": [0, 3, 19, 22, 25], "npm": 1, "nuanc": 0, "null": 0, "num": [19, 31], "number": [3, 4, 6, 8, 10, 12, 14, 16, 19, 24, 26, 27, 28, 29, 30, 31, 32], "number_of_filenam": 31, "numer": [0, 3, 12, 25, 27], "numtyp": 24, "o": [4, 19], "obj": [6, 28], "object": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 20, 22, 23, 24, 25, 28, 29], "oblig": [3, 25], "obviou": [1, 28], "occur": [3, 10, 12, 28], "occurr": [6, 7, 25], "off": [0, 3, 7, 10, 19], "offset": 0, "often": [0, 3, 4, 14, 24, 25, 28], "oh": 4, "okai": 19, "old": [0, 25, 32], "onc": [22, 28, 31, 32], "one": [0, 3, 4, 7, 9, 10, 12, 14, 16, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32], "ones": [11, 26, 30], "onli": [0, 3, 4, 6, 10, 14, 16, 17, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32], "only_printing_vari": [5, 6, 23, 31], "op": 12, "op_nam": [6, 7, 32], "open": [6, 10, 14, 19, 25, 30, 31], "open_without_argu": [5, 6, 31], "oper": [0, 3, 6, 7, 8, 12, 19, 22, 24, 28, 31, 32], "operand": 32, "oppos": [6, 10, 24, 28], "optim": 1, "option": [0, 7, 10, 11, 15, 17, 19, 20, 22, 25, 29], "order": [0, 3, 4, 6, 11, 19, 25, 28, 31], "organ": [0, 4, 14, 19], "origin": [3, 10, 11, 28], "other": [0, 3, 4, 6, 10, 14, 16, 17, 20, 24, 25, 27, 28, 29, 30, 31, 32], "other_plt": [5, 8], "otherwis": [0, 3, 4, 6, 7, 8, 10, 11, 14, 25, 26, 28, 29, 30, 31], "our": [3, 4, 13, 16, 17, 19, 20, 21, 22, 28], "out": [0, 3, 4, 7, 10, 12, 16, 19, 22, 25, 32], "outcom": [0, 19], "outer": 10, "output": [1, 3, 6, 10, 14, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31], "outsid": [15, 32], "over": [0, 10, 19, 26, 27, 32], "overal": [0, 3, 6, 25], "overlap": [6, 25], "overrid": [0, 4, 6, 10, 17, 25, 26, 28, 30, 31], "overridden": [0, 14], "overwrit": 10, "overwritten": [12, 32], "overwritten_vari": 32, "own": [0, 3, 4, 7, 12, 22, 28, 29], "packag": [7, 24], "page": [4, 13, 17, 18, 21, 26], "pain": 4, "pair": [0, 6, 8, 26, 28], "panda": 19, "param": [0, 7, 10, 11], "paramet": [0, 3, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 25, 26, 27, 28, 29, 31, 32], "parameter": 3, "parameter_messag": 31, "parameter_name_messag": 32, "parameter_type_mismatch": 32, "parameter_type_nam": 32, "parent": [0, 3, 6, 8, 24], "pars": [0, 4, 7, 10, 11, 22, 29, 30, 31], "parse_date_dai": 19, "parse_date_month": 19, "parse_date_year": 19, "parse_program": [5, 7, 19], "part": [0, 6, 11, 17, 25, 28, 30], "parti": 17, "partial": [3, 6, 16, 22, 25, 31], "partial_credit": [6, 28], "particular": [3, 25], "particularli": [3, 10, 12, 21], "pass": [0, 3, 6, 10, 12, 22, 24, 25, 28, 29, 30, 32], "patch": [4, 10], "path": [1, 4, 12, 19, 32], "path_nam": 19, "pattern": [6, 7, 11, 17, 24, 28, 30], "payoff": 22, "pedagog": [0, 3, 14, 16, 25, 33], "pedal": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32], "pedal_path": 1, "peopl": 20, "pep8": 28, "per": 6, "percentag": [6, 28, 29], "perfectli": [10, 22, 29], "perform": [0, 3, 6, 12, 30, 32], "perhap": [0, 3, 10, 25, 28, 31], "period": 0, "person": 31, "perspect": [0, 3, 26], "phase": [3, 16, 19], "phrase": 0, "pickl": 4, "piec": [0, 3, 14, 21, 22, 25, 26], "pile": 3, "pip": [15, 20], "place": [22, 29], "plai": 19, "plain": [0, 14, 26, 27], "platform": [0, 1, 9, 15, 16, 20, 22], "player": 19, "pleas": [19, 20, 30], "plot": [5, 8, 10, 29], "plt": 8, "plt_rename_err": [5, 8], "plt_type": 8, "plt_wrong_import": [5, 8], "plu": [3, 30], "plural": 31, "point": [0, 3, 6, 10, 24, 28], "polit": 0, "pool": [3, 4, 9], "popular": 4, "port": 4, "posit": [0, 3, 6, 10, 21, 26], "possibl": [0, 2, 3, 4, 14, 15, 20, 21, 22, 29, 32], "possible_initialization_problem": 32, "possibli": 32, "post": [3, 28], "postcondit": 19, "potenti": [0, 3, 12, 14], "power": [3, 17, 25, 27, 32], "practic": [6, 17, 19, 31, 33], "precis": 28, "precompil": 1, "precondit": 19, "preconfigur": 20, "prefer": 22, "preformat": 20, "preload": 20, "prematur": 0, "prepar": 20, "presenc": [0, 14], "present": [0, 6, 8, 9, 22], "pretend": 22, "pretti": [4, 10, 28], "prevent": [0, 6, 10, 22, 28, 29], "prevent_advanced_iter": [5, 6, 23, 31], "prevent_ast": [5, 6, 19, 22, 23, 31], "prevent_embedded_answ": [5, 6, 23, 31], "prevent_function_cal": [5, 6, 19, 22, 23, 31], "prevent_import": [5, 6, 19, 22, 23, 31], "prevent_incorrect_plt": [5, 8], "prevent_liter": [5, 6, 19, 22, 23, 31], "prevent_literal_typ": [5, 6, 22, 23, 31], "prevent_oper": [5, 6, 22, 23, 31], "prevent_printing_funct": [5, 6, 19, 23, 31], "previou": [10, 11, 12, 14, 24, 32], "previous": [0, 7, 10, 11, 32], "primari": 29, "print": [6, 7, 10, 19, 22, 24, 25, 27, 28, 29, 31], "print_resolv": 22, "print_typ": 24, "print_valu": 22, "printabl": 0, "prior": [7, 24], "priorit": [3, 22, 26], "prioriti": [0, 2, 3, 6, 8, 19, 20, 22, 23, 25, 26], "probabl": [0, 3, 22, 27], "problem": [3, 4, 9, 16, 19, 25, 28, 31, 32], "problemat": 12, "procedur": 0, "process": [3, 12, 16], "process_ast": 12, "process_cod": 12, "processs": 3, "produc": [0, 6, 7, 14, 19, 20, 22], "program": [6, 7, 10, 12, 16, 17, 27, 29, 32], "progress": 16, "proivd": 31, "project": [1, 17, 27], "prologu": 30, "prompt": 29, "proper": [25, 28, 31], "properli": [4, 10], "properti": [4, 10], "provid": [0, 3, 6, 10, 14, 16, 17, 21, 22, 25, 26, 27, 28, 29, 31], "provide_opt": 28, "proxi": [10, 22, 29], "punctuat": [4, 6, 28], "pure": [1, 15, 16], "purpos": [0, 3, 26], "put": [0, 3, 19, 22], "py": [0, 4, 11, 16, 19, 20, 21, 22, 25], "py_object": 4, "pyodid": 17, "pypi": 17, "pyplot": [8, 10], "python": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 19, 20, 22, 27, 29], "python3": 20, "python_cod": [25, 27], "python_express": [27, 31], "python_valu": [26, 27], "pythonapi": 4, "qualifi": 12, "quantiti": 22, "question": [0, 3, 4, 5, 14, 16, 17, 22], "queu": [10, 29], "queue": [10, 29], "queue_input": [5, 10, 23, 29], "quick": [17, 24], "quickli": [6, 15], "quickstart": 0, "quit": [18, 19, 21], "quot": 19, "r": 4, "rais": [3, 7, 10, 20, 29], "ran": [22, 28], "random": [4, 19], "rang": [9, 16], "rather": [17, 20, 27, 29], "ratio": [6, 10, 28], "raw": [0, 4, 16, 29], "raw_output": [6, 10], "re": [0, 4, 19, 22, 24, 28], "reach": [0, 25], "reachabl": 31, "read": [0, 6, 10, 12, 14, 19, 25, 29, 32], "read_out_of_scop": 32, "readabl": 10, "readi": [18, 21], "readlin": 19, "readthedoc": 6, "real": [10, 19, 29], "real_io": 10, "realli": [4, 14, 20, 28], "reason": 28, "receiv": [0, 28], "recent": [6, 7, 10, 16, 28], "recogn": [0, 10, 29, 31], "recommend": [0, 2, 3, 22, 25], "reconfigur": 20, "record": [6, 10, 12, 19, 29], "recurs": [0, 6, 10, 18, 24, 31, 32], "recursive_cal": 32, "reduc": 31, "rees": 22, "refer": [0, 2, 6, 7, 10, 14, 15, 17, 22, 31], "refin": 25, "reflect": [12, 14], "regardless": [3, 19], "regex": [6, 28], "region": [0, 22], "regist": [0, 4], "register_tool": 0, "regrad": 22, "regul": 0, "regular": [0, 7, 11, 19, 22, 27, 30], "rel": [0, 22], "relat": [3, 4, 6, 8], "relev": [0, 7, 14, 22, 27, 29], "reli": [0, 10], "rememb": [6, 19], "remov": [0, 1, 6, 9, 10, 11, 25, 28, 29, 30, 31], "render": [0, 19, 26, 27], "render_end": 19, "render_introduct": 19, "reorder": 3, "reparse_if_need": [5, 7], "repeatedli": [6, 28], "replac": [1, 11, 19], "replace_main": 0, "replic": 4, "report": [3, 6, 8, 9, 10, 12, 14, 16, 17, 22, 25, 27, 29, 30, 32], "repositori": 15, "repres": [0, 3, 7, 12, 25], "represent": [0, 7, 12], "requir": [0, 4, 6, 14, 19, 20, 28, 31], "require_tifa": [5, 7], "rerout": 4, "rerun": 29, "research": [0, 14, 16, 17], "reserv": 22, "reset": [0, 5, 6, 7, 9, 10, 11, 12, 25], "reset_default_mock": 10, "reset_default_overrid": 10, "reset_funct": 0, "reset_output": [5, 10], "reshap": 4, "resolut": [0, 4], "resolv": [0, 3, 4, 14, 16, 17, 19, 20, 25, 26], "resolve_al": 19, "respect": [0, 11, 31], "respons": [0, 3, 14, 16, 21, 22, 25, 26, 28, 30, 31, 32], "restor": [3, 30], "restore_cod": [5, 11, 23, 30], "restrict": [2, 4, 10], "result": [0, 3, 4, 10, 12, 14, 16, 17, 19, 20, 27, 28, 29], "retriev": [0, 6, 7, 8, 10, 11, 25, 28, 29, 30], "return": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 22, 24, 26, 27, 28, 29, 31, 32], "return_outside_funct": 32, "reus": [0, 3, 10, 25], "reusabl": 3, "revert": 7, "review": 22, "revis": 25, "rewind": 10, "rewrit": [4, 12], "rich": 22, "right": [3, 4, 6, 9, 10, 16, 19, 28, 30, 31, 32], "right_nam": 32, "risk": 3, "role": [0, 14], "root": [3, 6, 7, 11, 24, 31], "roughli": 19, "round": 19, "row": 27, "rstrip": [10, 19, 29], "rule": [0, 6, 26], "run": [0, 1, 4, 5, 6, 7, 10, 12, 14, 16, 18, 19, 20, 22, 23, 24, 28, 29, 32], "run_autograd": 20, "runtim": [0, 3, 6, 10, 14, 16, 17, 21, 22, 23, 25, 26, 29, 31], "runtime_error": [5, 10], "sacrif": 3, "safe": [10, 22], "sai": [22, 28], "said": 28, "same": [0, 3, 6, 9, 12, 14, 19, 22, 24, 25, 26, 28, 29, 31, 32], "sandbox": [0, 3, 4, 5, 6, 8, 16, 17, 19, 22, 23, 28], "sandbox_mixin": 10, "sandboxcontext": [6, 10], "sandboxresult": 10, "saniti": 19, "save": [3, 23], "save_to_fil": 31, "scatter": 8, "scenario": [14, 16, 19], "schema": [0, 2], "scope": [12, 28, 31, 32], "score": [0, 3, 6, 8, 16, 19, 20, 22, 23, 25, 26, 28, 31], "script": [0, 3, 14, 16, 17, 19, 20, 25, 26], "search": [0, 4, 6, 7, 17, 24, 28, 31], "second": [0, 25, 28, 29, 32], "secretli": 22, "section": [0, 3, 11, 23, 32], "see": [2, 6, 16, 20, 22, 24, 26, 28, 29], "seed": [4, 9], "seed_valu": 9, "seem": [0, 4], "seen": 6, "segfault": 28, "select": [0, 9, 16], "self": [3, 7, 16, 27], "semant": 0, "semvar": 0, "sens": 3, "sent": 16, "sep": 0, "separ": [0, 2, 3, 11, 29, 30], "separate_into_sect": 30, "sequenc": [6, 28, 32], "sequenti": 12, "seri": 22, "serial": 3, "serializ": 3, "seriou": [0, 3], "serv": [0, 3, 9], "server": 20, "set": [0, 3, 6, 7, 9, 10, 11, 12, 20, 22, 25, 26, 28, 29, 30, 31, 32], "set_assertion_mod": 19, "set_correct": 0, "set_formatt": 0, "set_input": [5, 10, 23, 29], "set_line_offset": 0, "set_maximum_scor": 20, "set_se": [5, 9], "set_sourc": [5, 11, 23, 30], "set_source_fil": [5, 11], "set_student_data": 10, "set_success": [0, 19, 23, 25], "setattr": 31, "setdefault": 3, "setrecursionlimit": 18, "settrac": [4, 29], "setup": [0, 4, 9, 14, 19, 20, 22], "setup_ped": 19, "sever": [14, 16, 22], "sh": 20, "shadowed_builtin": 22, "short": [2, 3, 10], "shortcut": 3, "should": [0, 2, 3, 4, 10, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32], "shouldn": [16, 29, 32], "show": [0, 3, 8, 11, 19, 20, 22, 26], "showabl": 0, "shown": [0, 3, 10, 16, 25, 26, 29], "sibl": 24, "side": [6, 14, 22, 28, 32], "sign": [3, 19], "signal": 25, "signatur": [6, 19], "similar": [0, 3, 6, 10, 24, 25, 28], "simpl": [0, 2, 12, 17, 19, 20, 25, 31, 33], "simpler": [14, 28], "simpli": [3, 6, 10, 28, 31], "simplif": 12, "simplifi": 0, "simplist": 6, "sinc": [0, 3, 4, 6, 10, 14, 16, 20, 21, 22, 25, 28], "singl": [0, 4, 6, 7, 8, 10, 11, 12, 14, 20, 22, 28, 29, 30, 31], "singleton": [0, 14], "singular": 32, "singular_nam": 32, "situat": [12, 22, 25, 28], "skip": [3, 19], "skip_tifa": 19, "skulpt": 17, "sleep": 19, "slice": 12, "slightli": [4, 6], "small": [0, 3], "snake": 6, "snake_cas": 28, "sneakili": 29, "snek": 20, "so": [0, 3, 4, 6, 7, 9, 10, 19, 22, 24, 25, 28, 29, 30, 31], "softwar": 17, "solut": [16, 25, 30, 31], "solv": 22, "some": [0, 3, 4, 6, 11, 12, 14, 16, 19, 22, 24, 25, 26, 28, 30, 31], "somehow": 4, "someth": [0, 2, 3, 22, 24, 25, 27, 28, 31], "sometim": [0, 10, 12, 22, 28, 29], "somewhat": [22, 28], "somewher": [3, 6], "sophis": 19, "sophist": [3, 4, 16, 29], "sorri": [18, 21], "sort": [0, 6, 26, 28, 31], "sound": [4, 25, 33], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 20, 22, 23, 24, 25, 29], "source_file_not_found": [11, 30], "space": [0, 6, 27, 28], "span": 27, "speak": 14, "special": [0, 1, 2, 3, 8, 12, 15, 20, 25, 28], "special_comparison": 8, "specif": [0, 3, 4, 14, 15, 16, 24, 25, 26, 31], "specifi": [0, 3, 6, 7, 16, 25, 31], "spell": 0, "spit": 16, "split": [4, 6, 10, 19, 28], "sprite": 31, "sqlite3": 4, "stack": [10, 12], "stanc": 25, "standard": [0, 15, 17, 27], "start": [0, 3, 6, 10, 17, 19, 27, 29, 31], "start_grouping_context": 10, "start_trac": [5, 10, 23, 29], "startswith": 19, "state": [0, 7, 10, 12, 14, 24, 25], "statement": [3, 6, 7, 10, 12, 16, 19, 22, 28, 29, 31, 32], "static": [0, 3, 6, 17, 22, 23], "statist": 22, "statu": [0, 3, 19], "stderr": 4, "stdin": [0, 4], "stdout": [4, 10, 29, 31], "step": [4, 14], "still": [0, 3, 4, 10, 28, 29], "stolen": 4, "stop": [10, 12, 29], "stop_group": 0, "stop_grouping_context": 10, "stop_sect": 30, "stop_trac": [5, 10, 23, 29], "store": [0, 9, 10, 11, 12, 16, 19, 22, 29, 32], "store_with_read": 12, "stori": 19, "story_fil": 19, "str": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 22, 25, 26, 27, 28, 29, 30, 31], "strategi": [0, 3, 6, 25, 28], "streamlin": 0, "strictli": [0, 28], "string": [0, 3, 4, 6, 7, 9, 10, 11, 12, 19, 22, 24, 25, 26, 28, 29, 30, 31], "stringio": 4, "strip": [19, 30], "strive": 26, "strong": 0, "strongli": 25, "strtype": 24, "structur": [7, 8], "student": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31], "student_answ": [26, 27], "student_cod": [7, 22], "student_func_cal": 24, "student_func_def": 24, "student_submiss": 22, "student_var": 24, "student_var_nam": 24, "stuff": [4, 19], "style": [0, 6, 14, 19, 22], "stylist": 0, "sub": [4, 7], "subclass": [0, 3, 4, 12], "submatch": 24, "submiss": [3, 7, 10, 11, 12, 14, 16, 17, 20, 22, 25, 30, 32], "submit": [12, 16, 20], "submodul": [0, 14], "subscr": 4, "subscript": [4, 12, 31], "subsequ": [10, 22, 29, 30], "subsitut": 11, "substitut": [0, 11], "subtask": 26, "subtract": [3, 29], "subtre": [7, 22, 23], "success": [0, 3, 7, 11, 12, 20, 25, 26], "successfulli": [7, 8, 11], "suffici": [4, 31], "suggest": [0, 3], "suggestion_messag": 30, "suitabl": [14, 19], "sum": [0, 6, 16, 19, 22, 28, 29, 31], "summar": [18, 21], "super": [3, 4, 19], "supplant": 22, "support": [0, 3, 4, 6, 7, 10, 14, 22, 24, 26, 28, 31], "suppos": [27, 31], "suppress": [0, 3, 14, 19, 23, 25], "sure": [3, 4, 6, 10, 19, 20, 22, 30, 31, 32], "surprisingli": 31, "surround": 0, "suspect": 4, "sy": [4, 10, 18, 19, 29, 31], "symbol": [12, 27], "syntax": [0, 3, 10, 11, 14, 16, 19, 22, 25, 26, 27, 29, 30], "syntax_error": 30, "system": [0, 3, 4, 10, 14, 16, 17, 23, 25, 28], "system_error": 0, "t": [0, 3, 4, 7, 9, 11, 15, 16, 18, 19, 21, 24, 25, 26, 28, 29, 31, 32], "tabl": [22, 27], "tabul": 4, "tabular": 28, "tag": [0, 6, 8, 14, 20], "take": [0, 3, 14, 19, 22, 25, 28], "taken": [0, 3], "talk": [4, 22], "target": [6, 10, 12, 19, 29, 32], "target_typ": 12, "task": [0, 3, 26], "teach": 19, "teacher": [0, 3, 16, 17, 26], "tech": 13, "technic": [0, 3, 7, 14, 31], "tediou": 22, "templat": [0, 3, 6, 26], "template_text": 0, "temporari": 10, "temporarili": [11, 25], "tend": [0, 25], "term": 3, "termin": 12, "terminologi": 28, "test": [0, 3, 6, 10, 16, 17, 19, 28, 29], "test_path": 19, "text": [0, 3, 6, 10, 14, 19, 20, 25, 26, 27, 28], "textformatt": [23, 27], "textual": [6, 22], "than": [0, 6, 14, 16, 17, 19, 20, 22, 24, 27, 28, 29, 31], "thei": [0, 3, 4, 6, 10, 14, 15, 16, 19, 22, 25, 28, 29, 31, 32], "them": [0, 2, 3, 4, 6, 10, 19, 22, 25, 28, 29, 30, 31, 32], "themselv": 10, "therefor": [3, 27, 28], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "thing": [0, 3, 4, 12, 18, 20, 22, 26, 29, 31], "think": [4, 6, 27, 28], "third": [0, 17], "those": [1, 3, 6, 10, 14, 28, 29, 31], "though": [0, 4, 6, 7, 32], "thread": [4, 10, 29], "three": [0, 12, 19, 28], "through": [0, 3, 4, 6, 7, 8, 12, 19, 20, 22, 30], "throughout": 22, "throw": 9, "ti": [0, 20], "tifa": [0, 4, 5, 6, 7, 17, 20, 22, 23, 24, 25], "tifa_analysi": [5, 12, 16, 23, 24, 32], "tifa_cor": 12, "tifaanalysi": 12, "time": [0, 3, 4, 6, 10, 14, 19, 22, 28, 31, 32], "timeout": [4, 10], "timeout_error": [5, 10], "timeouterror": 10, "titl": [0, 3, 6, 8, 16, 19, 22, 23, 26], "tl": 0, "to_json": [0, 3], "todo": [0, 6, 7, 10, 12, 32], "togeth": [0, 3, 10, 28], "too": [0, 4, 10, 31], "too_few_field": 31, "too_few_paramet": 31, "too_many_field": 31, "too_many_paramet": 31, "took": 24, "tool": [2, 3, 6, 7, 8, 9, 11, 14, 16, 17, 22, 23, 25, 26, 32], "tool_nam": 0, "toolkit": [0, 19, 22], "toolregistr": 0, "tooltip": 3, "top": [7, 10, 12, 19, 27, 28, 31, 32], "total": [0, 3, 6, 10, 16, 22, 28], "total_cal": 28, "toward": [3, 16, 28], "tqdm": 4, "trace": [4, 6, 10, 24, 27, 28, 29], "traceback": [4, 10, 16, 22, 27], "traceback_messag": [10, 30], "traceback_preambl": 30, "tracebackexcept": 4, "tracer": [4, 29], "tracer_styl": [10, 29], "track": [0, 10, 16, 21, 25], "trail": [6, 28, 29], "translat": 4, "travers": [6, 7, 12], "treat": [2, 3, 10, 29], "tree": [6, 7], "trexler": 22, "tri": [10, 11, 15, 16, 19, 20, 30], "trigger": [0, 16, 25, 30], "trim": 7, "tripl": [19, 22], "trivial": 19, "troubl": 18, "true": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 29, 31], "trunc": 4, "truncat": 4, "truthi": [3, 28], "try": [0, 2, 4, 19, 21, 25, 28, 33], "tupl": [0, 6, 12, 26, 28, 29, 31], "tupletyp": 24, "turn": [3, 10, 22, 27], "turtl": [5, 8, 10], "tutori": 24, "twice": 31, "two": [3, 6, 8, 14, 19, 22, 25, 28, 31, 32], "txt": [19, 25, 31], "type": [0, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 28, 29, 31, 32], "type_chang": 32, "type_definit": 24, "type_error": [5, 10], "typecheck": 16, "typeerror": 25, "typic": [0, 3, 10, 14, 24, 25, 26, 28, 29], "typograph": 0, "u": [4, 13, 15, 16], "udel": [0, 13], "ultim": [0, 3, 22], "unari": [6, 7, 31], "unbalanc": 4, "uncategor": 0, "unchang": [3, 27], "unclear": 4, "uncondition": 3, "unconnect": 32, "unconnected_block": 32, "undeclar": 16, "undefin": 3, "under": [0, 20, 29], "underli": 3, "underscor": [0, 2, 3, 22], "understand": 29, "undesir": 0, "undo": 30, "unequ": 32, "unexect": 10, "unexecut": 10, "unexpect": 4, "unfil": 32, "unfortun": 4, "unhappi": 3, "unhelp": 16, "unifi": 6, "uniform": 12, "uniqu": [0, 2, 3, 6, 10, 14, 26, 28, 29], "unique_cal": 28, "unique_call_count": 6, "unit": [3, 6, 16, 17, 19, 28], "unit_test": [0, 5, 6, 19, 22, 23, 28], "unittest": [4, 6, 19], "univers": [13, 26], "unknown": [0, 3, 31], "unknown_field": 31, "unknowntyp": 24, "unless": [4, 6, 7, 10, 12, 29], "unlik": [6, 26, 28], "unload": 10, "unmodifi": 27, "unnecessari": 32, "unnecessary_second_branch": 32, "unscor": [0, 3, 6, 8, 19, 23, 26], "unspecifi": 0, "unsurprisingli": 31, "until": [3, 4, 10, 32], "unus": [22, 25, 32], "unused_vari": [3, 32], "unusu": 33, "up": [0, 3, 7, 10, 16, 22, 25, 28, 29], "updat": [0, 3, 19, 25], "update_loc": 0, "upload": 20, "us": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "usabl": 20, "usag": [17, 21, 24, 25], "use_previ": 7, "used_dollar_sign": 19, "used_tri": 19, "user": [0, 3, 4, 6, 7, 8, 10, 25, 27], "usr": 20, "usual": [0, 3, 4, 10, 26, 29, 32], "util": [0, 4, 19], "utterli": 3, "valenc": [0, 3, 6, 8, 14, 26], "valid": [2, 3, 10], "valu": [0, 3, 4, 6, 9, 10, 12, 14, 19, 22, 25, 28, 29, 31, 32], "value_error": [5, 10], "valueerror": [10, 29], "var": [10, 24], "vari": 0, "variabl": [0, 2, 3, 6, 10, 12, 16, 19, 20, 22, 23, 25, 28, 29, 31, 32], "variable_nam": [6, 28], "variou": [0, 1, 3, 4, 26], "vastli": [6, 22], "ve": [19, 22], "verb": 3, "veri": [0, 3, 6, 25, 31], "verifi": [5, 6, 8, 11, 16, 22, 23, 28, 30], "verify_sect": [5, 11], "version": [0, 4, 6, 8, 10, 11, 14, 19, 20, 22, 25, 28, 29, 31], "version_info": 4, "via": [0, 4, 10, 15, 16, 22, 25, 29, 31], "viewabl": 25, "violat": 0, "virginia": 13, "vision": 20, "visit": [12, 32], "visit_": 12, "visit_annassign": 12, "visit_assign": 12, "visit_attribut": 12, "visit_augassign": 12, "visit_binop": 12, "visit_bool": 12, "visit_boolop": 12, "visit_classdef": 12, "visit_compar": 12, "visit_comprehens": 12, "visit_const": 12, "visit_dict": 12, "visit_dictcomp": 12, "visit_expr": 12, "visit_for": 12, "visit_functiondef": 12, "visit_generatorexp": 12, "visit_if": 12, "visit_ifexp": 12, "visit_import": 12, "visit_importfrom": 12, "visit_lambda": 12, "visit_list": 12, "visit_listcomp": 12, "visit_nam": 12, "visit_nameconst": 12, "visit_num": 12, "visit_return": 12, "visit_setcomp": 12, "visit_slic": 12, "visit_stat": 12, "visit_str": 12, "visit_subscript": 12, "visit_unaryop": 12, "visit_whil": 12, "visit_with": 12, "vpl": 17, "vpl_environ": 20, "vpl_evalu": 20, "vpl_execut": 20, "vpl_subfile0": 20, "vt": 13, "w": 19, "wa": [0, 3, 4, 6, 7, 8, 10, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "wai": [0, 4, 14, 17, 19, 22, 26, 28], "walk": [3, 19], "want": [0, 3, 4, 6, 7, 10, 13, 19, 20, 22, 24, 25, 26, 28, 29, 31], "warrant": [14, 16], "was_typ": 24, "wasnot": 32, "we": [0, 2, 3, 4, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 28, 31], "web": [14, 17, 27], "webcat": [0, 14], "well": [3, 4, 14, 22, 24], "went": [25, 29], "were": [3, 4, 6, 7, 10, 27, 28, 29, 30, 31, 32], "what": [0, 3, 4, 10, 16, 17, 22, 26, 28, 29], "whatev": [0, 3, 6, 10, 14, 24, 28, 29], "wheat": 6, "wheat_chaff_game_class": [5, 6], "when": [0, 2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 25, 26, 28, 29, 30, 32], "whenev": 2, "where": [3, 4, 10, 19, 25, 29, 32], "whether": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 31], "which": [0, 1, 3, 4, 10, 12, 16, 19, 20, 22, 25, 26, 27, 28, 29, 31], "while": [1, 3, 6, 11, 12, 22, 29, 30, 31], "white": 27, "whitespac": [29, 31], "who": [0, 26, 32], "whole": [6, 19], "whose": 32, "why": [0, 4, 6, 17, 25, 26, 28, 29], "why_ignor": [6, 28], "wide": [0, 16], "wild": 22, "wildcard": 22, "win": [3, 19], "win_and_lose_path": 19, "win_path": 19, "wish": [0, 22, 28], "within": [0, 1, 2, 3, 6, 7, 10, 14, 22, 23, 29, 32], "without": [0, 3, 6, 7, 10, 12, 15, 16, 19, 28, 31], "won": [0, 19, 26, 28], "wonder": 4, "word": [0, 6, 10, 19, 22, 28], "words_fil": 19, "work": [0, 3, 4, 6, 10, 15, 19, 22, 24, 25, 26, 28, 29], "workaround": 4, "world": [19, 22, 25, 28, 29], "worth": [3, 31], "would": [0, 4, 10, 14, 19, 22], "wow": 19, "wrap": [4, 26, 28], "wrapper": [12, 22, 28, 31], "wrapup": 0, "write": [3, 10, 12, 14, 16, 19, 22, 25, 26, 28, 29, 31, 32], "write_out_of_scop": 32, "written": [12, 14, 16], "wrong": [0, 16, 21, 22, 25, 29, 31, 32], "wrong_fields_typ": 31, "wrong_output": [21, 25], "wrong_parameter_typ": 31, "wrong_plt_data": [5, 8], "wrong_plt_typ": [5, 8], "wrong_return_typ": 31, "wrote": 20, "x": [12, 19, 20, 27, 28, 31], "xor": [3, 6], "y": [27, 28, 31], "yet": [0, 4, 18, 21], "yield": 29, "you": [0, 1, 3, 4, 6, 7, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "your": [3, 9, 16, 17, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32], "yourself": [22, 24, 25], "z": 27, "zero": 1, "zero_division_error": [5, 10], "zerodivisionerror": 10, "zip_longest": 4}, "titles": ["Developer API", "Compilation", "Internal Naming Conventions", "Developers: Feedback Functions", "Necessary Libraries", "Developer Tools Reference", "Assertions", "CAIT", "Extensions", "Questions", "Sandbox", "Source", "TIFA", "Contact", "Glossary", "Installation", "Introduction", "Welcome to Pedal\u2019s documentation!", "Researchers: Analyzing with Pedal", "Teacher Examples", "Autograder Integrations", "Best Practices", "Teacher Quick Start Guide", "Teacher Reference", "CAIT", "Core Commands", "Feedback Functions", "Formatter", "Runtime Assertions", "Sandbox", "Source", "Static Assertions", "TIFA", "Pedal\u2019s Type System"], "titleterms": {"": [17, 33], "The": 3, "an": 16, "analyz": 18, "api": 0, "architectur": 16, "arithmet": 19, "assert": [6, 22, 28, 31], "ast": 22, "autograd": 20, "basic": 19, "best": 21, "blockpi": 20, "built": 33, "cait": [7, 24], "call": [19, 22, 24], "cat": 20, "check": 22, "command": [0, 22, 25], "compat": 15, "compatibl": 4, "compil": 1, "complex": 19, "concept": [0, 3], "contact": 13, "content": [5, 17, 23], "control": 22, "convent": 2, "core": [0, 22, 25], "creat": 3, "critic": 4, "custom": 22, "data": [7, 11, 24], "defin": 19, "definit": 24, "develop": [0, 3, 5], "differ": 3, "disabl": 3, "document": [17, 21], "environ": [0, 22], "equival": 28, "exampl": [16, 19], "execut": 22, "exist": 3, "extens": 8, "feedback": [0, 3, 21, 22, 26, 30], "find": [22, 24], "formatt": 27, "friendli": 21, "function": [3, 19, 22, 24, 26, 33], "gener": 33, "github": 15, "glossari": 14, "gradescop": 20, "guid": 22, "hint": 33, "import": 0, "indic": 17, "instal": 15, "instructor": 22, "integr": 20, "intern": 2, "introduct": 16, "json": 33, "jupyt": 20, "languag": 21, "larg": 19, "librari": 4, "lifetim": 3, "line": 22, "list": 24, "locat": 0, "match": 24, "medium": 19, "metadata": 3, "method": 3, "micropython": 4, "name": [2, 28], "necessari": 4, "non": 4, "notebook": 20, "novic": 21, "object": 33, "option": 4, "other": 22, "overrid": 3, "parti": 4, "pattern": 22, "pedal": [1, 17, 18, 24, 33], "practic": 21, "project": 19, "pyodid": 1, "pypi": 15, "question": [9, 19], "quick": 22, "refer": [5, 23, 24], "report": [0, 7, 11], "research": 18, "resolv": 22, "result": 22, "runtim": 28, "sandbox": [10, 29], "save": 24, "script": 22, "section": 30, "simpl": 22, "skulpt": [1, 4], "sourc": [11, 30], "standard": 4, "start": 22, "static": 31, "student": [19, 22], "submiss": 0, "subtre": 24, "system": 33, "tabl": 17, "teacher": [19, 22, 23], "test": 22, "third": 4, "tifa": [12, 32], "tool": [0, 5], "type": [24, 33], "unit": 22, "us": 21, "usag": 22, "variabl": 24, "vpl": 20, "wai": 3, "web": 20, "welcom": 17, "why": 3}})