Search.setIndex({"docnames": ["developers/api", "developers/conventions", "developers/ffs", "developers/libraries", "developers/tools", "developers/tools/assertions", "developers/tools/cait", "developers/tools/extensions", "developers/tools/questions", "developers/tools/sandbox", "developers/tools/source", "developers/tools/tifa", "everyone/contact", "everyone/glossary", "everyone/installation", "everyone/introduction", "index", "teachers/analysis", "teachers/examples", "teachers/ffs", "teachers/integrations", "teachers/practices", "teachers/quickstart", "teachers/reference", "teachers/tools/assertions", "teachers/tools/cait", "teachers/tools/core", "teachers/tools/sandbox", "teachers/tools/source", "teachers/tools/tifa", "teachers/tutorial"], "filenames": ["developers/api.rst", "developers/conventions.rst", "developers/ffs.rst", "developers/libraries.rst", "developers/tools.rst", "developers/tools/assertions.rst", "developers/tools/cait.rst", "developers/tools/extensions.rst", "developers/tools/questions.rst", "developers/tools/sandbox.rst", "developers/tools/source.rst", "developers/tools/tifa.rst", "everyone/contact.rst", "everyone/glossary.rst", "everyone/installation.rst", "everyone/introduction.rst", "index.rst", "teachers/analysis.rst", "teachers/examples.rst", "teachers/ffs.rst", "teachers/integrations.rst", "teachers/practices.rst", "teachers/quickstart.rst", "teachers/reference.rst", "teachers/tools/assertions.rst", "teachers/tools/cait.rst", "teachers/tools/core.rst", "teachers/tools/sandbox.rst", "teachers/tools/source.rst", "teachers/tools/tifa.rst", "teachers/tutorial.rst"], "titles": ["Developer API", "Internal Naming Conventions", "Feedback Functions", "Necessary Libraries", "Developer Tools Reference", "Assertions", "CAIT", "Extensions", "Questions", "Sandbox", "Source", "TIFA", "Contact", "Glossary", "Installation", "Introduction", "Welcome to Pedal\u2019s documentation!", "&lt;no title&gt;", "Teacher Examples", "&lt;no title&gt;", "Autograder Integrations", "Best Practices", "Teacher Quick Start Guide", "Teacher Reference", "Assertions", "CAIT", "Core Commands", "Sandbox", "Source", "TIFA", "Teacher Tutorial"], "terms": {"thi": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "complet": [0, 3, 9, 18, 22, 26], "refer": [0, 1, 5, 6, 9, 13, 14, 16, 22, 30], "pedal": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29], "its": [0, 2, 3, 5, 6, 9, 10, 11, 13, 20, 22, 27, 29], "associ": [0, 9, 10, 15], "compon": [0, 11, 15], "If": [0, 2, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18, 20, 21, 22, 25, 27, 28, 30], "you": [0, 3, 5, 6, 8, 9, 11, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "ar": [0, 1, 2, 3, 5, 6, 9, 10, 11, 13, 15, 17, 18, 20, 21, 22, 24, 25, 26, 28, 29, 30], "an": [0, 2, 3, 5, 6, 8, 9, 10, 11, 13, 16, 17, 20, 22, 23, 25, 26, 27, 29, 30], "instructor": [0, 2, 5, 9, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 30], "might": [0, 3, 9, 15, 18, 22, 26, 27, 30], "find": [0, 5, 6, 10, 11, 15, 16, 20, 23], "more": [0, 2, 3, 5, 9, 13, 15, 18, 22, 25, 26, 27, 28, 30], "help": [0, 13, 15, 26], "read": [0, 5, 11, 13, 18, 26, 29, 30], "over": [0, 9, 18, 29, 30], "teacher": [0, 2, 15, 16], "tutori": [0, 25], "too": [0, 3, 9], "function": [0, 3, 5, 6, 7, 9, 11, 13, 15, 16, 19, 23, 24, 26, 27, 28, 29, 30], "ani": [0, 2, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 21, 22, 24, 26, 27, 28, 29, 30], "can": [0, 1, 2, 3, 5, 6, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "attach": [0, 2, 6, 9, 11, 13, 26, 27, 29, 30], "object": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 22, 25, 26, 27, 30], "technic": [0, 6, 13], "should": [0, 1, 2, 3, 9, 10, 13, 14, 15, 16, 18, 20, 22, 23, 25, 26, 28, 29, 30], "clearli": [0, 2, 15], "mark": [0, 22, 30], "respons": [0, 2, 13, 15, 21, 22, 24, 26, 28, 29], "markdown": [0, 13], "also": [0, 2, 3, 5, 9, 10, 13, 14, 15, 16, 20, 21, 22, 25, 26, 27, 30], "provid": [0, 2, 5, 9, 13, 15, 16, 21, 22, 26, 27, 30], "plain": [0, 13], "text": [0, 5, 9, 13, 18, 20, 26], "consol": [0, 9], "friendli": [0, 1, 5, 15, 16], "version": [0, 3, 5, 7, 9, 10, 13, 18, 20, 22, 26], "recommend": [0, 1, 22, 26, 30], "have": [0, 2, 3, 5, 9, 11, 13, 14, 15, 17, 18, 20, 22, 26, 27, 28, 29, 30], "mute": [0, 7, 10, 18, 19, 24, 26, 29], "boolean": [0, 2, 5, 6, 11, 24], "paramet": [0, 5, 6, 7, 8, 9, 10, 11, 18, 20, 22, 26, 29], "allow": [0, 2, 3, 5, 9, 13, 15, 21, 22, 27, 30], "us": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 22, 24, 25, 26, 27, 28, 29], "strictli": 0, "condit": [0, 2, 5, 7, 13, 15, 21, 22, 26, 30], "when": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 17, 20, 21, 22, 26, 28, 29, 30], "still": [0, 3, 30], "contribut": 0, "correct": [0, 7, 18, 19, 22, 26], "consid": [0, 6, 10, 30], "being": [0, 2, 5, 7, 9, 11, 13], "displai": [0, 3, 26, 29], "user": [0, 3, 6, 7, 9, 26], "Its": [0, 22, 30], "score": [0, 5, 7, 15, 18, 19, 20, 22, 26, 30], "ad": [0, 2, 3, 9, 13, 14, 15, 22, 25, 26, 27], "though": [0, 3, 5, 6, 29], "three": [0, 11, 18, 30], "perspect": 0, "grader": [0, 22], "we": [0, 1, 2, 3, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22, 26, 30], "need": [0, 2, 3, 8, 11, 13, 18, 20, 22, 25, 26, 27, 29], "abl": [0, 3, 9, 18, 27, 30], "creat": [0, 2, 3, 5, 9, 10, 13, 15, 18, 20, 21, 22, 27, 28, 30], "deliv": [0, 10, 13, 22, 30], "autograd": [0, 13, 15, 16, 22], "without": [0, 2, 5, 6, 9, 11, 14, 15, 18], "cumbersom": 0, "experiment": [0, 3], "custom": [0, 3, 9, 15, 16, 20, 26], "messag": [0, 3, 5, 7, 9, 13, 15, 18, 19, 20, 22, 26, 30], "wai": [0, 3, 13, 18, 22, 30], "expos": 0, "all": [0, 2, 3, 5, 6, 8, 9, 10, 11, 14, 15, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "featur": [0, 2, 3, 13, 22, 23, 30], "research": [0, 13, 15], "aren": [0, 21, 30], "t": [0, 3, 6, 8, 10, 15, 18, 21, 25, 26, 27, 29, 30], "try": [0, 1, 3, 18, 21, 26, 30], "analyz": [0, 2, 11, 13, 15, 16, 17, 18, 30], "through": [0, 2, 3, 5, 6, 7, 11, 18, 20, 22, 28, 30], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 11, 16, 20, 22, 23, 25, 26], "code": [0, 2, 3, 5, 6, 7, 9, 10, 11, 13, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 30], "want": [0, 3, 5, 6, 9, 12, 17, 18, 20, 22, 25, 26, 30], "gener": [0, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 20, 22, 25, 30], "metadata": [0, 13, 16, 21, 22], "about": [0, 2, 3, 5, 9, 11, 13, 18, 21, 22, 26, 27, 30], "piec": [0, 13, 21, 22, 26], "includ": [0, 5, 6, 11, 13, 20, 22, 26, 27, 30], "regist": [0, 3], "known": 0, "label": [0, 1, 2, 7, 13, 15, 18, 21, 22, 24, 26, 28, 29], "up": [0, 6, 9, 15, 22, 26], "front": 0, "goal": [0, 3, 15, 16, 27, 30], "broadcast": 0, "what": [0, 2, 3, 9, 15, 16, 22, 27, 30], "current": [0, 3, 6, 9, 10, 11, 26, 28, 29, 30], "ideal": [0, 1], "d": [0, 8, 10, 18], "system": [0, 2, 3, 9, 13, 15, 26, 30], "elegantli": 0, "overrid": [0, 3, 5, 9, 26, 28], "": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 20, 22, 25, 26, 29, 30], "word": [0, 5, 9, 18, 22], "standard": [0, 14, 16], "name": [0, 2, 5, 6, 9, 11, 13, 16, 18, 22, 26, 28, 29, 30], "schema": [0, 1], "other": [0, 2, 3, 5, 9, 13, 15, 16, 20, 24, 25, 26, 27, 28, 29, 30], "field": [0, 2, 3, 5, 6, 7, 9, 10, 21, 25, 27], "some": [0, 3, 5, 10, 11, 13, 15, 18, 22, 25, 26, 28, 30], "guidanc": [0, 23, 26], "how": [0, 5, 9, 10, 18, 22, 30], "thei": [0, 2, 3, 5, 9, 13, 15, 18, 22, 26, 27, 29, 30], "author": [0, 7, 13, 18, 23, 30], "In": [0, 5, 9, 18, 22, 25, 30], "attempt": [0, 2, 3, 9, 13, 21, 23, 27, 29], "follow": [0, 2, 3, 5, 7, 11, 18, 20, 22, 25, 26, 29, 30], "python": [0, 1, 2, 3, 9, 10, 11, 13, 14, 15, 18, 20, 22, 30], "variabl": [0, 1, 9, 11, 15, 18, 20, 22, 23, 26, 27, 29, 30], "rule": [0, 5], "lowercas": [0, 1, 5], "underscor": [0, 1, 2, 22, 30], "atom": [0, 2, 13], "one": [0, 3, 6, 8, 9, 11, 13, 15, 18, 21, 22, 25, 26, 28, 29, 30], "ha": [0, 2, 5, 6, 9, 10, 11, 13, 15, 17, 20, 22, 26, 27, 29, 30], "exactli": [0, 5], "possibl": [0, 1, 3, 13, 14, 20, 21, 22, 27, 29, 30], "outcom": [0, 18], "move": [0, 28], "static": [0, 5, 22, 23], "attribut": [0, 3, 9, 11, 22, 25, 30], "template_text": 0, "str": [0, 3, 5, 6, 7, 8, 9, 10, 11, 18, 22, 26, 27, 28], "A": [0, 3, 5, 6, 7, 9, 11, 13, 21, 22, 26, 30], "string": [0, 2, 3, 5, 6, 8, 9, 10, 11, 18, 22, 24, 25, 26, 27, 28, 30], "pass": [0, 2, 5, 9, 11, 22, 25, 26, 27, 28, 29, 30], "keyword": [0, 9, 25], "argument": [0, 3, 5, 9, 22, 25, 26, 27, 29], "message_text": 0, "same": [0, 2, 5, 8, 11, 13, 18, 22, 25, 26, 29, 30], "justif": [0, 7, 24, 26, 28, 29], "titl": [0, 7, 15, 18, 19, 22], "student": [0, 2, 3, 5, 6, 9, 10, 11, 13, 15, 16, 17, 20, 24, 25, 26, 27, 30], "semvar": 0, "e": [0, 2, 3, 5, 6, 9, 10, 13, 20, 22, 25, 26, 29, 30], "g": [0, 2, 3, 5, 6, 9, 10, 20, 22, 25, 26, 29, 30], "0": [0, 5, 8, 11, 18, 20, 22, 25, 26, 28, 30], "1": [0, 3, 5, 11, 15, 18, 22, 26, 28, 30], "pair": [0, 7], "docstr": 0, "changelog": 0, "composit": [0, 2, 13], "multipl": [0, 3, 5, 10, 11, 26, 28, 29, 30], "could": [0, 2, 3, 7, 9, 13, 15, 22, 26, 28, 30], "spell": 0, "them": [0, 1, 3, 5, 9, 18, 22, 26, 27, 28, 29], "out": [0, 3, 6, 9, 11, 15, 18, 22, 26, 29, 30], "tifa": [0, 3, 4, 5, 6, 16, 20, 22, 23, 25, 26], "rel": [0, 22], "central": [0, 13, 15, 16, 22], "finit": 0, "set": [0, 5, 6, 8, 9, 10, 11, 20, 22, 26, 27, 28, 29, 30], "desir": [0, 2, 9, 20, 30], "configur": [0, 10, 13, 20, 26, 29, 30], "reus": [0, 2, 26], "phrase": 0, "mostli": [0, 1, 3, 28], "syntax": [0, 9, 10, 13, 15, 18, 22, 26, 28], "error": [0, 3, 5, 6, 9, 10, 11, 15, 18, 21, 22, 26, 27, 28], "cait": [0, 3, 4, 5, 16, 18, 22, 23], "No": [0, 9, 11, 18, 20, 28], "just": [0, 5, 9, 15, 19, 22, 29, 30], "detector": 0, "assert": [0, 3, 4, 7, 16, 18, 23], "heavili": [0, 22], "procedur": 0, "question": [0, 3, 4, 13, 15, 16, 22], "inherit": [0, 2, 3, 11], "from": [0, 2, 3, 5, 6, 8, 9, 11, 15, 18, 20, 22, 25, 26, 27, 28, 29, 30], "sandbox": [0, 3, 4, 5, 7, 15, 16, 18, 22, 23], "runtim": [0, 5, 9, 13, 15, 21, 22, 23, 26], "extern": [0, 14], "strong": 0, "toolkit": [0, 18, 22], "often": [0, 2, 3, 13, 25, 26], "imper": 0, "style": [0, 5, 13, 18, 22], "construct": [0, 9], "conveni": [0, 3, 13, 22, 26, 28], "global": [0, 2, 8, 9, 10, 13], "main_report": [0, 2, 6, 8, 9, 10], "class": [0, 1, 2, 3, 5, 7, 9, 11, 25, 30], "arg": [0, 5, 7, 9, 18, 25], "none": [0, 2, 5, 6, 7, 8, 9, 10, 11, 18, 24, 25, 26, 27], "categori": [0, 1, 2, 7, 13, 21, 26], "field_nam": [0, 7], "kind": [0, 1, 7, 11, 13, 15, 21, 22, 24, 26, 29], "message_templ": [0, 7], "else_messag": [0, 5, 7, 19], "prioriti": [0, 1, 2, 7, 18, 19, 20, 22, 26, 30], "valenc": [0, 7, 13], "unscor": [0, 7, 18, 19], "tag": [0, 7, 13, 20], "parent": [0, 2, 7], "delay_condit": [0, 7], "fals": [0, 5, 6, 7, 9, 10, 11, 18, 24, 26], "activ": [0, 2, 5, 7, 19], "true": [0, 5, 6, 7, 9, 10, 11, 18, 26, 30], "kwarg": [0, 5, 7, 9], "store": [0, 8, 9, 10, 15, 18, 22, 27, 29], "raw": [0, 3, 15], "intern": [0, 2, 9, 11, 16, 26, 30], "specif": [0, 3, 13, 15, 26, 30], "The": [0, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 21, 22, 25, 26, 27, 28, 29, 30], "separ": [0, 1, 2, 10, 28], "convent": [0, 2, 16], "do": [0, 2, 3, 5, 9, 13, 15, 18, 22, 25, 26, 29, 30], "uniqu": [0, 1, 2, 5, 9, 13], "especi": [0, 1, 13], "within": [0, 1, 2, 5, 6, 9, 13, 22, 23, 27, 29], "type": [0, 3, 5, 6, 7, 9, 10, 11, 13, 15, 18, 21, 22, 23, 26, 27, 29, 30], "indic": [0, 2, 11, 26, 28], "taken": [0, 2], "directli": [0, 2, 9, 18], "itself": [0, 2, 9, 11, 13, 15], "wa": [0, 2, 3, 5, 6, 7, 9, 13, 14, 18, 22, 25, 26, 28, 29], "control": [0, 2, 11, 13, 15, 16, 18, 20], "script": [0, 2, 13, 15, 16, 18, 20, 26], "option": [0, 6, 9, 10, 14, 16, 18, 20, 22, 26, 30], "human": [0, 1, 5], "present": [0, 5, 7, 8, 22], "showabl": 0, "learner": [0, 13, 15, 22, 26, 30], "sort": [0, 5], "fall": 0, "algorithm": [0, 22, 26], "than": [0, 2, 5, 13, 15, 16, 18, 20, 22, 25, 30], "cannot": [0, 3, 11, 18, 29], "pedagog": [0, 13, 15, 26, 30], "role": [0, 13], "misconcept": [0, 13], "mistak": [0, 13, 15, 18, 22], "hint": [0, 13, 21, 22, 26], "constraint": 0, "usual": [0, 3, 9, 29], "point": [0, 5, 9, 25], "variou": [0, 3], "purpos": [0, 30], "face": 0, "briefli": 0, "describ": [0, 23, 30], "why": [0, 3, 5, 16, 26, 27], "select": [0, 8, 15], "serv": [0, 8], "tl": 0, "dr": [0, 12], "debug": [0, 23, 26], "appear": [0, 5, 22], "justification_templ": 0, "format": [0, 9, 18, 30], "templat": 0, "inject": [0, 2, 9], "IF": [0, 18], "met": [0, 5], "high": [0, 1, 22], "medium": [0, 1, 16], "low": [0, 1], "get": [0, 3, 9, 20, 22, 30], "resolv": [0, 3, 13, 15, 16, 18, 26], "typicali": 0, "break": [0, 2, 28, 29], "ti": [0, 20], "whether": [0, 2, 5, 6, 7, 9, 10, 11, 18, 26], "neg": [0, 22], "posit": [0, 5, 9, 21], "neutral": 0, "either": [0, 5, 7, 9, 13, 26, 28, 30], "int": [0, 5, 6, 7, 8, 9, 15, 18, 22, 25, 28], "formal": [0, 29], "instead": [0, 6, 9, 13, 18, 22, 25, 26, 28, 29, 30], "aka": [0, 5], "support": [0, 2, 3, 5, 6, 9, 13, 22, 25, 30], "html": [0, 5, 13, 20, 22, 30], "render": [0, 18], "data": [0, 2, 5, 7, 8, 9, 11, 13, 18, 22, 23, 26, 27, 30], "interpol": 0, "produc": [0, 5, 6, 13, 18, 20, 22, 30], "dict": [0, 5, 6, 7, 9, 10, 18, 27], "inform": [0, 2, 5, 7, 9, 11, 13, 22, 26, 27, 30], "relev": [0, 6, 13, 22], "numer": [0, 11, 26], "modifi": [0, 9, 18, 25, 26, 27], "total": [0, 5, 9, 15, 22], "overal": [0, 5, 26], "perform": [0, 5, 11, 28, 29, 30], "It": [0, 9, 13, 18, 22, 23, 29, 30], "ultim": [0, 22], "decid": [0, 3], "combin": [0, 13], "differ": [0, 3, 5, 6, 7, 13, 15, 18, 22, 29, 30], "typic": [0, 9, 13, 25, 26, 27], "strategi": [0, 5, 26], "would": [0, 3, 9, 13, 18, 22, 30], "add": [0, 6, 9, 13, 22, 27], "togeth": [0, 9, 30], "non": [0, 11, 16, 18, 29], "entir": [0, 3, 26], "success": [0, 6, 10, 11, 20, 26], "task": 0, "now": [0, 18, 22, 26, 30], "finish": [0, 18], "bool": [0, 5, 6, 7, 9, 10, 11, 18, 22, 26], "someth": [0, 1, 22, 25, 26], "shown": [0, 9, 15, 26, 30], "There": [0, 1, 15, 22, 24, 29], "case": [0, 5, 18, 22, 30], "flag": 0, "later": [0, 30], "suppress": [0, 13, 18, 23, 26], "default": [0, 2, 5, 6, 7, 8, 9, 10, 11, 13, 20, 22, 26, 28, 29], "perhap": [0, 9, 26], "interest": [0, 3, 20], "analysi": [0, 2, 6, 11, 15, 16, 22, 29, 30], "give": [0, 2, 5, 15, 16, 18, 22, 26, 30], "correcntess": 0, "NOT": [0, 3, 30], "trigger": [0, 15, 26, 28], "todo": [0, 5, 6, 9, 11, 24, 27, 29], "else_message_templ": 0, "probabl": [0, 22], "mean": [0, 30], "deactiv": 0, "note": [0, 9, 18, 25, 27, 30], "most": [0, 2, 3, 5, 6, 9, 13, 15, 20, 22, 25, 26, 27, 29], "respect": [0, 10, 30], "list": [0, 5, 6, 7, 9, 10, 11, 15, 18, 22, 23, 26, 27, 28, 29, 30], "email": [0, 12], "who": [0, 29], "cori": [0, 12], "bart": [0, 12, 22, 26], "acbart": [0, 12, 18, 20], "udel": [0, 12], "edu": [0, 12, 13, 14, 20], "semant": 0, "last": [0, 9, 15, 25], "third": [0, 16], "digit": 0, "increment": 0, "small": 0, "bug": 0, "fix": [0, 17], "chang": [0, 3, 5, 9, 11, 20, 29, 30], "middl": 0, "second": [0, 26, 29], "seriou": 0, "intens": 0, "first": [0, 2, 5, 6, 9, 10, 11, 15, 20, 22, 26, 28, 30], "made": [0, 5, 7, 9, 22], "exposur": 0, "evid": 0, "base": [0, 2, 6, 9, 13, 20], "motiv": 0, "logic": [0, 2, 9, 13, 22, 30], "group": [0, 2, 9, 30], "belong": 0, "chunk": [0, 2, 10], "section": [0, 2, 10, 23, 29], "keep": [0, 1, 20], "track": [0, 9, 15, 21, 26], "decis": [0, 29], "organ": [0, 3, 13, 18], "unspecifi": 0, "fill": 0, "inspect": [0, 3, 22, 26], "context": [0, 2, 3, 5, 9, 11, 15, 18, 27], "alia": [0, 5], "feedbackcategori": [0, 1, 26], "feedbackkind": [0, 1], "detect": [0, 2, 5, 7, 13, 15, 22, 26, 30], "return": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 18, 22, 24, 25, 27, 29, 30], "update_loc": 0, "updat": [0, 18, 26], "both": [0, 5, 6, 9, 20, 22, 26, 29, 30], "handl": [0, 3, 6, 7, 9, 11, 22, 24, 26, 27], "less": [0, 5], "intellig": 0, "clear_report": [0, 23, 26], "remov": [0, 5, 8, 9, 10, 26, 28], "exist": [0, 5, 6, 7, 9, 10, 11, 13, 15, 22, 26, 28, 29], "clear": [0, 9, 26], "compliment": [0, 5, 15, 18, 22, 23, 26], "potenti": [0, 2, 11, 13], "line": [0, 5, 6, 7, 9, 13, 15, 16, 18, 20, 24, 25, 26, 28, 29, 30], "contextualize_report": [0, 18, 22, 23, 26], "filenam": [0, 9, 10, 11, 26, 28], "answer": [0, 10, 18, 22, 26], "py": [0, 3, 10, 15, 18, 20, 21, 22, 26, 30], "By": [0, 2, 13, 20, 25, 26], "old": [0, 26, 29], "actual": [0, 3, 5, 7, 9, 11, 18, 26, 28, 29], "repres": [0, 2, 6, 11, 26, 30], "given": [0, 2, 5, 6, 7, 9, 10, 11, 13, 18, 22, 26, 27, 28, 29, 30], "befor": [0, 9, 10, 11, 18, 22, 28, 29, 30], "item": [0, 18, 25, 30], "log": [0, 23, 26], "work": [0, 3, 5, 9, 14, 18, 22, 25, 26, 30], "higher": [0, 29], "doe": [0, 3, 5, 9, 22, 23], "convert": [0, 18], "match": [0, 5, 6, 7, 15, 22, 23, 29, 30], "valu": [0, 3, 5, 8, 9, 11, 13, 18, 22, 24, 26, 27, 29, 30], "Will": [0, 9], "alreadi": [0, 9, 22, 29], "explain": [0, 5, 15, 18, 22, 23, 26], "like": [0, 1, 2, 3, 5, 6, 9, 11, 15, 20, 22, 26, 27, 29, 30], "gentli": [0, 18, 21, 22, 23, 25, 26, 30], "show": [0, 2, 7, 18, 20, 22, 30], "get_all_feedback": [0, 23, 26], "access": [0, 9, 11, 20, 22, 25, 27, 30], "won": [0, 18], "build": [0, 2, 3, 13], "result": [0, 2, 3, 9, 11, 13, 15, 16, 18, 20, 27, 30], "earlier": [0, 18, 20], "mechan": [0, 30], "search": [0, 3, 5, 6, 16, 25, 30], "get_submiss": 0, "give_parti": [0, 18, 23, 26], "increas": [0, 9, 26], "instruct": [0, 16, 18, 26], "hide_correct": [0, 23, 26], "forc": [0, 5], "hide": [0, 20], "sep": 0, "set_success": [0, 18, 23, 26], "assign": [0, 2, 6, 9, 11, 13, 18, 20, 22, 27], "done": [0, 22], "member": [0, 2], "feedback_categori": [0, 26], "kei": [0, 3, 9, 18], "system_error": 0, "call": [0, 2, 3, 4, 5, 6, 7, 9, 11, 15, 16, 23, 27, 28, 29, 30], "gone": 0, "wrong": [0, 15, 21, 22, 26, 27, 29], "level": [0, 6, 9, 18, 25, 29], "doesn": [0, 3, 6, 30], "happen": [0, 2, 9, 22], "sometim": [0, 9, 11, 22, 27], "cascad": 0, "polit": 0, "suggest": [0, 28], "correctli": [0, 6, 7, 22, 26], "These": [0, 1, 3, 13, 22, 30], "file": [0, 3, 9, 10, 11, 15, 18, 20, 26, 27, 28, 30], "hold": [0, 11, 27], "make": [0, 5, 6, 15, 16, 18, 20, 22, 28, 29, 30], "seem": [0, 3], "veri": [0, 2, 26], "reli": [0, 9, 30], "meant": [0, 13, 22, 26], "singleton": [0, 13], "so": [0, 2, 3, 5, 6, 8, 9, 17, 18, 22, 25, 26, 27, 28, 30], "own": [0, 2, 3, 6, 11, 22, 27], "Of": 0, "cours": [0, 13, 16, 18], "expect": [0, 2, 5, 7, 13, 18, 20, 22, 27, 28, 29, 30], "onli": [0, 2, 3, 5, 9, 13, 15, 16, 18, 20, 22, 25, 28, 29, 30], "averag": 0, "never": [0, 22, 29], "know": [0, 9, 18], "along": [0, 13, 18, 20], "auxiliari": 0, "contextu": [0, 10, 26, 28], "far": [0, 5, 18, 26], "been": [0, 5, 9, 10, 11, 13, 20, 22, 29], "tupl": [0, 5, 11, 30], "hidden": 0, "part": [0, 5, 10, 16, 26, 28], "final": [0, 5, 15, 22, 26, 30], "etc": [0, 11, 22, 28], "automat": [0, 2, 9, 15, 20, 22], "receiv": 0, "exampl": [0, 1, 5, 11, 16, 20, 22, 25, 27, 30], "order": [0, 2, 3, 5, 10, 18, 26, 30], "unit_test": [0, 4, 5, 18, 22], "group_nam": 0, "printabl": 0, "whatev": [0, 5, 9, 13, 25, 27], "go": [0, 9, 18, 22, 30], "hook": 0, "dictionari": [0, 6, 9, 11, 27], "map": [0, 6, 9, 11, 18, 22, 30], "event": 0, "callabl": [0, 7, 9], "execut": [0, 5, 9, 11, 15, 16, 20, 27, 30], "anoth": [0, 2, 6, 13, 18, 29, 30], "For": [0, 5, 6, 11, 15, 18, 22, 25, 26, 27, 30], "resolut": [0, 3], "advanc": [0, 22, 28], "next": [0, 9, 10, 22, 28], "_tool_data": 0, "namespac": [0, 9, 10, 11, 13, 27, 30], "previous": [0, 6, 9, 10, 29], "check": [0, 3, 5, 6, 7, 9, 10, 13, 15, 16, 18, 20, 25, 28, 29, 30], "finalfeedback": 0, "distinct": [0, 1, 13], "yet": [0, 3, 21], "toolregistr": 0, "avail": [0, 2, 3, 9, 11, 20, 23, 26, 28, 30], "via": [0, 3, 9, 14, 15, 22, 26], "classmethod": 0, "add_class_hook": 0, "similar": [0, 9, 26], "add_hook": 0, "except": [0, 3, 6, 8, 9, 18, 25, 26, 30], "subclass": [0, 2, 3, 11], "add_feedback": 0, "extra": [0, 22, 27], "further": [0, 30], "nuanc": 0, "idea": [0, 2, 3, 18, 22], "modul": [0, 3, 4, 5, 6, 7, 9, 14, 16, 18, 22, 27, 29], "accept": [0, 6], "add_ignored_feedback": 0, "ignor": [0, 5, 10, 28], "That": 0, "sinc": [0, 3, 5, 9, 13, 15, 21, 22, 26], "did": [0, 18, 26, 29], "appli": [0, 5, 6, 30], "reach": [0, 26], "reset": [0, 4, 5, 6, 8, 9, 10, 11, 26], "back": [0, 10, 13, 15, 18, 28], "start": [0, 5, 9, 16, 18], "form": [0, 13, 29], "delet": [0, 6, 11], "howev": [0, 11, 14, 18, 20, 22, 25, 26, 27, 29, 30], "affect": 0, "execute_hook": 0, "event_nam": 0, "keyword_argu": 0, "period": 0, "callback": 0, "funciton": 0, "full_clear": 0, "regular": [0, 6, 10, 18, 22, 28, 30], "register_tool": 0, "tool_nam": 0, "reset_funct": 0, "identifi": [0, 1, 11, 13, 22, 29], "param": [0, 6, 10], "set_formatt": 0, "formatt": 0, "new": [0, 9, 10, 11, 18, 20, 28, 29], "stop_group": 0, "prematur": 0, "end": [0, 9, 10, 18, 22], "wrapup": 0, "against": [0, 5, 6], "simpl": [0, 1, 11, 16, 18, 20, 26, 30], "col": 0, "end_lin": 0, "end_col": 0, "column": 0, "miss": [0, 3, 5], "region": [0, 22], "requir": [0, 3, 5, 13, 18, 20, 30], "main": [0, 2, 9, 10, 11, 13, 28], "from_ast": 0, "node": [0, 5, 6, 10, 11, 22, 25, 29, 30], "ast": [0, 3, 5, 6, 10, 11, 16, 18, 25, 28], "built": [0, 3, 7, 9, 16, 18, 25, 27, 30], "caitnod": [0, 5, 6, 9, 25, 30], "to_json": 0, "json": [0, 2, 20], "compositefeedbackfunct": 0, "decor": [0, 13], "enumer": 0, "presenc": [0, 13], "notic": [0, 18, 22, 30], "which": [0, 2, 3, 9, 11, 15, 18, 20, 22, 26, 27, 30], "under": [0, 20, 27, 30], "One": [0, 9, 29, 30], "prevent": [0, 5, 9, 22, 30], "special": [0, 1, 7, 11, 20, 26, 30], "recogn": [0, 9], "off": [0, 2, 6, 9, 18], "fashion": 0, "dure": [0, 9, 11, 28], "invalid": [0, 11], "oper": [0, 2, 5, 6, 7, 11, 18, 22, 25, 29, 30], "becaus": [0, 3, 5, 9, 11, 13, 30], "fail": [0, 3, 9, 15, 22, 24, 30], "meet": [0, 6], "specifi": [0, 5, 6, 15, 26], "behavior": [0, 2, 9, 30], "test": [0, 2, 5, 9, 15, 16, 18, 24, 27, 30], "stylist": 0, "otherwis": [0, 3, 5, 6, 7, 9, 10, 13, 26, 28], "undesir": 0, "grammat": 0, "typograph": 0, "pars": [0, 3, 6, 9, 10, 22, 28, 30], "caus": [0, 9, 11, 22, 30], "grade": [0, 13, 15, 18, 20, 22, 26], "infrastructur": 0, "surround": 0, "unknown": 0, "uncategor": 0, "vari": 0, "between": [0, 2, 5, 7], "instanc": [0, 2, 5, 9], "tend": [0, 26], "descript": [0, 5, 6, 10, 22], "believ": [0, 3, 15, 20], "mind": 0, "materi": 0, "must": [0, 5, 6, 18, 24, 29], "initi": [0, 5, 6, 8, 9, 10, 15, 20, 22, 29], "nameerror": [0, 9], "5": [0, 5, 15, 18, 22, 26], "sum": [0, 5, 15, 18, 22], "defin": [0, 3, 5, 9, 15, 16, 25, 27, 29, 30], "2": [0, 15, 18, 22, 28, 30], "violat": 0, "loop": [0, 15, 17, 22, 25, 26, 29, 30], "recurs": [0, 9, 17, 25, 29], "metacognit": 0, "regul": 0, "hour": 0, "time": [0, 3, 5, 9, 13, 18, 22, 29, 30], "take": [0, 13, 18, 22, 26, 30], "feedbackrespons": 0, "extens": [0, 4, 16, 20, 22], "behind": [0, 9], "collect": [0, 5, 9, 16, 22, 30], "setup": [0, 3, 8, 13, 18, 20, 22], "adapt": 0, "better": [0, 27], "platform": [0, 8, 15, 20, 22], "blockpi": [0, 3, 9, 13, 15, 16, 22], "webcat": [0, 13], "gradescop": [0, 13, 16], "streamlin": 0, "common": [0, 11, 13, 15, 18, 22, 27, 30], "main_fil": 0, "main_cod": 0, "instructor_fil": 0, "abstract": 0, "simplifi": 0, "anyth": [0, 27], "content": [0, 10, 18], "represent": [0, 6, 11], "almost": [0, 3, 5, 14, 26, 30], "certainli": 0, "contain": [0, 3, 5, 9, 10, 11, 13, 18, 25], "mai": [0, 3, 11, 13, 15, 18, 24, 25], "normal": [0, 5, 22, 25], "evalu": [0, 2, 4, 5, 6, 9, 11, 20, 26, 27], "stdin": [0, 3], "get_program": [0, 4, 10, 18, 23, 28], "get_evalu": 0, "instructor_test": 0, "load_error": 0, "singl": [0, 3, 5, 6, 7, 9, 10, 11, 13, 20, 22, 28, 30], "emul": [0, 3, 9, 22], "entri": [0, 9], "run": [0, 3, 4, 5, 6, 9, 11, 13, 15, 17, 18, 20, 22, 23, 25, 27, 29, 30], "addit": [0, 2, 9, 13, 15, 18, 20, 22, 25, 26, 30], "get_files_lin": 0, "retriev": [0, 5, 6, 7, 9, 10, 26, 28, 30], "get_lin": 0, "replace_main": 0, "substitut": [0, 10], "set_line_offset": 0, "lineno": [0, 28], "offset": 0, "effect": [0, 9, 13, 22], "submodul": [0, 13], "notabl": 0, "util": [0, 3, 18], "state": [0, 6, 9, 11, 13, 25, 26, 30], "although": [0, 3, 13, 14, 22], "avoid": [0, 3, 13, 21, 26, 27], "put": [0, 18, 22], "thing": [0, 2, 3, 11, 17, 22, 27], "null": 0, "followup": 0, "constant": [0, 1, 11], "interact": 0, "assum": [0, 9], "my": 0, "__init__": 0, "__all__": 0, "consist": [0, 3, 29], "instantli": 0, "gain": 0, "big": [0, 3], "full": [0, 3, 26], "prototyp": 0, "subsubmodul": 0, "much": [0, 6, 18, 21, 26, 27, 29], "complex": [0, 2, 11, 15, 16, 22, 26], "soon": 0, "emerg": 0, "theme": 0, "promot": 0, "wide": [0, 15], "re": [0, 3, 18, 22, 25], "valid": [1, 9], "treat": [1, 2, 9, 27], "basic": [1, 16, 22, 26], "crazi": 1, "long": [1, 5, 8, 9, 15, 18], "see": [1, 5, 15, 20, 22, 25], "tool": [1, 2, 6, 7, 8, 10, 13, 15, 16, 22, 23, 26, 29], "whenev": 1, "restrict": [1, 3, 9], "short": [1, 9], "import": [2, 3, 5, 7, 9, 11, 15, 16, 17, 18, 20, 22, 25, 26, 27, 28, 29, 30], "unit": [2, 5, 15, 16, 18, 30], "document": [2, 3, 5, 13, 18, 20, 22, 23, 30], "walk": [2, 18], "autom": 2, "our": [2, 3, 12, 15, 16, 18, 20, 21, 22], "becam": 2, "pile": 2, "statement": [2, 5, 6, 9, 11, 15, 18, 22, 29], "delic": 2, "reorder": 2, "chain": [2, 11], "larg": [2, 16, 20, 22], "were": [2, 3, 5, 6, 9, 24, 27, 28, 29], "problem": [2, 3, 8, 15, 18, 26, 29], "had": [2, 18, 29], "hoc": 2, "suffer": 2, "led": 2, "develop": [2, 12, 16, 20, 23], "encapsul": [2, 15], "issu": [2, 11, 13, 15, 20, 22, 27, 28, 29, 30], "relat": [2, 3, 5, 7], "discret": 2, "mathemat": 2, "sens": 2, "elev": [2, 16], "approach": 2, "process": [2, 11, 15], "declar": [2, 15, 22, 29], "driven": 2, "manner": 2, "sacrif": 2, "power": [2, 16, 26, 29], "flexibl": [2, 5], "Not": [2, 18, 24, 26, 28, 29], "reusabl": 2, "easier": [2, 15, 25], "detail": [2, 15, 22, 30], "structur": [2, 6, 7], "interfac": [2, 13, 20, 26], "descend": [2, 3], "huge": 2, "number": [2, 3, 5, 7, 9, 11, 13, 15, 18, 25, 28, 29], "mani": [2, 5, 9, 15, 22, 25, 30], "encourag": [2, 22], "hierarchi": 2, "Then": [2, 22], "write": [2, 11, 13, 15, 18, 22, 26, 29], "report": [2, 5, 7, 8, 9, 11, 13, 15, 16, 22, 26, 27, 28, 29, 30], "fundament": 2, "ff": 2, "compos": [2, 22, 30], "truthi": 2, "aggreg": 2, "particularli": [2, 9, 11, 21], "independ": [2, 10], "phase": [2, 15, 18], "bitwis": 2, "exclus": 2, "xor": [2, 5], "caret": 2, "turn": [2, 9, 22], "serial": 2, "deseri": 2, "undefin": [2, 30], "everi": [2, 3, 11, 30], "semi": 2, "identif": 2, "risk": 2, "equival": [2, 5, 25, 30], "underli": 2, "interpolat": 2, "lower": [2, 18, 22, 26], "major": [3, 15, 24, 30], "design": [3, 14, 16], "limit": [3, 8, 22], "unfortun": 3, "depend": [3, 5, 14, 25, 30], "sound": [3, 26], "cpython": 3, "page": [3, 12, 16, 21, 30], "where": [3, 9, 18, 26, 29, 30], "talk": [3, 22], "workaround": 3, "sy": [3, 9, 17, 18], "monkei": 3, "patch": [3, 9, 30], "mad": 3, "exc_info": 3, "stuff": [3, 18], "settrac": 3, "gettrac": 3, "trace": [3, 5, 9, 25], "stdout": 3, "rerout": 3, "version_info": 3, "o": [3, 18], "path": [3, 11, 18, 29], "few": [3, 13, 14, 22], "dataclass": [3, 5], "_field": 3, "catch": 3, "functool": 3, "wrap": 3, "clariti": 3, "think": [3, 5], "mod": 3, "compil": [3, 9], "split": [3, 5, 9, 18], "multilin": [3, 6], "sub": [3, 6], "oh": 3, "nodevisitor": 3, "iter_field": 3, "methodtyp": 3, "dynam": [3, 30], "method": [3, 5, 6, 11, 18], "wonder": 3, "moduletyp": 3, "io": [3, 5], "stringio": 3, "mock": [3, 7, 9, 18, 27], "captur": [3, 6, 15, 30], "unittest": [3, 5, 18], "sophist": [3, 15, 27, 30], "tracer": 3, "traceback": [3, 9, 15, 22], "tracebackexcept": 3, "extract_tb": 3, "info": [3, 10, 22], "reshap": 3, "timeout": [3, 9], "calcul": [3, 11, 18], "math": [3, 22], "truncat": 3, "properli": 3, "itertool": 3, "zip_longest": 3, "thread": [3, 9, 27], "_activ": 3, "ctype": 3, "pythonapi": 3, "c_long": 3, "py_object": 3, "insid": [3, 15, 22, 29], "stolen": 3, "bdb": 3, "bdbquit": 3, "hashlib": 3, "md5": 3, "translat": 3, "replic": 3, "seed": [3, 8], "random": [3, 18], "pool": [3, 8], "comparison": [3, 5, 6, 7], "punctuat": [3, 5], "hardcod": 3, "somehow": 3, "environ": [3, 9, 13, 14, 15, 16, 18, 20, 26, 27, 30], "jupyt": [3, 16, 17], "absolut": 3, "nbformat": 3, "command_lin": 3, "stderr": 3, "argv": [3, 9], "sqlite3": 3, "pickl": 3, "u": [3, 12, 15], "don": [3, 18, 30], "coverag": [3, 5, 9, 18], "fancier": 3, "tabul": 3, "tqdm": 3, "here": [3, 5, 15, 18, 20, 22], "figur": 3, "compat": [3, 14, 15], "popular": 3, "altern": [3, 9, 15], "fork": 3, "everyth": [3, 25], "couldn": 3, "suffici": 3, "port": 3, "trunc": 3, "investig": 3, "matter": 3, "But": [3, 9, 18, 22, 29, 30], "implement": 3, "slightli": [3, 5], "deal": 3, "breaker": 3, "m": [3, 20], "pretti": [3, 9], "sure": [3, 5, 9, 18, 20, 22, 28, 29, 30], "_thread": 3, "until": [3, 9, 29], "suspect": 3, "around": [3, 11, 30], "realli": [3, 13, 20], "unless": [3, 5, 6, 9, 11, 27], "well": [3, 13, 22], "factor": 3, "right": [3, 5, 8, 9, 15, 18, 24, 28, 29], "difficult": 3, "pain": 3, "rewrit": [3, 11], "f": 3, "r": 3, "convers": 3, "mro": 3, "compliant": 3, "super": [3, 18], "incredibli": 3, "concaten": [3, 9], "adjac": 3, "liter": [3, 5, 9, 11, 18, 22, 24, 30], "brace": 3, "express": [3, 6, 9, 10, 11, 18, 22, 25, 28, 29, 30], "unbalanc": 3, "nest": 3, "bracket": 3, "load": [3, 9, 10, 15, 22, 28], "am": [3, 18], "unclear": 3, "getter": 3, "properti": [3, 9], "unexpect": 3, "count": [3, 5, 9, 28, 30], "manag": [3, 9], "__exit__": 3, "builtin": [3, 9, 27], "subscr": 3, "subscript": [3, 11], "step": [3, 13], "get_original_program": [4, 10], "restore_cod": [4, 10, 23, 28], "set_sourc": [4, 10, 23, 28, 30], "set_source_fil": [4, 10], "verifi": [4, 5, 7, 10, 15, 22, 23, 28], "verify_sect": [4, 10], "tifa_analysi": [4, 11, 15, 23, 25, 29, 30], "find_function_cal": [4, 6], "find_function_definit": [4, 6], "find_oper": [4, 6], "find_prior_initi": [4, 6], "function_is_cal": [4, 6], "is_top_level": [4, 6], "caitexcept": [4, 6], "data_st": [4, 6, 25], "data_typ": [4, 6, 25], "def_use_error": [4, 6], "expire_cait_cach": [4, 6], "find_ast": [4, 6, 15], "find_expr_sub_match": [4, 6], "find_match": [4, 5, 6, 15, 18, 22, 25, 30], "find_submatch": [4, 6], "parse_program": [4, 6, 18, 30], "reparse_if_need": [4, 6], "require_tifa": [4, 6], "plot": [4, 7, 9], "turtl": [4, 7, 9], "attribute_error": [4, 9], "import_error": [4, 9], "indentation_error": [4, 9], "index_error": [4, 9], "io_error": [4, 9], "key_error": [4, 9], "memory_error": [4, 9], "name_error": [4, 9], "runtime_error": [4, 9], "timeout_error": [4, 9], "type_error": [4, 9], "value_error": [4, 9], "zero_division_error": [4, 9], "commandblock": [4, 9], "allow_funct": [4, 9], "allow_modul": [4, 9], "block_funct": [4, 9], "block_modul": [4, 9], "check_coverag": [4, 9], "clear_input": [4, 9], "clear_mock": [4, 9], "clear_output": [4, 9], "clear_sandbox": [4, 9], "clear_student_data": [4, 9], "count_unique_cal": [4, 9], "get_call_argu": [4, 9], "get_except": [4, 9], "get_input": [4, 9], "get_modul": [4, 9], "get_output": [4, 9, 18], "get_sandbox": [4, 9], "get_student_data": [4, 9], "get_trac": [4, 9], "mock_funct": [4, 9], "mock_modul": [4, 9], "queue_input": [4, 9], "reset_output": [4, 9], "set_input": [4, 9, 23, 27], "start_trac": [4, 9], "stop_trac": [4, 9], "ensure_ast": [4, 5, 18, 22], "ensure_dataclass": [4, 5], "ensure_documented_funct": [4, 5, 18, 22], "ensure_funct": [4, 5, 15, 18, 22], "ensure_function_cal": [4, 5, 18, 22], "ensure_import": [4, 5, 18, 22], "ensure_liter": [4, 5, 18, 22, 24], "ensure_literal_typ": [4, 5, 22], "ensure_oper": [4, 5, 18, 22], "ensure_prints_exactli": [4, 5], "ensure_starting_cod": [4, 5], "function_print": [4, 5], "has_import": [4, 5], "prevent_ast": [4, 5, 18, 22], "prevent_embedded_answ": [4, 5], "prevent_function_cal": [4, 5, 18, 22], "prevent_import": [4, 5, 18, 22], "prevent_liter": [4, 5, 18, 22, 24], "prevent_literal_typ": [4, 5, 22], "prevent_oper": [4, 5, 22], "assertalmostequ": [4, 5], "assertequ": [4, 5, 15, 18], "assertfals": [4, 5], "assertgreat": [4, 5, 18], "assertgreaterequ": [4, 5, 18], "asserthasattr": [4, 5], "asserthasfunct": [4, 5, 18], "asserthasvari": [4, 5], "assertin": [4, 5, 18], "asserti": [4, 5], "assertisinst": [4, 5, 18], "assertisnon": [4, 5], "assertisnot": [4, 5], "assertisnotinst": [4, 5], "assertisnotnon": [4, 5], "assertlengthequ": [4, 5], "assertlengthgreat": [4, 5], "assertlengthgreaterequ": [4, 5], "assertlengthless": [4, 5], "assertlengthlessequ": [4, 5], "assertlengthnotequ": [4, 5], "assertless": [4, 5], "assertlessequ": [4, 5], "assertnotalmostequ": [4, 5], "assertnotequ": [4, 5], "assertnotin": [4, 5], "assertnotoutput": [4, 5], "assertnotoutputcontain": [4, 5], "assertnotregex": [4, 5], "assertnottyp": [4, 5], "assertoutput": [4, 5], "assertoutputcontain": [4, 5], "assertprint": [4, 5], "assertregex": [4, 5], "asserttru": [4, 5], "asserttyp": [4, 5], "assert_almost_equ": [4, 5], "assert_contains_subset": [4, 5], "assert_equ": [4, 5, 15, 22, 24], "assert_fals": [4, 5], "assert_great": [4, 5], "assert_greater_equ": [4, 5], "assert_has_attr": [4, 5], "assert_has_funct": [4, 5], "assert_has_vari": [4, 5], "assert_in": [4, 5], "assert_i": [4, 5], "assert_is_dataclass": [4, 5], "assert_is_inst": [4, 5], "assert_is_non": [4, 5], "assert_is_not": [4, 5], "assert_is_not_dataclass": [4, 5], "assert_is_not_non": [4, 5], "assert_length_equ": [4, 5], "assert_length_great": [4, 5], "assert_length_greater_equ": [4, 5], "assert_length_less": [4, 5], "assert_length_less_equ": [4, 5], "assert_length_not_equ": [4, 5], "assert_less": [4, 5], "assert_less_equ": [4, 5], "assert_not_almost_equ": [4, 5], "assert_not_contains_subset": [4, 5], "assert_not_equ": [4, 5], "assert_not_in": [4, 5], "assert_not_is_inst": [4, 5], "assert_not_output": [4, 5], "assert_not_output_contain": [4, 5], "assert_not_regex": [4, 5], "assert_not_typ": [4, 5], "assert_output": [4, 5, 18, 22], "assert_output_contain": [4, 5], "assert_print": [4, 5], "assert_regex": [4, 5], "assert_tru": [4, 5], "assert_typ": [4, 5], "ensure_called_uniqu": [4, 5], "ensure_coverag": [4, 5, 18], "check_dataclass_error": [4, 5], "wheat_chaff_game_class": [4, 5], "set_se": [4, 8], "badgraphfeedback": [4, 7], "assert_plot": [4, 7], "compare_data": [4, 7], "ensure_correct_plot": [4, 7], "ensure_show": [4, 7], "get_plot": [4, 7], "no_plt": [4, 7], "other_plt": [4, 7], "plt_rename_err": [4, 7], "plt_wrong_import": [4, 7], "prevent_incorrect_plt": [4, 7], "wrong_plt_data": [4, 7], "wrong_plt_typ": [4, 7], "classic": 5, "core": [5, 6, 7, 8, 9, 10, 11, 16, 23], "feedback": [5, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 23, 24, 26, 29, 30], "at_least": [5, 18, 22], "root": [5, 6, 10, 25], "determin": [5, 6, 7, 13, 18], "anywher": [5, 18, 20], "green": 5, "tree": [5, 6, 30], "snake": 5, "http": [5, 13, 14, 20], "greentreesnak": [5, 30], "readthedoc": 5, "en": 5, "latest": [5, 9, 10, 20, 28], "minimum": [5, 22], "find_al": [5, 30], "occurr": [5, 6, 26], "ensur": [5, 22, 27], "definit": [5, 6, 18, 23, 29, 30], "travers": [5, 6, 11], "ariti": [5, 15, 18, 22, 29], "signatur": [5, 18], "OR": 5, "AND": [5, 30], "record": [5, 9, 11, 18], "at_most": [5, 18, 22], "maximum": [5, 20], "literal_typ": 5, "op_nam": [5, 6, 29], "somewher": 5, "binari": [5, 6], "unari": [5, 6], "deprec": [5, 6], "print": [5, 6, 9, 18, 22, 25, 26], "certain": [5, 22, 25, 30], "function_nam": [5, 7, 9], "ever": 5, "practic": [5, 16, 18, 30], "cait_nod": [5, 6], "assert_has_class": 5, "assertgraphtyp": 5, "assertgraphvalu": 5, "assert_coverag": 5, "assert_ran": 5, "left": [5, 8, 10, 24], "exact_str": 5, "delta": 5, "001": 5, "two": [5, 7, 13, 18, 22, 24, 26, 29, 30], "equal": [5, 18, 22, 24, 29], "needl": 5, "haystack": 5, "each": [5, 8, 9, 13, 22, 25, 30], "charact": [5, 28], "trail": 5, "decim": 5, "chop": 5, "flatten": 5, "float": [5, 9, 18, 24, 26], "compar": [5, 9, 18], "close": [5, 18, 26, 30], "greater": 5, "obj": 5, "attr": 5, "regex": 5, "format_assert": 5, "textual": [5, 22], "explan": [5, 24, 30], "target": [5, 9, 11, 18, 27, 29, 30], "expected_verb": 5, "side": [5, 13, 22, 29], "while": [5, 10, 11, 22, 28], "inverse_oper": 5, "interpolatedvalu": 5, "sandboxcontext": [5, 9], "variable_nam": 5, "ident": 5, "cl": 5, "sequenc": [5, 29], "length": [5, 28], "output": [5, 9, 13, 18, 20, 21, 22, 25, 26, 27], "simpli": [5, 9], "invers": 5, "expected_typ": 5, "newlin": [5, 9], "oppos": [5, 9, 25], "raw_output": [5, 9], "individu": [5, 22, 26], "space": 5, "empti": [5, 11, 18, 29], "fairli": 5, "found": [5, 6, 7, 10, 18, 22, 28, 29], "unlik": [5, 30], "look": [5, 6, 15, 18, 20, 22, 25, 26, 29, 30], "rememb": [5, 18, 28], "across": [5, 8], "those": [5, 13, 30], "why_ignor": 5, "recent": [5, 6, 9, 15], "repeatedli": 5, "seen": 5, "overlap": [5, 30], "unique_call_count": 5, "ratio": [5, 9], "cover": [5, 18], "half": 5, "unifi": 5, "command": [5, 9, 13, 16, 18, 20, 23, 25, 27], "partial_credit": 5, "assert_funct": 5, "helper": [5, 6, 18, 30], "quickli": [5, 14], "exact": [5, 30], "partial": [5, 15, 22, 26], "credit": [5, 15, 22, 26], "divid": [5, 10, 22], "per": 5, "percentag": 5, "whole": [5, 18], "wheat": 5, "chaff": 5, "failur": [5, 18], "packag": [6, 25], "pattern": [6, 10, 16, 25, 28, 30], "subtre": [6, 22, 23, 30], "revert": 6, "incorpor": [6, 26], "prior": [6, 25], "ast_nod": [6, 25], "top": [6, 9, 11, 18, 29], "program": [6, 9, 11, 15, 16, 29], "even": [6, 26, 27, 29], "cach": 6, "astnod": 6, "node_nam": 6, "student_cod": [6, 22, 30], "functiondef": 6, "node_typ": 6, "self": [6, 15], "criteria": 6, "is_mod": 6, "meta": [6, 13, 26, 27], "knowledg": 6, "child": [6, 25], "hack": 6, "cut": 6, "use_previ": 6, "inclus": [6, 30], "caitexpress": 6, "trim": 6, "branch": [6, 29], "astmap": 6, "continu": 6, "noth": [6, 9], "ast_map": [6, 30], "incomplet": 6, "enhanc": [6, 9, 22], "submiss": [6, 9, 10, 11, 13, 15, 16, 20, 22, 26, 28, 29], "confirm": [6, 7, 18, 24], "successfulli": [6, 7, 10], "rais": [6, 9, 20], "matplotlib": [7, 9], "plt_type": 7, "hist": 7, "scatter": 7, "special_comparion": 7, "histogram": 7, "locat": [7, 9, 16, 18, 24, 29], "plt": 7, "pyplot": [7, 9], "librari": [7, 14, 15, 16, 20], "seed_valu": 8, "iter": [8, 15, 18, 29], "determinist": 8, "index": [8, 16, 18, 28, 29], "correspond": [8, 9, 13], "throw": 8, "isn": [8, 10], "enough": [8, 28], "hash": 8, "modulo": 8, "rang": [8, 15], "256": 8, "your": [8, 15, 16, 18, 22, 26, 27, 28, 29, 30], "destroi": 9, "occur": [9, 11, 30], "mutabl": [9, 11], "rstrip": [9, 18], "input": [9, 18, 26, 27], "allowed_tim": 9, "stop": [9, 11], "tracer_styl": 9, "_context": 9, "histori": [9, 10, 30], "_next_context_id": 9, "id": [9, 11, 22], "_current_patch": 9, "stack": [9, 11], "maximum_temporary_length": 9, "temporari": 9, "module_nam": 9, "append_output": 9, "append": [9, 18, 29, 30], "To": 9, "comput": 9, "friendly_nam": 9, "unload": 9, "_": [9, 20, 27], "function_kwarg": 9, "args_loc": 9, "kwargs_loc": 9, "local": 9, "arbitrari": [9, 15, 27], "modif": 9, "conflict": [9, 30], "proxi": [9, 22, 27], "sandboxresult": 9, "perfectli": [9, 22, 27], "clear_context": 9, "previou": [9, 10, 11, 13, 25, 29, 30], "clear_except": 9, "queu": 9, "clear_trac": 9, "clean": 9, "get_context": 9, "context_id": 9, "sandbox_mixin": 9, "get_names_by_typ": 9, "exclude_builtin": 9, "get_values_by_typ": 9, "get_variables_by_typ": 9, "make_safe_vari": 9, "tri": [9, 10, 14, 15, 18, 20, 28], "safe": [9, 22, 30], "accomplish": 9, "concern": 9, "new_vers": 9, "reset_default_overrid": 9, "block": [9, 18, 20, 29], "eval": 9, "exec": [9, 27, 30], "open": [9, 13, 18, 26, 28], "after": [9, 18, 22, 28, 29, 30], "executioncontext": 9, "queue": 9, "set_student_data": 9, "new_data": 9, "overwrit": [9, 30], "copi": 9, "start_grouping_context": 9, "subsequ": [9, 22, 28], "stop_grouping_context": 9, "var": [9, 25], "attributeerror": 9, "importerror": 9, "indentationerror": 9, "indexerror": 9, "ioerror": [9, 28], "keyerror": 9, "memoryerror": 9, "origin": [9, 10], "exception_nam": 9, "exception_messag": 9, "expandedtraceback": 9, "traceback_messag": [9, 28], "nice": 9, "element": [9, 11], "longer": [9, 28], "timeouterror": 9, "valueerror": 9, "zerodivisionerror": 9, "act": 9, "themselv": 9, "rewind": 9, "explicitli": [9, 22, 26, 27], "draw": 9, "unexecut": 9, "unexect": 9, "outer": 9, "inner": [9, 30], "began": 9, "mockmodul": 9, "fulli": [9, 11], "nativ": 9, "subsitut": 10, "temporarili": [10, 26], "replac": [10, 18], "accumul": [10, 22], "filesystem": 10, "directori": 10, "source_file_not_found": [10, 28], "inferenc": [11, 30], "flow": [11, 30], "simplif": 11, "languag": [11, 15, 16, 30], "homogen": 11, "introspect": 11, "reflect": [11, 13], "characterist": 11, "dunder": 11, "closur": 11, "mayb": [11, 29], "scope": [11, 29, 30], "addition": 11, "written": [11, 13, 15, 30], "concept": [11, 13, 16, 30], "problemat": 11, "situat": [11, 22, 26], "submit": [11, 15, 20], "termin": 11, "innermost": 11, "qualifi": 11, "4": [11, 18, 22, 28], "my_variable_nam": 11, "least": [11, 18], "sequenti": 11, "IFs": 11, "FORs": 11, "overwritten": [11, 29], "wrapper": [11, 22], "symbol": [11, 30], "x": [11, 18, 20, 30], "instanti": 11, "manipul": 11, "assign_target": 11, "target_typ": 11, "store_with_read": 11, "op": 11, "augassign": 11, "process_ast": 11, "ast_tre": 11, "analys": 11, "process_cod": 11, "visit": [11, 29], "appropri": [11, 15, 20, 22], "visit_": 11, "visit_annassign": 11, "annassign": 11, "visit_assign": 11, "__targets__": 11, "__value__": 11, "visit_attribut": 11, "visit_augassign": 11, "visit_binop": 11, "visit_bool": 11, "visit_boolop": 11, "visit_classdef": 11, "visit_compar": 11, "visit_const": 11, "3": [11, 14, 15, 18, 22, 28, 30], "8": [11, 18], "visit_dict": 11, "uniform": 11, "visit_dictcomp": 11, "visit_expr": 11, "expr": [11, 18], "visit_for": 11, "visit_functiondef": 11, "visit_generatorexp": 11, "visit_if": 11, "visit_ifexp": 11, "visit_import": 11, "visit_importfrom": 11, "visit_lambda": 11, "visit_list": 11, "visit_listcomp": 11, "visit_nam": 11, "visit_nameconst": 11, "visit_num": 11, "visit_return": 11, "visit_setcomp": 11, "visit_slic": 11, "slice": 11, "alwai": [11, 13, 22, 26], "visit_str": 11, "visit_subscript": 11, "visit_unaryop": 11, "visit_whil": 11, "visit_with": 11, "visit_comprehens": 11, "visit_stat": 11, "tifaanalysi": 11, "bundl": [11, 22], "learn": 11, "tifa_cor": 11, "maintain": 12, "austin": 12, "univers": 12, "delawar": 12, "luke": 12, "gusukuma": 12, "virginia": 12, "tech": 12, "lukesg08": 12, "vt": [12, 13], "denni": 12, "kafura": 12, "discuss": [12, 30], "join": [12, 18], "github": [12, 16, 20], "api": [13, 16, 23], "speak": 13, "warrant": [13, 15], "best": [13, 16], "infer": 13, "mental": 13, "concret": 13, "suitabl": [13, 18], "web": [13, 16], "intention": 13, "involv": [13, 27], "sever": [13, 15, 22], "codebas": 13, "necessarili": 13, "overridden": 13, "amount": [13, 18, 22], "coordin": 13, "eventu": 13, "condens": 13, "coher": 13, "bit": [13, 19, 30], "host": 13, "com": [13, 14, 20], "cat": [13, 16], "c": [13, 18], "www": 13, "care": [13, 26, 30], "simpler": 13, "adjust": [13, 27], "implicit": 13, "Such": 13, "atomicfeedbackfunct": 13, "scenario": [13, 15, 18], "pure": [14, 15], "outsid": [14, 29], "intend": 14, "7": [14, 15, 18, 22, 27], "abov": [14, 15, 22, 30], "6": [14, 15, 18, 20, 22], "improv": [14, 22, 26], "integr": [14, 16, 22], "pip": [14, 20], "download": 14, "repositori": 14, "good": [15, 18, 19, 22], "hard": 15, "come": [15, 20, 29], "imagin": 15, "spit": 15, "12323": 15, "_special_custom_help": 15, "assertionerror": 15, "disori": 15, "deeper": 15, "insight": 15, "accur": [15, 18], "unhelp": 15, "measur": 15, "progress": 15, "toward": 15, "let": [15, 18, 22], "choos": [15, 18, 22, 26, 27, 29], "def": [15, 18, 25], "add_pric": 15, "book": 15, "lot": [15, 21, 27, 30], "below": [15, 30], "minimalist": 15, "typecheck": 15, "live": 15, "10": [15, 18, 22], "_expr_": 15, "_list_": [15, 25], "n": [15, 18, 25, 30], "___": [15, 18, 22, 25, 29, 30], "____": [15, 18], "shouldn": [15, 27, 29], "list_inside_loop": 15, "grasp": 15, "littl": 15, "undeclar": 15, "among": [15, 22], "diagram": 15, "begin": 15, "solut": [15, 26, 28], "At": 15, "conclus": [15, 18], "sent": 15, "framework": [16, 22, 30], "model": 16, "softwar": 16, "engin": [16, 29], "rather": [16, 20], "afterthought": 16, "introduct": [16, 18], "architectur": 16, "instal": [16, 20], "pypi": 16, "quick": [16, 25], "guid": [16, 25, 26], "usag": [16, 21, 25, 26], "arithmet": 16, "project": 16, "vpl": 16, "notebook": [16, 17], "novic": 16, "necessari": [16, 22, 28], "critic": [16, 21], "parti": 16, "compatibl": 16, "glossari": 16, "contact": 16, "troubl": 17, "crash": 17, "infinit": 17, "setrecursionlimit": 17, "1000": 17, "goe": 18, "Or": [18, 20, 22], "grab": 18, "emb": 18, "grade_assign": [18, 21, 22], "integ": [18, 22, 24, 27], "round": 18, "dollar": 18, "sign": 18, "trivial": 18, "consum": 18, "nearest": 18, "bui": 18, "food": 18, "roughli": 18, "cost": 18, "9": 18, "50": 18, "used_dollar_sign": 18, "num": 18, "embed": 18, "add_3": 18, "b": 18, "teach": 18, "annot": 18, "sophis": 18, "mangl": 18, "madlib": 18, "words_fil": 18, "txt": [18, 26], "story_fil": 18, "stori": 18, "w": 18, "strip": [18, 28], "l": [18, 22], "correct_stori": 18, "regardless": 18, "readlin": 18, "date": [18, 30], "2020": 18, "12": 18, "38pm": 18, "__version__": 18, "curriculum_snek": 18, "ensure_functions_return": 18, "prevent_printing_funct": 18, "ensure_cisc108_test": 18, "imported_r": 18, "datetim": 18, "imported_datetim": 18, "arrow": 18, "fanci": [18, 30], "imported_arrow": 18, "panda": 18, "wow": 18, "okai": 18, "imported_panda": 18, "cisc108": 18, "great": [18, 26], "appreci": 18, "used_tri": 18, "lowest": [18, 22], "good_coverage_so_far": 18, "parse_date_month": 18, "pleas": [18, 20, 28, 30], "1998": 18, "11": 18, "30": 18, "2010": 18, "15": 18, "01": 18, "05": 18, "31": 18, "9999": 18, "32": 18, "2013": 18, "13": [18, 22], "newark": 18, "de": 18, "0000": 18, "done_parse_date_month": 18, "parse_date_dai": 18, "done_parse_date_dai": 18, "parse_date_year": 18, "2021": 18, "2015": 18, "2005": 18, "013": 18, "done_parse_date_year": 18, "is_dat": 18, "201": 18, "done_is_d": 18, "29": [18, 22], "20": 18, "2019": 18, "3000": 18, "done_earli": 18, "real": 18, "ve": [18, 22], "adventur": 18, "beta": 18, "29am": 18, "postcondit": 18, "precondit": 18, "resolve_al": 18, "set_assertion_mod": 18, "function_signatur": 18, "disabled_builtin": 18, "mockped": 18, "blockedmodul": 18, "setup_ped": 18, "skip_tifa": 18, "saniti": 18, "assertgener": 18, "tripl": [18, 22, 30], "quot": 18, "render_introduct": 18, "create_world": 18, "world": [18, 22, 26, 30], "get_opt": 18, "render_end": 18, "win_path": 18, "lose_path": 18, "plai": 18, "win": 18, "lose": 18, "quit": [18, 21], "function_valu": 18, "grade_record": 18, "bodi": [18, 22, 25, 29, 30], "ast_nam": 18, "startswith": 18, "grade_render_introduct": 18, "match_signatur": 18, "create_world_compon": 18, "grade_create_world": 18, "initial_world": 18, "grade_create_world_statu": 18, "statu": 18, "grade_create_world_map": 18, "neighbor": 18, "grade_create_world_play": 18, "player": 18, "inventori": 18, "create_world_don": 18, "grade_create_world_finish": 18, "grade_rend": 18, "keep_context": 18, "grade_get_opt": 18, "grade_choos": 18, "fight": 18, "skip": 18, "sleep": 18, "grade_upd": 18, "grade_render_end": 18, "test_path": 18, "path_nam": 18, "win_and_lose_path": 18, "grade_win_and_lose_path": 18, "assertha": 18, "lost": 18, "game": 18, "finish_grad": 18, "all_docu": 18, "vision": 20, "usabl": 20, "achiev": 20, "reconfigur": 20, "ic": 20, "upload": 20, "vpl_evalu": 20, "sh": 20, "vpl_environ": 20, "echo": 20, "bin": 20, "bash": 20, "vpl_execut": 20, "python3": 20, "vpl_subfile0": 20, "chmod": 20, "enabl": 20, "header": 20, "preformat": 20, "git": 20, "curriculum": 20, "snek": 20, "ctvt": 20, "run_autograd": 20, "usr": 20, "env": 20, "set_maximum_scor": 20, "100": [20, 22], "highest": [20, 22, 30], "preload": 20, "effort": 20, "prepar": 20, "peopl": 20, "server": 20, "magic": 20, "bottom": 20, "wrote": 20, "jn": 20, "toolbar": 20, "cell": 20, "summar": 21, "readi": 21, "sorri": 21, "wrong_output": [21, 26], "As": 22, "ll": [22, 25], "onc": [22, 29, 30], "got": 22, "fine": 22, "student_submiss": 22, "regrad": 22, "folder": 22, "ada": [22, 26], "babbag": 22, "rees": 22, "trexler": 22, "63": 22, "prefer": 22, "hello": [22, 26, 30], "print_resolv": 22, "tediou": 22, "hundr": 22, "boilerpl": 22, "sai": [22, 30], "ran": 22, "review": [22, 30], "unus": [22, 26, 29], "throughout": 22, "els": [22, 29], "fact": 22, "priorit": 22, "complement": 22, "supplant": 22, "solv": 22, "incorrect_answ": 22, "assigned_literal_value_to_answ": 22, "wildcard": 22, "wild": [22, 30], "card": [22, 30], "wish": [22, 30], "assigned_to_answ": 22, "place": [22, 30], "holder": [22, 30], "denot": [22, 30], "_accumulator_": 22, "reserv": 22, "shadowed_builtin": 22, "doubl": [22, 30], "__initial__": 22, "initialized_accumul": 22, "47": 22, "add_numb": 22, "35": 22, "multipli": 22, "secretli": 22, "pretend": 22, "payoff": 22, "comfort": 22, "assert_": 22, "machineri": 22, "vastli": 22, "print_valu": 22, "n2": [22, 26], "n3": 22, "aspect": [22, 30], "seri": 22, "tabl": 22, "quantiti": 22, "27": 22, "statist": 22, "rich": 22, "somewhat": 22, "yourself": [22, 25, 26], "forbid": [22, 30], "incompat": [22, 29], "behav": 22, "anecdot": 22, "benefit": 23, "exhaust": 23, "save": [23, 30], "literal_messag": 24, "python_express": 24, "capac": 24, "context_messag": 24, "assertion_messag": 24, "cait_api": 25, "breviti": 25, "mirror": 25, "booltyp": 25, "dicttyp": 25, "functiontyp": 25, "literalbool": 25, "literalnon": 25, "literalnum": 25, "literalstr": 25, "nonetyp": 25, "numtyp": 25, "strtype": 25, "tupletyp": 25, "unknowntyp": 25, "_var_": [25, 30], "student_var": 25, "_function_": 25, "student_func_cal": 25, "_my_func_": 25, "student_func_def": 25, "haven": [25, 26], "sibl": 25, "indent": 25, "_item_": [25, 30], "__exp__": 25, "submatch": [25, 30], "direct": 25, "type_definit": 25, "_sum_": 25, "get_data_typ": 25, "took": 25, "get_data_st": 25, "was_typ": 25, "explor": 25, "14": 25, "print_typ": 25, "len": 25, "strongli": 26, "besid": 26, "do_not_use_for_loop": 26, "need_multipl": 26, "revis": 26, "oblig": 26, "incorporate_vari": 26, "signal": 26, "exam": 26, "stanc": 26, "particular": 26, "refin": 26, "accordingli": 26, "typeerror": 26, "viewabl": 26, "went": [26, 27], "essenti": 26, "Be": [26, 30], "n31": 26, "n44": 26, "demand": 26, "not_print": 26, "primari": [27, 30], "rerun": 27, "circumst": [27, 30], "favor": 27, "extrem": 27, "imit": 27, "subtract": 27, "isinst": 27, "sneakili": 27, "seper": 27, "disk": 27, "understand": 27, "alpha": 27, "explicit": 28, "legaci": 28, "light": 28, "undo": 28, "separate_into_sect": 28, "next_sect": 28, "check_section_exist": 28, "prologu": 28, "ones": 28, "plu": 28, "not_enough_sect": 28, "stop_sect": 28, "restor": 28, "blank_sourc": 28, "blank": 28, "exceed": 28, "syntax_error": 28, "bad": 28, "incorrect": [28, 29], "incorrect_number_of_sect": 28, "down": [29, 30], "action": 29, "action_after_return": 29, "return_outside_funct": 29, "multiple_return_typ": 29, "unequ": 29, "write_out_of_scop": 29, "name_messag": 29, "unconnect": 29, "unconnected_block": 29, "connect": 29, "unfil": 29, "hole": 29, "iteration_problem": 29, "singular": 29, "a_dog": 29, "dog": 29, "initialization_problem": 29, "possible_initialization_problem": 29, "possibli": 29, "unused_vari": 29, "overwritten_vari": 29, "gave": 29, "iterating_over_non_list": 29, "whose": 29, "wasnot": 29, "iterating_over_empty_list": 29, "incompatible_typ": 29, "operand": 29, "left_nam": 29, "right_nam": 29, "mismatch": 29, "parameter_type_mismatch": 29, "parameter_name_messag": 29, "parameter_type_nam": 29, "argument_type_nam": 29, "read_out_of_scop": 29, "type_chang": 29, "unnecessari": 29, "unnecessary_second_branch": 29, "else_on_loop_bodi": 29, "recursive_cal": 29, "not_a_funct": 29, "singular_nam": 29, "incorrect_ar": 29, "function_typ": 29, "function_name_messag": 29, "expected_count": 29, "actual_count": 29, "module_not_found": 29, "append_to_non_list": 29, "quickstart": 30, "pipelin": 30, "nprint": 30, "simplest": 30, "demograph": 30, "bio": 30, "focus": 30, "simplist": 30, "assumpt": 30, "job": 30, "__expr__": 30, "string_of_student_cod": 30, "metaphor": 30, "placehold": 30, "matcher": 30, "impli": 30, "bidirect": 30, "_var1_": 30, "_var2_": 30, "_var3_": 30, "y": 30, "similarli": 30, "term": 30, "familiar": 30, "marker": 30, "referenc": 30, "fun": 30, "summer": 30, "counter": 30, "running_avg": 30, "i_list": 30, "__expr1__": 30, "__expr2__": 30, "nearli": 30, "expand": 30, "astsymbollist": 30, "astsymbol": 30, "funcdefinit": 30, "deep": 30, "extract": 30, "commut": 30, "unintellig": 30, "_var1": 30, "used_for_loop": 30, "for_loop_multiple_target": 30, "topic": 30, "incorrectli": 30, "escap": 30, "awar": 30, "imposs": 30, "defens": 30, "proper": 30, "permiss": 30, "pre": 30, "establish": 30, "oter": 30}, "objects": {"": [[24, 0, 1, "", "assert_equal"], [27, 0, 1, "", "call"], [28, 0, 1, "", "check_section_exists"], [26, 0, 1, "", "clear_report"], [26, 0, 1, "", "compliment"], [26, 0, 1, "", "contextualize_report"], [26, 0, 1, "", "debug"], [24, 0, 1, "", "ensure_literal"], [26, 0, 1, "", "explain"], [26, 0, 1, "", "gently"], [26, 0, 1, "", "get_all_feedback"], [28, 0, 1, "", "get_program"], [26, 0, 1, "", "give_partial"], [26, 0, 1, "", "guidance"], [26, 0, 1, "", "hide_correctness"], [26, 0, 1, "", "log"], [28, 0, 1, "", "next_section"], [24, 0, 1, "", "prevent_literal"], [28, 0, 1, "", "restore_code"], [27, 0, 1, "", "run"], [28, 0, 1, "", "separate_into_sections"], [27, 0, 1, "", "set_input"], [28, 0, 1, "", "set_source"], [26, 0, 1, "", "set_success"], [28, 0, 1, "", "stop_sections"], [26, 0, 1, "", "suppress"], [29, 0, 1, "", "tifa_analysis"], [28, 0, 1, "", "verify"]], "pedal": [[5, 1, 0, "-", "assertions"], [6, 1, 0, "-", "cait"], [9, 1, 0, "-", "sandbox"], [11, 1, 0, "-", "tifa"]], "pedal.assertions": [[5, 1, 0, "-", "commands"], [5, 0, 1, "", "reset"], [5, 1, 0, "-", "runtime"], [5, 1, 0, "-", "static"]], "pedal.assertions.commands": [[5, 2, 1, "", "check_dataclass_error"], [5, 0, 1, "", "unit_test"], [5, 2, 1, "", "wheat_chaff_game_class"]], "pedal.assertions.commands.wheat_chaff_game_class": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime": [[5, 4, 1, "", "assertAlmostEqual"], [5, 4, 1, "", "assertEqual"], [5, 4, 1, "", "assertFalse"], [5, 4, 1, "", "assertGreater"], [5, 4, 1, "", "assertGreaterEqual"], [5, 4, 1, "", "assertHasAttr"], [5, 4, 1, "", "assertHasFunction"], [5, 4, 1, "", "assertHasVariable"], [5, 4, 1, "", "assertIn"], [5, 4, 1, "", "assertIs"], [5, 4, 1, "", "assertIsInstance"], [5, 4, 1, "", "assertIsNone"], [5, 4, 1, "", "assertIsNot"], [5, 4, 1, "", "assertIsNotInstance"], [5, 4, 1, "", "assertIsNotNone"], [5, 4, 1, "", "assertLengthEqual"], [5, 4, 1, "", "assertLengthGreater"], [5, 4, 1, "", "assertLengthGreaterEqual"], [5, 4, 1, "", "assertLengthLess"], [5, 4, 1, "", "assertLengthLessEqual"], [5, 4, 1, "", "assertLengthNotEqual"], [5, 4, 1, "", "assertLess"], [5, 4, 1, "", "assertLessEqual"], [5, 4, 1, "", "assertNotAlmostEqual"], [5, 4, 1, "", "assertNotEqual"], [5, 4, 1, "", "assertNotIn"], [5, 4, 1, "", "assertNotOutput"], [5, 4, 1, "", "assertNotOutputContains"], [5, 4, 1, "", "assertNotRegex"], [5, 4, 1, "", "assertNotType"], [5, 4, 1, "", "assertOutput"], [5, 4, 1, "", "assertOutputContains"], [5, 4, 1, "", "assertPrints"], [5, 4, 1, "", "assertRegex"], [5, 4, 1, "", "assertTrue"], [5, 4, 1, "", "assertType"], [5, 2, 1, "", "assert_almost_equal"], [5, 2, 1, "", "assert_contains_subset"], [5, 2, 1, "", "assert_equal"], [5, 2, 1, "", "assert_false"], [5, 2, 1, "", "assert_greater"], [5, 2, 1, "", "assert_greater_equal"], [5, 2, 1, "", "assert_has_attr"], [5, 2, 1, "", "assert_has_function"], [5, 2, 1, "", "assert_has_variable"], [5, 2, 1, "", "assert_in"], [5, 2, 1, "", "assert_is"], [5, 2, 1, "", "assert_is_dataclass"], [5, 2, 1, "", "assert_is_instance"], [5, 2, 1, "", "assert_is_none"], [5, 2, 1, "", "assert_is_not"], [5, 2, 1, "", "assert_is_not_dataclass"], [5, 2, 1, "", "assert_is_not_none"], [5, 2, 1, "", "assert_length_equal"], [5, 2, 1, "", "assert_length_greater"], [5, 2, 1, "", "assert_length_greater_equal"], [5, 2, 1, "", "assert_length_less"], [5, 2, 1, "", "assert_length_less_equal"], [5, 2, 1, "", "assert_length_not_equal"], [5, 2, 1, "", "assert_less"], [5, 2, 1, "", "assert_less_equal"], [5, 2, 1, "", "assert_not_almost_equal"], [5, 2, 1, "", "assert_not_contains_subset"], [5, 2, 1, "", "assert_not_equal"], [5, 2, 1, "", "assert_not_in"], [5, 2, 1, "", "assert_not_is_instance"], [5, 2, 1, "", "assert_not_output"], [5, 2, 1, "", "assert_not_output_contains"], [5, 2, 1, "", "assert_not_regex"], [5, 2, 1, "", "assert_not_type"], [5, 2, 1, "", "assert_output"], [5, 2, 1, "", "assert_output_contains"], [5, 2, 1, "", "assert_prints"], [5, 2, 1, "", "assert_regex"], [5, 2, 1, "", "assert_true"], [5, 2, 1, "", "assert_type"], [5, 2, 1, "", "ensure_called_uniquely"], [5, 2, 1, "", "ensure_coverage"]], "pedal.assertions.runtime.assert_contains_subset": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_false": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_attr": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_function": [[5, 3, 1, "", "condition"], [5, 3, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_has_variable": [[5, 3, 1, "", "condition"], [5, 3, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_in": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_dataclass": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_instance": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_none": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_dataclass": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_none": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_not_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_less": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_less_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_contains_subset": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_equal": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_in": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_is_instance": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_contains": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_regex": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_type": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_output": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_contains": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_regex": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.assert_true": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.ensure_called_uniquely": [[5, 3, 1, "", "condition"]], "pedal.assertions.runtime.ensure_coverage": [[5, 3, 1, "", "condition"]], "pedal.assertions.static": [[5, 2, 1, "", "ensure_ast"], [5, 0, 1, "", "ensure_dataclass"], [5, 2, 1, "", "ensure_documented_functions"], [5, 0, 1, "", "ensure_function"], [5, 2, 1, "", "ensure_function_call"], [5, 2, 1, "", "ensure_import"], [5, 2, 1, "", "ensure_literal"], [5, 2, 1, "", "ensure_literal_type"], [5, 2, 1, "", "ensure_operation"], [5, 4, 1, "", "ensure_operator"], [5, 0, 1, "", "ensure_prints_exactly"], [5, 2, 1, "", "ensure_starting_code"], [5, 0, 1, "", "function_prints"], [5, 0, 1, "", "has_import"], [5, 2, 1, "", "prevent_ast"], [5, 2, 1, "", "prevent_embedded_answer"], [5, 2, 1, "", "prevent_function_call"], [5, 2, 1, "", "prevent_import"], [5, 2, 1, "", "prevent_literal"], [5, 2, 1, "", "prevent_literal_type"], [5, 2, 1, "", "prevent_operation"], [5, 4, 1, "", "prevent_operator"]], "pedal.assertions.static.ensure_ast": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_documented_functions": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_function_call": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_import": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_literal": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_literal_type": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_operation": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.ensure_starting_code": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_ast": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_embedded_answer": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_function_call": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_import": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_literal": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_literal_type": [[5, 3, 1, "", "condition"]], "pedal.assertions.static.prevent_operation": [[5, 3, 1, "", "condition"]], "pedal.cait": [[6, 1, 0, "-", "cait_api"], [6, 1, 0, "-", "find_node"]], "pedal.cait.cait_api": [[6, 5, 1, "", "CaitException"], [6, 0, 1, "", "data_state"], [6, 0, 1, "", "data_type"], [6, 0, 1, "", "def_use_error"], [6, 0, 1, "", "expire_cait_cache"], [6, 0, 1, "", "find_asts"], [6, 0, 1, "", "find_expr_sub_matches"], [6, 0, 1, "", "find_match"], [6, 0, 1, "", "find_matches"], [6, 0, 1, "", "find_submatches"], [6, 0, 1, "", "parse_program"], [6, 0, 1, "", "reparse_if_needed"], [6, 0, 1, "", "require_tifa"], [6, 0, 1, "", "reset"]], "pedal.cait.find_node": [[6, 0, 1, "", "find_function_calls"], [6, 0, 1, "", "find_function_definition"], [6, 0, 1, "", "find_operation"], [6, 0, 1, "", "find_prior_initializations"], [6, 0, 1, "", "function_is_called"], [6, 0, 1, "", "is_top_level"]], "pedal.core": [[0, 1, 0, "-", "commands"], [0, 1, 0, "-", "environment"], [0, 1, 0, "-", "feedback"], [0, 1, 0, "-", "location"], [0, 1, 0, "-", "report"], [0, 1, 0, "-", "submission"], [0, 1, 0, "-", "tool"]], "pedal.core.commands": [[0, 2, 1, "", "Feedback"], [0, 0, 1, "", "clear_report"], [0, 2, 1, "", "compliment"], [0, 0, 1, "", "contextualize_report"], [0, 0, 1, "", "debug"], [0, 2, 1, "", "explain"], [0, 4, 1, "", "feedback"], [0, 2, 1, "", "gently"], [0, 0, 1, "", "get_all_feedback"], [0, 0, 1, "", "get_submission"], [0, 2, 1, "", "give_partial"], [0, 2, 1, "", "guidance"], [0, 0, 1, "", "hide_correctness"], [0, 0, 1, "", "log"], [0, 2, 1, "", "set_success"], [0, 0, 1, "", "suppress"], [0, 2, 1, "", "system_error"]], "pedal.core.commands.Feedback": [[0, 4, 1, "", "CATEGORIES"], [0, 4, 1, "", "KINDS"], [0, 4, 1, "", "activate"], [0, 4, 1, "", "author"], [0, 4, 1, "", "category"], [0, 3, 1, "", "condition"], [0, 4, 1, "", "correct"], [0, 4, 1, "", "else_message"], [0, 4, 1, "", "fields"], [0, 4, 1, "", "justification"], [0, 4, 1, "", "justification_template"], [0, 4, 1, "", "kind"], [0, 4, 1, "", "label"], [0, 4, 1, "", "location"], [0, 4, 1, "", "message"], [0, 4, 1, "", "message_template"], [0, 4, 1, "", "muted"], [0, 4, 1, "", "parent"], [0, 4, 1, "", "priority"], [0, 4, 1, "", "report"], [0, 4, 1, "", "score"], [0, 4, 1, "", "tags"], [0, 4, 1, "", "title"], [0, 4, 1, "", "tool"], [0, 4, 1, "", "unscored"], [0, 3, 1, "", "update_location"], [0, 4, 1, "", "valence"], [0, 4, 1, "", "version"]], "pedal.core.environment": [[0, 2, 1, "", "Environment"]], "pedal.core.feedback": [[0, 0, 1, "", "CompositeFeedbackFunction"], [0, 2, 1, "", "Feedback"], [0, 2, 1, "", "FeedbackCategory"], [0, 2, 1, "", "FeedbackKind"], [0, 2, 1, "", "FeedbackResponse"]], "pedal.core.feedback.Feedback": [[0, 4, 1, "", "CATEGORIES"], [0, 4, 1, "", "KINDS"], [0, 4, 1, "", "activate"], [0, 4, 1, "", "author"], [0, 4, 1, "", "category"], [0, 3, 1, "", "condition"], [0, 4, 1, "", "correct"], [0, 4, 1, "", "else_message"], [0, 4, 1, "", "fields"], [0, 4, 1, "", "justification"], [0, 4, 1, "", "justification_template"], [0, 4, 1, "", "kind"], [0, 4, 1, "", "label"], [0, 4, 1, "", "location"], [0, 4, 1, "", "message"], [0, 4, 1, "", "message_template"], [0, 4, 1, "", "muted"], [0, 4, 1, "", "parent"], [0, 4, 1, "", "priority"], [0, 4, 1, "", "report"], [0, 4, 1, "", "score"], [0, 4, 1, "", "tags"], [0, 4, 1, "", "title"], [0, 4, 1, "", "tool"], [0, 4, 1, "", "unscored"], [0, 3, 1, "", "update_location"], [0, 4, 1, "", "valence"], [0, 4, 1, "", "version"]], "pedal.core.feedback.FeedbackCategory": [[0, 4, 1, "", "ALGORITHMIC"], [0, 4, 1, "", "COMPLETE"], [0, 4, 1, "", "INSTRUCTIONS"], [0, 4, 1, "", "INSTRUCTOR"], [0, 4, 1, "", "MISTAKES"], [0, 4, 1, "", "POSITIVE"], [0, 4, 1, "", "RUNTIME"], [0, 4, 1, "", "SPECIFICATION"], [0, 4, 1, "", "STUDENT"], [0, 4, 1, "", "STYLE"], [0, 4, 1, "", "SYNTAX"], [0, 4, 1, "", "SYSTEM"], [0, 4, 1, "", "UNKNOWN"]], "pedal.core.feedback.FeedbackKind": [[0, 4, 1, "", "CONSTRAINT"], [0, 4, 1, "", "HINT"], [0, 4, 1, "", "METACOGNITIVE"], [0, 4, 1, "", "MISCONCEPTION"], [0, 4, 1, "", "MISTAKE"]], "pedal.core.location": [[0, 2, 1, "", "Location"]], "pedal.core.location.Location": [[0, 4, 1, "", "col"], [0, 4, 1, "", "end_col"], [0, 4, 1, "", "end_line"], [0, 4, 1, "", "filename"], [0, 3, 1, "", "from_ast"], [0, 4, 1, "", "line"], [0, 3, 1, "", "to_json"]], "pedal.core.report": [[0, 6, 1, "", "MAIN_REPORT"], [0, 2, 1, "", "Report"]], "pedal.core.report.Report": [[0, 4, 1, "", "TOOLS"], [0, 4, 1, "", "_tool_data"], [0, 3, 1, "", "add_class_hook"], [0, 3, 1, "", "add_feedback"], [0, 3, 1, "", "add_hook"], [0, 3, 1, "", "add_ignored_feedback"], [0, 3, 1, "", "clear"], [0, 3, 1, "", "contextualize"], [0, 3, 1, "", "execute_hooks"], [0, 4, 1, "", "feedback"], [0, 3, 1, "", "full_clear"], [0, 4, 1, "", "group"], [0, 4, 1, "", "group_names"], [0, 4, 1, "", "hiddens"], [0, 3, 1, "", "hide_correctness"], [0, 4, 1, "", "hooks"], [0, 3, 1, "", "register_tool"], [0, 4, 1, "", "resolves"], [0, 4, 1, "", "result"], [0, 3, 1, "", "set_formatter"], [0, 3, 1, "", "stop_group"], [0, 4, 1, "", "submission"], [0, 3, 1, "", "suppress"], [0, 4, 1, "", "suppressions"]], "pedal.core.submission": [[0, 2, 1, "", "Submission"]], "pedal.core.submission.Submission": [[0, 4, 1, "", "assignment"], [0, 4, 1, "", "course"], [0, 4, 1, "", "execution"], [0, 4, 1, "", "files"], [0, 3, 1, "", "get_files_lines"], [0, 3, 1, "", "get_lines"], [0, 4, 1, "", "main_code"], [0, 4, 1, "", "main_file"], [0, 3, 1, "", "replace_main"], [0, 3, 1, "", "set_line_offset"], [0, 4, 1, "", "user"]], "pedal.core.tool": [[0, 2, 1, "", "ToolRegistration"]], "pedal.core.tool.ToolRegistration": [[0, 4, 1, "", "name"], [0, 4, 1, "", "reset"]], "pedal.extensions": [[7, 1, 0, "-", "plotting"], [7, 1, 0, "-", "turtles"]], "pedal.extensions.plotting": [[7, 2, 1, "", "BadGraphFeedback"], [7, 0, 1, "", "assert_plot"], [7, 0, 1, "", "compare_data"], [7, 0, 1, "", "ensure_correct_plot"], [7, 2, 1, "", "ensure_show"], [7, 0, 1, "", "get_plots"], [7, 2, 1, "", "no_plt"], [7, 2, 1, "", "other_plt"], [7, 2, 1, "", "plt_rename_err"], [7, 2, 1, "", "plt_wrong_import"], [7, 0, 1, "", "prevent_incorrect_plt"], [7, 2, 1, "", "wrong_plt_data"], [7, 2, 1, "", "wrong_plt_type"]], "pedal.extensions.plotting.ensure_show": [[7, 3, 1, "", "condition"]], "pedal.extensions.plotting.plt_rename_err": [[7, 3, 1, "", "condition"]], "pedal.extensions.plotting.plt_wrong_import": [[7, 3, 1, "", "condition"]], "pedal.questions": [[8, 1, 0, "-", "setup"]], "pedal.questions.setup": [[8, 0, 1, "", "reset"], [8, 0, 1, "", "set_seed"]], "pedal.sandbox": [[9, 1, 0, "-", "commands"], [9, 1, 0, "-", "feedbacks"], [9, 0, 1, "", "reset"], [9, 1, 0, "-", "sandbox"]], "pedal.sandbox.commands": [[9, 2, 1, "", "CommandBlock"], [9, 0, 1, "", "allow_function"], [9, 0, 1, "", "allow_module"], [9, 0, 1, "", "block_function"], [9, 0, 1, "", "block_module"], [9, 0, 1, "", "call"], [9, 0, 1, "", "check_coverage"], [9, 0, 1, "", "clear_input"], [9, 0, 1, "", "clear_mocks"], [9, 0, 1, "", "clear_output"], [9, 0, 1, "", "clear_sandbox"], [9, 0, 1, "", "clear_student_data"], [9, 0, 1, "", "count_unique_calls"], [9, 0, 1, "", "evaluate"], [9, 0, 1, "", "get_call_arguments"], [9, 0, 1, "", "get_exception"], [9, 0, 1, "", "get_input"], [9, 0, 1, "", "get_module"], [9, 0, 1, "", "get_output"], [9, 0, 1, "", "get_sandbox"], [9, 0, 1, "", "get_student_data"], [9, 0, 1, "", "get_trace"], [9, 0, 1, "", "mock_function"], [9, 0, 1, "", "mock_module"], [9, 0, 1, "", "queue_input"], [9, 0, 1, "", "reset_output"], [9, 0, 1, "", "run"], [9, 0, 1, "", "set_input"], [9, 0, 1, "", "start_trace"], [9, 0, 1, "", "stop_trace"]], "pedal.sandbox.feedbacks": [[9, 2, 1, "", "attribute_error"], [9, 2, 1, "", "import_error"], [9, 2, 1, "", "indentation_error"], [9, 2, 1, "", "index_error"], [9, 2, 1, "", "io_error"], [9, 2, 1, "", "key_error"], [9, 2, 1, "", "memory_error"], [9, 2, 1, "", "name_error"], [9, 2, 1, "", "runtime_error"], [9, 2, 1, "", "timeout_error"], [9, 2, 1, "", "type_error"], [9, 2, 1, "", "value_error"], [9, 2, 1, "", "zero_division_error"]], "pedal.sandbox.feedbacks.runtime_error": [[9, 4, 1, "", "context"], [9, 4, 1, "", "exception"], [9, 4, 1, "", "exception_message"], [9, 4, 1, "", "exception_name"], [9, 4, 1, "", "traceback"], [9, 4, 1, "", "traceback_message"]], "pedal.sandbox.sandbox": [[9, 2, 1, "", "Sandbox"]], "pedal.sandbox.sandbox.Sandbox": [[9, 4, 1, "", "MAXIMUM_TEMPORARY_LENGTH"], [9, 4, 1, "", "_context"], [9, 4, 1, "", "_current_patches"], [9, 4, 1, "", "_next_context_id"], [9, 3, 1, "", "allow_module"], [9, 4, 1, "", "allowed_time"], [9, 3, 1, "", "append_output"], [9, 3, 1, "", "block_module"], [9, 3, 1, "", "call"], [9, 3, 1, "", "clear"], [9, 3, 1, "", "clear_context"], [9, 3, 1, "", "clear_exception"], [9, 3, 1, "", "clear_input"], [9, 3, 1, "", "clear_mocks"], [9, 3, 1, "", "clear_output"], [9, 3, 1, "", "clear_tracer"], [9, 4, 1, "", "data"], [9, 3, 1, "", "evaluate"], [9, 4, 1, "", "exception"], [9, 4, 1, "", "feedback"], [9, 7, 1, "", "functions"], [9, 3, 1, "", "get_context"], [9, 3, 1, "", "get_names_by_type"], [9, 3, 1, "", "get_values_by_type"], [9, 3, 1, "", "get_variables_by_type"], [9, 4, 1, "", "inputs"], [9, 3, 1, "", "make_safe_variable"], [9, 3, 1, "", "mock_module"], [9, 4, 1, "", "output"], [9, 4, 1, "", "raw_output"], [9, 3, 1, "", "reset_default_overrides"], [9, 4, 1, "", "result"], [9, 3, 1, "", "run"], [9, 3, 1, "", "set_input"], [9, 3, 1, "", "set_student_data"], [9, 3, 1, "", "start_grouping_context"], [9, 3, 1, "", "stop_grouping_context"], [9, 4, 1, "", "target"], [9, 4, 1, "", "tracer_style"], [9, 7, 1, "", "var"]], "pedal.sandbox.sandbox.Sandbox.modules": [[9, 4, 1, "", "plots"], [9, 4, 1, "", "turtles"]], "pedal.source": [[10, 1, 0, "-", "source"]], "pedal.source.source": [[10, 0, 1, "", "get_original_program"], [10, 0, 1, "", "get_program"], [10, 0, 1, "", "reset"], [10, 0, 1, "", "restore_code"], [10, 0, 1, "", "set_source"], [10, 0, 1, "", "set_source_file"], [10, 0, 1, "", "verify"], [10, 0, 1, "", "verify_section"]], "pedal.tifa": [[11, 2, 1, "", "Tifa"], [11, 0, 1, "", "tifa_analysis"]], "pedal.tifa.Tifa": [[11, 3, 1, "", "assign_target"], [11, 3, 1, "", "process_ast"], [11, 3, 1, "", "process_code"], [11, 3, 1, "", "visit"], [11, 3, 1, "", "visit_AnnAssign"], [11, 3, 1, "", "visit_Assign"], [11, 3, 1, "", "visit_Attribute"], [11, 3, 1, "", "visit_AugAssign"], [11, 3, 1, "", "visit_BinOp"], [11, 3, 1, "", "visit_Bool"], [11, 3, 1, "", "visit_BoolOp"], [11, 3, 1, "", "visit_ClassDef"], [11, 3, 1, "", "visit_Compare"], [11, 3, 1, "", "visit_Constant"], [11, 3, 1, "", "visit_Dict"], [11, 3, 1, "", "visit_DictComp"], [11, 3, 1, "", "visit_Expr"], [11, 3, 1, "", "visit_For"], [11, 3, 1, "", "visit_FunctionDef"], [11, 3, 1, "", "visit_GeneratorExp"], [11, 3, 1, "", "visit_If"], [11, 3, 1, "", "visit_IfExp"], [11, 3, 1, "", "visit_Import"], [11, 3, 1, "", "visit_ImportFrom"], [11, 3, 1, "", "visit_Lambda"], [11, 3, 1, "", "visit_List"], [11, 3, 1, "", "visit_ListComp"], [11, 3, 1, "", "visit_Name"], [11, 3, 1, "", "visit_NameConstant"], [11, 3, 1, "", "visit_Num"], [11, 3, 1, "", "visit_Return"], [11, 3, 1, "", "visit_SetComp"], [11, 3, 1, "", "visit_Slice"], [11, 3, 1, "", "visit_Str"], [11, 3, 1, "", "visit_Subscript"], [11, 3, 1, "", "visit_UnaryOp"], [11, 3, 1, "", "visit_While"], [11, 3, 1, "", "visit_With"], [11, 3, 1, "", "visit_comprehension"], [11, 3, 1, "", "visit_statements"]]}, "objtypes": {"0": "py:function", "1": "py:module", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception", "6": "py:data", "7": "py:property"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "module", "Python module"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "titleterms": {"develop": [0, 4], "api": 0, "import": 0, "concept": [0, 2], "core": [0, 22, 26], "command": [0, 22, 26], "report": [0, 6, 10], "locat": 0, "feedback": [0, 2, 21, 22, 28], "environ": [0, 22], "submiss": 0, "tool": [0, 4, 30], "intern": 1, "name": 1, "convent": 1, "function": [2, 18, 22, 25], "why": 2, "The": 2, "metadata": 2, "messag": 2, "templat": 2, "necessari": 3, "librari": 3, "critic": 3, "standard": 3, "non": 3, "option": 3, "third": 3, "parti": 3, "compatibl": 3, "skulpt": 3, "micropython": 3, "refer": [4, 23, 25], "content": [4, 16, 23], "assert": [5, 22, 24], "cait": [6, 25, 30], "data": [6, 10, 25], "extens": 7, "question": [8, 18], "sandbox": [9, 27, 30], "sourc": [10, 28, 30], "tifa": [11, 29, 30], "contact": 12, "glossari": 13, "instal": 14, "pypi": 14, "github": 14, "introduct": 15, "an": 15, "exampl": [15, 18], "architectur": 15, "welcom": 16, "pedal": [16, 25, 30], "": 16, "document": [16, 21], "indic": 16, "tabl": 16, "teacher": [18, 22, 23, 30], "basic": 18, "arithmet": 18, "call": [18, 22, 25], "student": [18, 22], "defin": 18, "complex": 18, "medium": 18, "project": 18, "larg": 18, "autograd": 20, "integr": 20, "vpl": 20, "gradescop": 20, "blockpi": 20, "web": 20, "cat": 20, "jupyt": 20, "notebook": 20, "best": 21, "practic": 21, "us": [21, 30], "novic": 21, "friendli": 21, "languag": 21, "quick": 22, "start": 22, "guid": 22, "line": 22, "usag": 22, "instructor": 22, "control": 22, "script": 22, "custom": 22, "find": [22, 25, 30], "ast": [22, 30], "pattern": 22, "check": 22, "execut": 22, "result": 22, "simpl": 22, "unit": 22, "test": 22, "other": 22, "resolv": [22, 30], "static": 24, "runtim": 24, "list": 25, "type": 25, "save": 25, "variabl": 25, "definit": 25, "subtre": 25, "match": 25, "section": 28, "tutori": 30, "element": 30, "mistak": 30, "toolkit": 30, "fcf": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Developer API": [[0, "developer-api"]], "Important Concepts": [[0, "important-concepts"]], "Core Commands": [[0, "module-pedal.core.commands"], [26, "core-commands"]], "Report": [[0, "module-pedal.core.report"]], "Location": [[0, "module-pedal.core.location"]], "Feedback": [[0, "module-pedal.core.feedback"]], "Environment": [[0, "module-pedal.core.environment"]], "Submission": [[0, "module-pedal.core.submission"]], "Tools": [[0, "module-pedal.core.tool"], [30, "tools"]], "Internal Naming Conventions": [[1, "internal-naming-conventions"]], "Feedback Functions": [[2, "feedback-functions"]], "Why Feedback Functions?": [[2, "why-feedback-functions"]], "Feedback Function Concepts": [[2, "feedback-function-concepts"]], "The Metadata of Feedback Functions": [[2, "the-metadata-of-feedback-functions"]], "Message": [[2, "message"]], "Message Template": [[2, "message-template"]], "Necessary Libraries": [[3, "necessary-libraries"]], "Critical Standard Libraries": [[3, "critical-standard-libraries"]], "Non-Critical Standard Libraries": [[3, "non-critical-standard-libraries"]], "Optional Third Party Libraries": [[3, "optional-third-party-libraries"]], "Compatiblity": [[3, "compatiblity"]], "Skulpt": [[3, "skulpt"]], "MicroPython": [[3, "micropython"]], "Developer Tools Reference": [[4, "developer-tools-reference"]], "Contents": [[4, null], [16, null], [23, null]], "Assertions": [[5, "module-pedal.assertions"], [24, "assertions"]], "CAIT": [[6, "module-pedal.cait"], [25, "cait"], [30, "cait"]], "Cait Report Data": [[6, "id1"]], "Extensions": [[7, "module-pedal.extensions.plotting"]], "Questions": [[8, "module-pedal.questions.setup"]], "Sandbox": [[9, "module-pedal.sandbox"], [27, "sandbox"], [30, "sandbox"]], "Source": [[10, "source"], [28, "source"], [30, "source"]], "Source Report Data": [[10, "id2"]], "TIFA": [[11, "tifa"], [29, "tifa"], [30, "tifa"]], "Contact": [[12, "contact"]], "Glossary": [[13, "glossary"]], "Installation": [[14, "installation"]], "PyPi": [[14, "pypi"]], "GitHub": [[14, "github"]], "Introduction": [[15, "introduction"]], "An Example": [[15, "an-example"]], "Architecture": [[15, "architecture"]], "Welcome to Pedal\u2019s documentation!": [[16, "welcome-to-pedal-s-documentation"]], "Indices and tables": [[16, "indices-and-tables"]], "Teacher Examples": [[18, "teacher-examples"]], "Basic Arithmetic Question": [[18, "basic-arithmetic-question"]], "Basic Function Call Question": [[18, "basic-function-call-question"]], "Student Defined Function": [[18, "student-defined-function"]], "Complex Question": [[18, "complex-question"]], "Medium Project": [[18, "medium-project"]], "Large Project": [[18, "large-project"]], "Autograder Integrations": [[20, "autograder-integrations"]], "VPL": [[20, "vpl"]], "GradeScope": [[20, "gradescope"]], "BlockPy": [[20, "blockpy"]], "Web-CAT": [[20, "web-cat"]], "Jupyter Notebooks": [[20, "jupyter-notebooks"]], "Best Practices": [[21, "best-practices"]], "Documenting Feedback": [[21, "documenting-feedback"]], "Use Novice-Friendly Language": [[21, "use-novice-friendly-language"]], "Teacher Quick Start Guide": [[22, "teacher-quick-start-guide"]], "Command Line Usage": [[22, "command-line-usage"]], "Instructor Control Scripts": [[22, "instructor-control-scripts"]], "Custom Environments": [[22, "custom-environments"]], "Core Feedback Functions": [[22, "core-feedback-functions"]], "Finding AST Patterns": [[22, "finding-ast-patterns"]], "Checking Execution Results": [[22, "checking-execution-results"]], "Calling Students\u2019 Functions": [[22, "calling-students-functions"]], "Simple Assertions": [[22, "simple-assertions"]], "Simple Unit Testing": [[22, "simple-unit-testing"]], "Other Assertions": [[22, "other-assertions"]], "Resolver Feedback": [[22, "resolver-feedback"]], "Teacher Reference": [[23, "teacher-reference"]], "Static": [[24, "static"]], "Runtime": [[24, "runtime"]], "List of Pedal Data Types": [[25, "list-of-pedal-data-types"]], "Save and reference variable": [[25, "save-and-reference-variable"]], "Reference a function call": [[25, "reference-a-function-call"]], "Reference a function definition": [[25, "reference-a-function-definition"]], "Subtree matching": [[25, "subtree-matching"]], "Finding Data types": [[25, "finding-data-types"]], "Sections": [[28, "sections"]], "Source Feedbacks": [[28, "source-feedbacks"]], "Teacher Tutorial": [[30, "teacher-tutorial"]], "Using Pedal": [[30, "using-pedal"]], "Finding AST Elements": [[30, "finding-ast-elements"]], "Mistakes": [[30, "mistakes"]], "Toolkit": [[30, "toolkit"]], "Resolvers": [[30, "resolvers"]], "FCFS": [[30, "fcfs"]]}, "indexentries": {"algorithmic (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.ALGORITHMIC"]], "categories (feedback attribute)": [[0, "pedal.core.commands.Feedback.CATEGORIES"], [0, "pedal.core.feedback.Feedback.CATEGORIES"]], "complete (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.COMPLETE"]], "constraint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.CONSTRAINT"]], "compositefeedbackfunction() (in module pedal.core.feedback)": [[0, "pedal.core.feedback.CompositeFeedbackFunction"]], "environment (class in pedal.core.environment)": [[0, "pedal.core.environment.Environment"]], "feedback (class in pedal.core.commands)": [[0, "pedal.core.commands.Feedback"]], "feedback (class in pedal.core.feedback)": [[0, "pedal.core.feedback.Feedback"]], "feedbackcategory (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackCategory"]], "feedbackkind (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackKind"]], "feedbackresponse (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackResponse"]], "hint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.HINT"]], "instructions (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTIONS"]], "instructor (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTOR"]], "kinds (feedback attribute)": [[0, "pedal.core.commands.Feedback.KINDS"], [0, "pedal.core.feedback.Feedback.KINDS"]], "location (class in pedal.core.location)": [[0, "pedal.core.location.Location"]], "main_report (in module pedal.core.report)": [[0, "pedal.core.report.MAIN_REPORT"]], "metacognitive (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.METACOGNITIVE"]], "misconception (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISCONCEPTION"]], "mistake (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISTAKE"]], "mistakes (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.MISTAKES"]], "positive (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.POSITIVE"]], "runtime (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.RUNTIME"]], "report (class in pedal.core.report)": [[0, "pedal.core.report.Report"]], "specification (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SPECIFICATION"]], "student (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STUDENT"]], "style (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STYLE"]], "syntax (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYNTAX"]], "system (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYSTEM"]], "submission (class in pedal.core.submission)": [[0, "pedal.core.submission.Submission"]], "tools (report attribute)": [[0, "pedal.core.report.Report.TOOLS"]], "toolregistration (class in pedal.core.tool)": [[0, "pedal.core.tool.ToolRegistration"]], "unknown (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.UNKNOWN"]], "_tool_data (report attribute)": [[0, "pedal.core.report.Report._tool_data"]], "activate (feedback attribute)": [[0, "pedal.core.commands.Feedback.activate"], [0, "pedal.core.feedback.Feedback.activate"]], "add_class_hook() (report class method)": [[0, "pedal.core.report.Report.add_class_hook"]], "add_feedback() (report method)": [[0, "pedal.core.report.Report.add_feedback"]], "add_hook() (report method)": [[0, "pedal.core.report.Report.add_hook"]], "add_ignored_feedback() (report method)": [[0, "pedal.core.report.Report.add_ignored_feedback"]], "assignment (submission attribute)": [[0, "pedal.core.submission.Submission.assignment"]], "author (feedback attribute)": [[0, "pedal.core.commands.Feedback.author"], [0, "pedal.core.feedback.Feedback.author"]], "category (feedback attribute)": [[0, "pedal.core.commands.Feedback.category"], [0, "pedal.core.feedback.Feedback.category"]], "clear() (report method)": [[0, "pedal.core.report.Report.clear"]], "clear_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.clear_report"]], "col (location attribute)": [[0, "pedal.core.location.Location.col"]], "compliment (class in pedal.core.commands)": [[0, "pedal.core.commands.compliment"]], "condition() (feedback method)": [[0, "pedal.core.commands.Feedback.condition"], [0, "pedal.core.feedback.Feedback.condition"]], "contextualize() (report method)": [[0, "pedal.core.report.Report.contextualize"]], "contextualize_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.contextualize_report"]], "correct (feedback attribute)": [[0, "pedal.core.commands.Feedback.correct"], [0, "pedal.core.feedback.Feedback.correct"]], "course (submission attribute)": [[0, "pedal.core.submission.Submission.course"]], "debug() (in module pedal.core.commands)": [[0, "pedal.core.commands.debug"]], "else_message (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message"], [0, "pedal.core.feedback.Feedback.else_message"]], "end_col (location attribute)": [[0, "pedal.core.location.Location.end_col"]], "end_line (location attribute)": [[0, "pedal.core.location.Location.end_line"]], "execute_hooks() (report method)": [[0, "pedal.core.report.Report.execute_hooks"]], "execution (submission attribute)": [[0, "pedal.core.submission.Submission.execution"]], "explain (class in pedal.core.commands)": [[0, "pedal.core.commands.explain"]], "feedback (report attribute)": [[0, "pedal.core.report.Report.feedback"]], "feedback (in module pedal.core.commands)": [[0, "pedal.core.commands.feedback"]], "fields (feedback attribute)": [[0, "pedal.core.commands.Feedback.fields"], [0, "pedal.core.feedback.Feedback.fields"]], "filename (location attribute)": [[0, "pedal.core.location.Location.filename"]], "files (submission attribute)": [[0, "pedal.core.submission.Submission.files"]], "from_ast() (location class method)": [[0, "pedal.core.location.Location.from_ast"]], "full_clear() (report method)": [[0, "pedal.core.report.Report.full_clear"]], "gently (class in pedal.core.commands)": [[0, "pedal.core.commands.gently"]], "get_all_feedback() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_all_feedback"]], "get_files_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_files_lines"]], "get_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_lines"]], "get_submission() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_submission"]], "give_partial (class in pedal.core.commands)": [[0, "pedal.core.commands.give_partial"]], "group (report attribute)": [[0, "pedal.core.report.Report.group"]], "group_names (report attribute)": [[0, "pedal.core.report.Report.group_names"]], "guidance (class in pedal.core.commands)": [[0, "pedal.core.commands.guidance"]], "hiddens (report attribute)": [[0, "pedal.core.report.Report.hiddens"]], "hide_correctness() (report method)": [[0, "pedal.core.report.Report.hide_correctness"]], "hide_correctness() (in module pedal.core.commands)": [[0, "pedal.core.commands.hide_correctness"]], "hooks (report attribute)": [[0, "pedal.core.report.Report.hooks"]], "justification (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification"], [0, "pedal.core.feedback.Feedback.justification"]], "justification_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification_template"], [0, "pedal.core.feedback.Feedback.justification_template"]], "kind (feedback attribute)": [[0, "pedal.core.commands.Feedback.kind"], [0, "pedal.core.feedback.Feedback.kind"]], "label (feedback attribute)": [[0, "pedal.core.commands.Feedback.label"], [0, "pedal.core.feedback.Feedback.label"]], "line (location attribute)": [[0, "pedal.core.location.Location.line"]], "location (feedback attribute)": [[0, "pedal.core.commands.Feedback.location"], [0, "pedal.core.feedback.Feedback.location"]], "log() (in module pedal.core.commands)": [[0, "pedal.core.commands.log"]], "main_code (submission attribute)": [[0, "pedal.core.submission.Submission.main_code"]], "main_file (submission attribute)": [[0, "pedal.core.submission.Submission.main_file"]], "message (feedback attribute)": [[0, "pedal.core.commands.Feedback.message"], [0, "pedal.core.feedback.Feedback.message"]], "message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.message_template"], [0, "pedal.core.feedback.Feedback.message_template"]], "module": [[0, "module-pedal.core.commands"], [0, "module-pedal.core.environment"], [0, "module-pedal.core.feedback"], [0, "module-pedal.core.location"], [0, "module-pedal.core.report"], [0, "module-pedal.core.submission"], [0, "module-pedal.core.tool"], [5, "module-pedal.assertions"], [5, "module-pedal.assertions.commands"], [5, "module-pedal.assertions.runtime"], [5, "module-pedal.assertions.static"], [6, "module-pedal.cait"], [6, "module-pedal.cait.cait_api"], [6, "module-pedal.cait.find_node"], [7, "module-pedal.extensions.plotting"], [7, "module-pedal.extensions.turtles"], [8, "module-pedal.questions.setup"], [9, "module-pedal.sandbox"], [9, "module-pedal.sandbox.commands"], [9, "module-pedal.sandbox.feedbacks"], [9, "module-pedal.sandbox.sandbox"], [10, "module-pedal.source.source"], [11, "module-pedal.tifa"]], "muted (feedback attribute)": [[0, "pedal.core.commands.Feedback.muted"], [0, "pedal.core.feedback.Feedback.muted"]], "name (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.name"]], "parent (feedback attribute)": [[0, "pedal.core.commands.Feedback.parent"], [0, "pedal.core.feedback.Feedback.parent"]], "pedal.core.commands": [[0, "module-pedal.core.commands"]], "pedal.core.environment": [[0, "module-pedal.core.environment"]], "pedal.core.feedback": [[0, "module-pedal.core.feedback"]], "pedal.core.location": [[0, "module-pedal.core.location"]], "pedal.core.report": [[0, "module-pedal.core.report"]], "pedal.core.submission": [[0, "module-pedal.core.submission"]], "pedal.core.tool": [[0, "module-pedal.core.tool"]], "priority (feedback attribute)": [[0, "pedal.core.commands.Feedback.priority"], [0, "pedal.core.feedback.Feedback.priority"]], "register_tool() (report class method)": [[0, "pedal.core.report.Report.register_tool"]], "replace_main() (submission method)": [[0, "pedal.core.submission.Submission.replace_main"]], "report (feedback attribute)": [[0, "pedal.core.commands.Feedback.report"], [0, "pedal.core.feedback.Feedback.report"]], "reset (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.reset"]], "resolves (report attribute)": [[0, "pedal.core.report.Report.resolves"]], "result (report attribute)": [[0, "pedal.core.report.Report.result"]], "score (feedback attribute)": [[0, "pedal.core.commands.Feedback.score"], [0, "pedal.core.feedback.Feedback.score"]], "set_formatter() (report method)": [[0, "pedal.core.report.Report.set_formatter"]], "set_line_offset() (submission method)": [[0, "pedal.core.submission.Submission.set_line_offset"]], "set_success (class in pedal.core.commands)": [[0, "pedal.core.commands.set_success"]], "stop_group() (report method)": [[0, "pedal.core.report.Report.stop_group"]], "submission (report attribute)": [[0, "pedal.core.report.Report.submission"]], "suppress() (report method)": [[0, "pedal.core.report.Report.suppress"]], "suppress() (in module pedal.core.commands)": [[0, "pedal.core.commands.suppress"]], "suppressions (report attribute)": [[0, "pedal.core.report.Report.suppressions"]], "system_error (class in pedal.core.commands)": [[0, "pedal.core.commands.system_error"]], "tags (feedback attribute)": [[0, "pedal.core.commands.Feedback.tags"], [0, "pedal.core.feedback.Feedback.tags"]], "title (feedback attribute)": [[0, "pedal.core.commands.Feedback.title"], [0, "pedal.core.feedback.Feedback.title"]], "to_json() (location method)": [[0, "pedal.core.location.Location.to_json"]], "tool (feedback attribute)": [[0, "pedal.core.commands.Feedback.tool"], [0, "pedal.core.feedback.Feedback.tool"]], "unscored (feedback attribute)": [[0, "pedal.core.commands.Feedback.unscored"], [0, "pedal.core.feedback.Feedback.unscored"]], "update_location() (feedback method)": [[0, "pedal.core.commands.Feedback.update_location"], [0, "pedal.core.feedback.Feedback.update_location"]], "user (submission attribute)": [[0, "pedal.core.submission.Submission.user"]], "valence (feedback attribute)": [[0, "pedal.core.commands.Feedback.valence"], [0, "pedal.core.feedback.Feedback.valence"]], "version (feedback attribute)": [[0, "pedal.core.commands.Feedback.version"], [0, "pedal.core.feedback.Feedback.version"]], "assertalmostequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertAlmostEqual"]], "assertequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertEqual"]], "assertfalse (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertFalse"]], "assertgreater (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertGreater"]], "assertgreaterequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertGreaterEqual"]], "asserthasattr (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertHasAttr"]], "asserthasfunction (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertHasFunction"]], "asserthasvariable (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertHasVariable"]], "assertin (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIn"]], "assertis (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIs"]], "assertisinstance (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIsInstance"]], "assertisnone (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIsNone"]], "assertisnot (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIsNot"]], "assertisnotinstance (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIsNotInstance"]], "assertisnotnone (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertIsNotNone"]], "assertlengthequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthEqual"]], "assertlengthgreater (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthGreater"]], "assertlengthgreaterequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthGreaterEqual"]], "assertlengthless (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthLess"]], "assertlengthlessequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthLessEqual"]], "assertlengthnotequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLengthNotEqual"]], "assertless (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLess"]], "assertlessequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertLessEqual"]], "assertnotalmostequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotAlmostEqual"]], "assertnotequal (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotEqual"]], "assertnotin (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotIn"]], "assertnotoutput (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotOutput"]], "assertnotoutputcontains (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotOutputContains"]], "assertnotregex (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotRegex"]], "assertnottype (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertNotType"]], "assertoutput (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertOutput"]], "assertoutputcontains (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertOutputContains"]], "assertprints (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertPrints"]], "assertregex (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertRegex"]], "asserttrue (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertTrue"]], "asserttype (in module pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assertType"]], "assert_almost_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_almost_equal"]], "assert_contains_subset (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_contains_subset"]], "assert_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_equal"]], "assert_false (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_false"]], "assert_greater (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_greater"]], "assert_greater_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_greater_equal"]], "assert_has_attr (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_has_attr"]], "assert_has_function (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_has_function"]], "assert_has_variable (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_has_variable"]], "assert_in (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_in"]], "assert_is (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is"]], "assert_is_dataclass (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_dataclass"]], "assert_is_instance (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_instance"]], "assert_is_none (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_none"]], "assert_is_not (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_not"]], "assert_is_not_dataclass (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_not_dataclass"]], "assert_is_not_none (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_is_not_none"]], "assert_length_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_equal"]], "assert_length_greater (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_greater"]], "assert_length_greater_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_greater_equal"]], "assert_length_less (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_less"]], "assert_length_less_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_less_equal"]], "assert_length_not_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_length_not_equal"]], "assert_less (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_less"]], "assert_less_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_less_equal"]], "assert_not_almost_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_almost_equal"]], "assert_not_contains_subset (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_contains_subset"]], "assert_not_equal (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_equal"]], "assert_not_in (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_in"]], "assert_not_is_instance (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_is_instance"]], "assert_not_output (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_output"]], "assert_not_output_contains (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_output_contains"]], "assert_not_regex (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_regex"]], "assert_not_type (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_not_type"]], "assert_output (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_output"]], "assert_output_contains (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_output_contains"]], "assert_prints (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_prints"]], "assert_regex (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_regex"]], "assert_true (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_true"]], "assert_type (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.assert_type"]], "check_dataclass_error (class in pedal.assertions.commands)": [[5, "pedal.assertions.commands.check_dataclass_error"]], "condition() (assert_contains_subset method)": [[5, "pedal.assertions.runtime.assert_contains_subset.condition"]], "condition() (assert_equal method)": [[5, "pedal.assertions.runtime.assert_equal.condition"]], "condition() (assert_false method)": [[5, "pedal.assertions.runtime.assert_false.condition"]], "condition() (assert_greater method)": [[5, "pedal.assertions.runtime.assert_greater.condition"]], "condition() (assert_greater_equal method)": [[5, "pedal.assertions.runtime.assert_greater_equal.condition"]], "condition() (assert_has_attr method)": [[5, "pedal.assertions.runtime.assert_has_attr.condition"]], "condition() (assert_has_function method)": [[5, "pedal.assertions.runtime.assert_has_function.condition"]], "condition() (assert_has_variable method)": [[5, "pedal.assertions.runtime.assert_has_variable.condition"]], "condition() (assert_in method)": [[5, "pedal.assertions.runtime.assert_in.condition"]], "condition() (assert_is method)": [[5, "pedal.assertions.runtime.assert_is.condition"]], "condition() (assert_is_dataclass method)": [[5, "pedal.assertions.runtime.assert_is_dataclass.condition"]], "condition() (assert_is_instance method)": [[5, "pedal.assertions.runtime.assert_is_instance.condition"]], "condition() (assert_is_none method)": [[5, "pedal.assertions.runtime.assert_is_none.condition"]], "condition() (assert_is_not method)": [[5, "pedal.assertions.runtime.assert_is_not.condition"]], "condition() (assert_is_not_dataclass method)": [[5, "pedal.assertions.runtime.assert_is_not_dataclass.condition"]], "condition() (assert_is_not_none method)": [[5, "pedal.assertions.runtime.assert_is_not_none.condition"]], "condition() (assert_length_equal method)": [[5, "pedal.assertions.runtime.assert_length_equal.condition"]], "condition() (assert_length_greater method)": [[5, "pedal.assertions.runtime.assert_length_greater.condition"]], "condition() (assert_length_greater_equal method)": [[5, "pedal.assertions.runtime.assert_length_greater_equal.condition"]], "condition() (assert_length_less method)": [[5, "pedal.assertions.runtime.assert_length_less.condition"]], "condition() (assert_length_less_equal method)": [[5, "pedal.assertions.runtime.assert_length_less_equal.condition"]], "condition() (assert_length_not_equal method)": [[5, "pedal.assertions.runtime.assert_length_not_equal.condition"]], "condition() (assert_less method)": [[5, "pedal.assertions.runtime.assert_less.condition"]], "condition() (assert_less_equal method)": [[5, "pedal.assertions.runtime.assert_less_equal.condition"]], "condition() (assert_not_contains_subset method)": [[5, "pedal.assertions.runtime.assert_not_contains_subset.condition"]], "condition() (assert_not_equal method)": [[5, "pedal.assertions.runtime.assert_not_equal.condition"]], "condition() (assert_not_in method)": [[5, "pedal.assertions.runtime.assert_not_in.condition"]], "condition() (assert_not_is_instance method)": [[5, "pedal.assertions.runtime.assert_not_is_instance.condition"]], "condition() (assert_not_output method)": [[5, "pedal.assertions.runtime.assert_not_output.condition"]], "condition() (assert_not_output_contains method)": [[5, "pedal.assertions.runtime.assert_not_output_contains.condition"]], "condition() (assert_not_regex method)": [[5, "pedal.assertions.runtime.assert_not_regex.condition"]], "condition() (assert_not_type method)": [[5, "pedal.assertions.runtime.assert_not_type.condition"]], "condition() (assert_output method)": [[5, "pedal.assertions.runtime.assert_output.condition"]], "condition() (assert_output_contains method)": [[5, "pedal.assertions.runtime.assert_output_contains.condition"]], "condition() (assert_regex method)": [[5, "pedal.assertions.runtime.assert_regex.condition"]], "condition() (assert_true method)": [[5, "pedal.assertions.runtime.assert_true.condition"]], "condition() (ensure_ast method)": [[5, "pedal.assertions.static.ensure_ast.condition"]], "condition() (ensure_called_uniquely method)": [[5, "pedal.assertions.runtime.ensure_called_uniquely.condition"]], "condition() (ensure_coverage method)": [[5, "pedal.assertions.runtime.ensure_coverage.condition"]], "condition() (ensure_documented_functions method)": [[5, "pedal.assertions.static.ensure_documented_functions.condition"]], "condition() (ensure_function_call method)": [[5, "pedal.assertions.static.ensure_function_call.condition"]], "condition() (ensure_import method)": [[5, "pedal.assertions.static.ensure_import.condition"]], "condition() (ensure_literal method)": [[5, "pedal.assertions.static.ensure_literal.condition"]], "condition() (ensure_literal_type method)": [[5, "pedal.assertions.static.ensure_literal_type.condition"]], "condition() (ensure_operation method)": [[5, "pedal.assertions.static.ensure_operation.condition"]], "condition() (ensure_starting_code method)": [[5, "pedal.assertions.static.ensure_starting_code.condition"]], "condition() (prevent_ast method)": [[5, "pedal.assertions.static.prevent_ast.condition"]], "condition() (prevent_embedded_answer method)": [[5, "pedal.assertions.static.prevent_embedded_answer.condition"]], "condition() (prevent_function_call method)": [[5, "pedal.assertions.static.prevent_function_call.condition"]], "condition() (prevent_import method)": [[5, "pedal.assertions.static.prevent_import.condition"]], "condition() (prevent_literal method)": [[5, "pedal.assertions.static.prevent_literal.condition"]], "condition() (prevent_literal_type method)": [[5, "pedal.assertions.static.prevent_literal_type.condition"]], "condition() (prevent_operation method)": [[5, "pedal.assertions.static.prevent_operation.condition"]], "condition() (wheat_chaff_game_class method)": [[5, "pedal.assertions.commands.wheat_chaff_game_class.condition"]], "ensure_ast (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_ast"]], "ensure_called_uniquely (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.ensure_called_uniquely"]], "ensure_coverage (class in pedal.assertions.runtime)": [[5, "pedal.assertions.runtime.ensure_coverage"]], "ensure_dataclass() (in module pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_dataclass"]], "ensure_documented_functions (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_documented_functions"]], "ensure_function() (in module pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_function"]], "ensure_function_call (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_function_call"]], "ensure_import (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_import"]], "ensure_literal (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_literal"]], "ensure_literal_type (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_literal_type"]], "ensure_operation (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_operation"]], "ensure_operator (in module pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_operator"]], "ensure_prints_exactly() (in module pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_prints_exactly"]], "ensure_starting_code (class in pedal.assertions.static)": [[5, "pedal.assertions.static.ensure_starting_code"]], "format_assertion() (assert_has_function method)": [[5, "pedal.assertions.runtime.assert_has_function.format_assertion"]], "format_assertion() (assert_has_variable method)": [[5, "pedal.assertions.runtime.assert_has_variable.format_assertion"]], "function_prints() (in module pedal.assertions.static)": [[5, "pedal.assertions.static.function_prints"]], "has_import() (in module pedal.assertions.static)": [[5, "pedal.assertions.static.has_import"]], "pedal.assertions": [[5, "module-pedal.assertions"]], "pedal.assertions.commands": [[5, "module-pedal.assertions.commands"]], "pedal.assertions.runtime": [[5, "module-pedal.assertions.runtime"]], "pedal.assertions.static": [[5, "module-pedal.assertions.static"]], "prevent_ast (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_ast"]], "prevent_embedded_answer (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_embedded_answer"]], "prevent_function_call (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_function_call"]], "prevent_import (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_import"]], "prevent_literal (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_literal"]], "prevent_literal_type (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_literal_type"]], "prevent_operation (class in pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_operation"]], "prevent_operator (in module pedal.assertions.static)": [[5, "pedal.assertions.static.prevent_operator"]], "reset() (in module pedal.assertions)": [[5, "pedal.assertions.reset"]], "unit_test() (in module pedal.assertions.commands)": [[5, "pedal.assertions.commands.unit_test"]], "wheat_chaff_game_class (class in pedal.assertions.commands)": [[5, "pedal.assertions.commands.wheat_chaff_game_class"]], "caitexception": [[6, "pedal.cait.cait_api.CaitException"]], "data_state() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.data_state"]], "data_type() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.data_type"]], "def_use_error() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.def_use_error"]], "expire_cait_cache() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.expire_cait_cache"]], "find_asts() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.find_asts"]], "find_expr_sub_matches() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.find_expr_sub_matches"]], "find_function_calls() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.find_function_calls"]], "find_function_definition() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.find_function_definition"]], "find_match() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.find_match"]], "find_matches() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.find_matches"]], "find_operation() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.find_operation"]], "find_prior_initializations() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.find_prior_initializations"]], "find_submatches() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.find_submatches"]], "function_is_called() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.function_is_called"]], "is_top_level() (in module pedal.cait.find_node)": [[6, "pedal.cait.find_node.is_top_level"]], "parse_program() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.parse_program"]], "pedal.cait": [[6, "module-pedal.cait"]], "pedal.cait.cait_api": [[6, "module-pedal.cait.cait_api"]], "pedal.cait.find_node": [[6, "module-pedal.cait.find_node"]], "reparse_if_needed() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.reparse_if_needed"]], "require_tifa() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.require_tifa"]], "reset() (in module pedal.cait.cait_api)": [[6, "pedal.cait.cait_api.reset"]], "badgraphfeedback (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.BadGraphFeedback"]], "assert_plot() (in module pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.assert_plot"]], "compare_data() (in module pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.compare_data"]], "condition() (ensure_show method)": [[7, "pedal.extensions.plotting.ensure_show.condition"]], "condition() (plt_rename_err method)": [[7, "pedal.extensions.plotting.plt_rename_err.condition"]], "condition() (plt_wrong_import method)": [[7, "pedal.extensions.plotting.plt_wrong_import.condition"]], "ensure_correct_plot() (in module pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.ensure_correct_plot"]], "ensure_show (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.ensure_show"]], "get_plots() (in module pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.get_plots"]], "no_plt (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.no_plt"]], "other_plt (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.other_plt"]], "pedal.extensions.plotting": [[7, "module-pedal.extensions.plotting"]], "pedal.extensions.turtles": [[7, "module-pedal.extensions.turtles"]], "plt_rename_err (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.plt_rename_err"]], "plt_wrong_import (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.plt_wrong_import"]], "prevent_incorrect_plt() (in module pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.prevent_incorrect_plt"]], "wrong_plt_data (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.wrong_plt_data"]], "wrong_plt_type (class in pedal.extensions.plotting)": [[7, "pedal.extensions.plotting.wrong_plt_type"]], "pedal.questions.setup": [[8, "module-pedal.questions.setup"]], "reset() (in module pedal.questions.setup)": [[8, "pedal.questions.setup.reset"]], "set_seed() (in module pedal.questions.setup)": [[8, "pedal.questions.setup.set_seed"]], "commandblock (class in pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.CommandBlock"]], "maximum_temporary_length (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.MAXIMUM_TEMPORARY_LENGTH"]], "sandbox (class in pedal.sandbox.sandbox)": [[9, "pedal.sandbox.sandbox.Sandbox"]], "_context (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox._context"]], "_current_patches (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox._current_patches"]], "_next_context_id (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox._next_context_id"]], "allow_function() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.allow_function"]], "allow_module() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.allow_module"]], "allow_module() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.allow_module"]], "allowed_time (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.allowed_time"]], "append_output() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.append_output"]], "attribute_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.attribute_error"]], "block_function() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.block_function"]], "block_module() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.block_module"]], "block_module() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.block_module"]], "call() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.call"]], "call() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.call"]], "check_coverage() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.check_coverage"]], "clear() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear"]], "clear_context() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_context"]], "clear_exception() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_exception"]], "clear_input() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_input"]], "clear_input() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.clear_input"]], "clear_mocks() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_mocks"]], "clear_mocks() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.clear_mocks"]], "clear_output() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_output"]], "clear_output() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.clear_output"]], "clear_sandbox() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.clear_sandbox"]], "clear_student_data() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.clear_student_data"]], "clear_tracer() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.clear_tracer"]], "context (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.context"]], "count_unique_calls() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.count_unique_calls"]], "data (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.data"]], "evaluate() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.evaluate"]], "evaluate() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.evaluate"]], "exception (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.exception"]], "exception (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.exception"]], "exception_message (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.exception_message"]], "exception_name (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.exception_name"]], "feedback (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.feedback"]], "functions (sandbox property)": [[9, "pedal.sandbox.sandbox.Sandbox.functions"]], "get_call_arguments() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_call_arguments"]], "get_context() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.get_context"]], "get_exception() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_exception"]], "get_input() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_input"]], "get_module() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_module"]], "get_names_by_type() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.get_names_by_type"]], "get_output() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_output"]], "get_sandbox() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_sandbox"]], "get_student_data() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_student_data"]], "get_trace() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.get_trace"]], "get_values_by_type() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.get_values_by_type"]], "get_variables_by_type() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.get_variables_by_type"]], "import_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.import_error"]], "indentation_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.indentation_error"]], "index_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.index_error"]], "inputs (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.inputs"]], "io_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.io_error"]], "key_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.key_error"]], "make_safe_variable() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.make_safe_variable"]], "memory_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.memory_error"]], "mock_function() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.mock_function"]], "mock_module() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.mock_module"]], "mock_module() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.mock_module"]], "name_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.name_error"]], "output (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.output"]], "pedal.sandbox": [[9, "module-pedal.sandbox"]], "pedal.sandbox.commands": [[9, "module-pedal.sandbox.commands"]], "pedal.sandbox.feedbacks": [[9, "module-pedal.sandbox.feedbacks"]], "pedal.sandbox.sandbox": [[9, "module-pedal.sandbox.sandbox"]], "plots (sandbox.modules attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.modules.plots"]], "queue_input() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.queue_input"]], "raw_output (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.raw_output"]], "reset() (in module pedal.sandbox)": [[9, "pedal.sandbox.reset"]], "reset_default_overrides() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.reset_default_overrides"]], "reset_output() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.reset_output"]], "result (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.result"]], "run() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.run"]], "run() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.run"]], "runtime_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.runtime_error"]], "set_input() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.set_input"]], "set_input() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.set_input"]], "set_student_data() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.set_student_data"]], "start_grouping_context() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.start_grouping_context"]], "start_trace() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.start_trace"]], "stop_grouping_context() (sandbox method)": [[9, "pedal.sandbox.sandbox.Sandbox.stop_grouping_context"]], "stop_trace() (in module pedal.sandbox.commands)": [[9, "pedal.sandbox.commands.stop_trace"]], "target (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.target"]], "timeout_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.timeout_error"]], "traceback (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.traceback"]], "traceback_message (runtime_error attribute)": [[9, "pedal.sandbox.feedbacks.runtime_error.traceback_message"]], "tracer_style (sandbox attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.tracer_style"]], "turtles (sandbox.modules attribute)": [[9, "pedal.sandbox.sandbox.Sandbox.modules.turtles"]], "type_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.type_error"]], "value_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.value_error"]], "var (sandbox property)": [[9, "pedal.sandbox.sandbox.Sandbox.var"]], "zero_division_error (class in pedal.sandbox.feedbacks)": [[9, "pedal.sandbox.feedbacks.zero_division_error"]], "get_original_program() (in module pedal.source.source)": [[10, "pedal.source.source.get_original_program"]], "get_program() (in module pedal.source.source)": [[10, "pedal.source.source.get_program"]], "pedal.source.source": [[10, "module-pedal.source.source"]], "reset() (in module pedal.source.source)": [[10, "pedal.source.source.reset"]], "restore_code() (in module pedal.source.source)": [[10, "pedal.source.source.restore_code"]], "set_source() (in module pedal.source.source)": [[10, "pedal.source.source.set_source"]], "set_source_file() (in module pedal.source.source)": [[10, "pedal.source.source.set_source_file"]], "verify() (in module pedal.source.source)": [[10, "pedal.source.source.verify"]], "verify_section() (in module pedal.source.source)": [[10, "pedal.source.source.verify_section"]], "error": [[11, "term-Error"]], "fully qualified name": [[11, "term-Fully-Qualified-Name"]], "identifier": [[11, "term-Identifier"]], "issue": [[11, "term-Issue"]], "literal": [[11, "term-Literal"]], "name": [[11, "term-Name"]], "name map": [[11, "term-Name-Map"]], "path": [[11, "term-Path"]], "scope": [[11, "term-Scope"]], "scope chain": [[11, "term-Scope-Chain"]], "state": [[11, "term-State"]], "tifa (class in pedal.tifa)": [[11, "pedal.tifa.Tifa"]], "type": [[11, "term-Type"]], "assign_target() (tifa method)": [[11, "pedal.tifa.Tifa.assign_target"]], "pedal.tifa": [[11, "module-pedal.tifa"]], "process_ast() (tifa method)": [[11, "pedal.tifa.Tifa.process_ast"]], "process_code() (tifa method)": [[11, "pedal.tifa.Tifa.process_code"]], "tifa_analysis() (in module pedal.tifa)": [[11, "pedal.tifa.tifa_analysis"]], "visit() (tifa method)": [[11, "pedal.tifa.Tifa.visit"]], "visit_annassign() (tifa method)": [[11, "pedal.tifa.Tifa.visit_AnnAssign"]], "visit_assign() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Assign"]], "visit_attribute() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Attribute"]], "visit_augassign() (tifa method)": [[11, "pedal.tifa.Tifa.visit_AugAssign"]], "visit_binop() (tifa method)": [[11, "pedal.tifa.Tifa.visit_BinOp"]], "visit_bool() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Bool"]], "visit_boolop() (tifa method)": [[11, "pedal.tifa.Tifa.visit_BoolOp"]], "visit_classdef() (tifa method)": [[11, "pedal.tifa.Tifa.visit_ClassDef"]], "visit_compare() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Compare"]], "visit_constant() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Constant"]], "visit_dict() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Dict"]], "visit_dictcomp() (tifa method)": [[11, "pedal.tifa.Tifa.visit_DictComp"]], "visit_expr() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Expr"]], "visit_for() (tifa method)": [[11, "pedal.tifa.Tifa.visit_For"]], "visit_functiondef() (tifa method)": [[11, "pedal.tifa.Tifa.visit_FunctionDef"]], "visit_generatorexp() (tifa method)": [[11, "pedal.tifa.Tifa.visit_GeneratorExp"]], "visit_if() (tifa method)": [[11, "pedal.tifa.Tifa.visit_If"]], "visit_ifexp() (tifa method)": [[11, "pedal.tifa.Tifa.visit_IfExp"]], "visit_import() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Import"]], "visit_importfrom() (tifa method)": [[11, "pedal.tifa.Tifa.visit_ImportFrom"]], "visit_lambda() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Lambda"]], "visit_list() (tifa method)": [[11, "pedal.tifa.Tifa.visit_List"]], "visit_listcomp() (tifa method)": [[11, "pedal.tifa.Tifa.visit_ListComp"]], "visit_name() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Name"]], "visit_nameconstant() (tifa method)": [[11, "pedal.tifa.Tifa.visit_NameConstant"]], "visit_num() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Num"]], "visit_return() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Return"]], "visit_setcomp() (tifa method)": [[11, "pedal.tifa.Tifa.visit_SetComp"]], "visit_slice() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Slice"]], "visit_str() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Str"]], "visit_subscript() (tifa method)": [[11, "pedal.tifa.Tifa.visit_Subscript"]], "visit_unaryop() (tifa method)": [[11, "pedal.tifa.Tifa.visit_UnaryOp"]], "visit_while() (tifa method)": [[11, "pedal.tifa.Tifa.visit_While"]], "visit_with() (tifa method)": [[11, "pedal.tifa.Tifa.visit_With"]], "visit_comprehension() (tifa method)": [[11, "pedal.tifa.Tifa.visit_comprehension"]], "visit_statements() (tifa method)": [[11, "pedal.tifa.Tifa.visit_statements"]], "atomic feedback function": [[13, "term-Atomic-Feedback-Function"]], "composite feedback function": [[13, "term-Composite-Feedback-Function"]], "environment": [[13, "term-Environment"]], "feedback": [[13, "term-Feedback"]], "feedback category": [[13, "term-Feedback-Category"]], "feedback condition": [[13, "term-Feedback-Condition"]], "feedback function": [[13, "term-Feedback-Function"]], "feedback kind": [[13, "term-Feedback-Kind"]], "feedback label": [[13, "term-Feedback-Label"]], "feedback response": [[13, "term-Feedback-Response"]], "instructor control script": [[13, "term-Instructor-Control-Script"]], "main report": [[13, "term-Main-Report"]], "report": [[13, "term-Report"]], "resolver": [[13, "term-Resolver"]], "submission": [[13, "term-Submission"]], "tool": [[13, "term-Tool"]], "assert_equal()": [[24, "assert_equal"]], "built-in function": [[24, "assert_equal"], [24, "ensure_literal"], [24, "prevent_literal"], [26, "clear_report"], [26, "compliment"], [26, "contextualize_report"], [26, "debug"], [26, "explain"], [26, "gently"], [26, "get_all_feedback"], [26, "give_partial"], [26, "guidance"], [26, "hide_correctness"], [26, "log"], [26, "set_success"], [26, "suppress"], [27, "call"], [27, "run"], [27, "set_input"], [28, "check_section_exists"], [28, "get_program"], [28, "next_section"], [28, "restore_code"], [28, "separate_into_sections"], [28, "set_source"], [28, "stop_sections"], [28, "verify"], [29, "tifa_analysis"]], "ensure_literal()": [[24, "ensure_literal"]], "prevent_literal()": [[24, "prevent_literal"]], "clear_report()": [[26, "clear_report"]], "compliment()": [[26, "compliment"]], "contextualize_report()": [[26, "contextualize_report"]], "debug()": [[26, "debug"]], "explain()": [[26, "explain"]], "gently()": [[26, "gently"]], "get_all_feedback()": [[26, "get_all_feedback"]], "give_partial()": [[26, "give_partial"]], "guidance()": [[26, "guidance"]], "hide_correctness()": [[26, "hide_correctness"]], "log()": [[26, "log"]], "set_success()": [[26, "set_success"]], "suppress()": [[26, "suppress"]], "call()": [[27, "call"]], "run()": [[27, "run"]], "set_input()": [[27, "set_input"]], "check_section_exists()": [[28, "check_section_exists"]], "get_program()": [[28, "get_program"]], "next_section()": [[28, "next_section"]], "restore_code()": [[28, "restore_code"]], "separate_into_sections()": [[28, "separate_into_sections"]], "set_source()": [[28, "set_source"]], "stop_sections()": [[28, "stop_sections"]], "verify()": [[28, "verify"]], "tifa_analysis()": [[29, "tifa_analysis"]]}})