Search.setIndex({"alltitles": {"An Example": [[16, "an-example"]], "Architecture": [[16, "architecture"]], "Assertions": [[6, null]], "Autograder Integrations": [[21, null]], "Basic Arithmetic Question": [[20, "basic-arithmetic-question"]], "Basic Function Call Question": [[20, "basic-function-call-question"]], "Best Practices": [[22, null]], "BlockPy": [[21, "blockpy"]], "Built-in Functions": [[34, "built-in-functions"]], "CAIT": [[7, null], [25, null]], "Cait Report Data": [[7, "id1"]], "Calling Students\u2019 Functions": [[23, "calling-students-functions"]], "Checking Execution Results": [[23, "checking-execution-results"]], "Command Line Modes": [[19, "command-line-modes"]], "Command Line Parameters": [[19, "command-line-parameters"]], "Command Line Usage": [[23, "command-line-usage"]], "Command-Line Interface": [[19, null]], "Compatibility": [[15, "compatibility"]], "Compatiblity": [[4, "compatiblity"]], "Compilation": [[1, null]], "Compiling Pedal for Pyodide": [[1, "compiling-pedal-for-pyodide"]], "Compiling Pedal for Skulpt": [[1, "compiling-pedal-for-skulpt"]], "Complex Question": [[20, "complex-question"]], "Contact": [[13, null]], "Contents": [[5, null], [17, null], [24, null]], "Core Commands": [[0, "module-pedal.core.commands"], [26, null]], "Core Feedback Functions": [[23, "core-feedback-functions"]], "Creating a Feedback Function": [[3, "creating-a-feedback-function"]], "Critical Standard Libraries": [[4, "critical-standard-libraries"]], "Custom Environments": [[23, "custom-environments"]], "Developer API": [[0, null]], "Developer Tools Reference": [[5, null]], "Developers: Feedback Functions": [[3, null]], "Different Ways of Disabling Feedback": [[3, "different-ways-of-disabling-feedback"]], "Documenting Feedback": [[22, "documenting-feedback"]], "Environment": [[0, "module-pedal.core.environment"]], "Equivalent Names": [[29, "equivalent-names"]], "Extensions": [[8, null]], "Feedback": [[0, "module-pedal.core.feedback"]], "Feedback Function Concepts": [[3, "feedback-function-concepts"]], "Feedback Functions": [[27, null]], "File Formats": [[19, "file-formats"]], "Finding AST Patterns": [[23, "finding-ast-patterns"]], "Finding Data types": [[25, "finding-data-types"]], "Formatter": [[28, null]], "Generics": [[34, "generics"]], "GitHub": [[15, "github"]], "Glossary": [[14, null]], "GradeScope": [[21, "gradescope"]], "Important Concepts": [[0, "important-concepts"]], "Indices and tables": [[17, "indices-and-tables"]], "Installation": [[15, null]], "Instructor Control Scripts": [[23, "instructor-control-scripts"]], "Internal Naming Conventions": [[2, null]], "Introduction": [[16, null]], "JSON Type Hints": [[34, "json-type-hints"]], "Jupyter Notebooks": [[21, "jupyter-notebooks"]], "Large Project": [[20, "large-project"]], "List of Pedal Data Types": [[25, "list-of-pedal-data-types"]], "Location": [[0, "module-pedal.core.location"]], "Medium Project": [[20, "medium-project"]], "Methods of Feedback Functions": [[3, "methods-of-feedback-functions"]], "MicroPython": [[4, "micropython"]], "Named Arguments": [[19, "named-arguments"]], "Necessary Libraries": [[4, null]], "Non-Critical Standard Libraries": [[4, "non-critical-standard-libraries"]], "Objects": [[34, "objects"]], "Optional Third Party Libraries": [[4, "optional-third-party-libraries"]], "Other Assertions": [[23, "other-assertions"]], "Overriding Existing Feedback Functions": [[3, "overriding-existing-feedback-functions"]], "Pedal\u2019s Type System": [[34, null]], "Positional Arguments": [[19, "positional-arguments"]], "PyPi": [[15, "pypi"]], "Questions": [[9, null]], "Reference a function call": [[25, "reference-a-function-call"]], "Reference a function definition": [[25, "reference-a-function-definition"]], "Report": [[0, "module-pedal.core.report"]], "Researchers: Analyzing with Pedal": [[18, null]], "Resolver Feedback": [[23, "resolver-feedback"]], "Runtime Assertions": [[29, null]], "Sandbox": [[10, null], [30, null]], "Save and reference variable": [[25, "save-and-reference-variable"]], "Sections": [[31, "sections"]], "Simple Assertions": [[23, "simple-assertions"]], "Simple Unit Testing": [[23, "simple-unit-testing"]], "Skulpt": [[4, "skulpt"]], "Source": [[11, null], [31, null]], "Source Feedbacks": [[31, "source-feedbacks"]], "Source Report Data": [[11, "id2"]], "Static Assertions": [[32, null]], "Student Defined Function": [[20, "student-defined-function"]], "Submission": [[0, "module-pedal.core.submission"]], "Subtree matching": [[25, "subtree-matching"]], "TIFA": [[12, null], [33, null]], "Teacher Examples": [[20, null]], "Teacher Quick Start Guide": [[23, null]], "Teacher Reference": [[24, null]], "The Lifetime of a Feedback Function": [[3, "the-lifetime-of-a-feedback-function"]], "The Metadata of Feedback Functions": [[3, "the-metadata-of-feedback-functions"]], "Tools": [[0, "module-pedal.core.tool"]], "Use Novice-Friendly Language": [[22, "use-novice-friendly-language"]], "VPL": [[21, "vpl"]], "Web-CAT": [[21, "web-cat"]], "Welcome to Pedal\u2019s documentation!": [[17, null]], "Why Feedback Functions?": [[3, "why-feedback-functions"]]}, "docnames": ["developers/api", "developers/compilation", "developers/conventions", "developers/ffs", "developers/libraries", "developers/tools", "developers/tools/assertions", "developers/tools/cait", "developers/tools/extensions", "developers/tools/questions", "developers/tools/sandbox", "developers/tools/source", "developers/tools/tifa", "everyone/contact", "everyone/glossary", "everyone/installation", "everyone/introduction", "index", "teachers/analysis", "teachers/cli", "teachers/examples", "teachers/integrations", "teachers/practices", "teachers/quickstart", "teachers/reference", "teachers/tools/cait", "teachers/tools/core", "teachers/tools/ffs", "teachers/tools/formatter", "teachers/tools/runtime_assertions", "teachers/tools/sandbox", "teachers/tools/source", "teachers/tools/static_assertions", "teachers/tools/tifa", "teachers/tools/types"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["developers/api.rst", "developers/compilation.rst", "developers/conventions.rst", "developers/ffs.rst", "developers/libraries.rst", "developers/tools.rst", "developers/tools/assertions.rst", "developers/tools/cait.rst", "developers/tools/extensions.rst", "developers/tools/questions.rst", "developers/tools/sandbox.rst", "developers/tools/source.rst", "developers/tools/tifa.rst", "everyone/contact.rst", "everyone/glossary.rst", "everyone/installation.rst", "everyone/introduction.rst", "index.rst", "teachers/analysis.rst", "teachers/cli.rst", "teachers/examples.rst", "teachers/integrations.rst", "teachers/practices.rst", "teachers/quickstart.rst", "teachers/reference.rst", "teachers/tools/cait.rst", "teachers/tools/core.rst", "teachers/tools/ffs.rst", "teachers/tools/formatter.rst", "teachers/tools/runtime_assertions.rst", "teachers/tools/sandbox.rst", "teachers/tools/source.rst", "teachers/tools/static_assertions.rst", "teachers/tools/tifa.rst", "teachers/tools/types.rst"], "indexentries": {"_context (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._context", false]], "_current_patches (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._current_patches", false]], "_next_context_id (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._next_context_id", false]], "_tool_data (report attribute)": [[0, "pedal.core.report.Report._tool_data", false]], "activate": [[27, "activate", false]], "activate (feedback attribute)": [[0, "pedal.core.commands.Feedback.activate", false], [0, "pedal.core.feedback.Feedback.activate", false]], "add_class_hook() (report class method)": [[0, "pedal.core.report.Report.add_class_hook", false]], "add_feedback() (report method)": [[0, "pedal.core.report.Report.add_feedback", false]], "add_hook() (report method)": [[0, "pedal.core.report.Report.add_hook", false]], "add_ignored_feedback() (report method)": [[0, "pedal.core.report.Report.add_ignored_feedback", false]], "algorithmic (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.ALGORITHMIC", false], [0, "pedal.core.feedback_category.FeedbackCategory.ALGORITHMIC", false]], "allow_function()": [[30, "allow_function", false]], "allow_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_function", false]], "allow_module()": [[30, "allow_module", false]], "allow_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_module", false]], "allow_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.allow_module", false]], "allow_real_io()": [[30, "allow_real_io", false]], "allow_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_real_io", false]], "allowed_time (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.allowed_time", false]], "append_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.append_output", false]], "assert_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_almost_equal", false]], "assert_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_contains_subset", false]], "assert_contains_subset()": [[29, "assert_contains_subset", false]], "assert_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_equal", false]], "assert_equal()": [[29, "assert_equal", false]], "assert_false (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_false", false]], "assert_false()": [[29, "assert_false", false]], "assert_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater", false]], "assert_greater()": [[29, "assert_greater", false]], "assert_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater_equal", false]], "assert_greater_equal()": [[29, "assert_greater_equal", false]], "assert_has_attr (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_attr", false]], "assert_has_attr()": [[29, "assert_has_attr", false]], "assert_has_function (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_function", false]], "assert_has_function()": [[29, "assert_has_function", false]], "assert_has_variable (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_variable", false]], "assert_has_variable()": [[29, "assert_has_variable", false]], "assert_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_in", false]], "assert_in()": [[29, "assert_in", false]], "assert_is (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is", false]], "assert_is()": [[29, "assert_is", false]], "assert_is_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_dataclass", false]], "assert_is_dataclass()": [[29, "assert_is_dataclass", false]], "assert_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_instance", false]], "assert_is_instance()": [[29, "assert_is_instance", false]], "assert_is_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_none", false]], "assert_is_none()": [[29, "assert_is_none", false]], "assert_is_not (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not", false]], "assert_is_not()": [[29, "assert_is_not", false]], "assert_is_not_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass", false]], "assert_is_not_dataclass()": [[29, "assert_is_not_dataclass", false]], "assert_is_not_instance()": [[29, "assert_is_not_instance", false]], "assert_is_not_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_none", false]], "assert_is_not_none()": [[29, "assert_is_not_none", false]], "assert_length_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_equal", false]], "assert_length_equal()": [[29, "assert_length_equal", false]], "assert_length_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater", false]], "assert_length_greater()": [[29, "assert_length_greater", false]], "assert_length_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater_equal", false]], "assert_length_greater_equal()": [[29, "assert_length_greater_equal", false]], "assert_length_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less", false]], "assert_length_less()": [[29, "assert_length_less", false]], "assert_length_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less_equal", false]], "assert_length_less_equal()": [[29, "assert_length_less_equal", false]], "assert_length_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_not_equal", false]], "assert_length_not_equal()": [[29, "assert_length_not_equal", false]], "assert_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less", false]], "assert_less()": [[29, "assert_less", false]], "assert_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less_equal", false]], "assert_less_equal()": [[29, "assert_less_equal", false]], "assert_not_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_almost_equal", false]], "assert_not_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_contains_subset", false]], "assert_not_contains_subset()": [[29, "assert_not_contains_subset", false]], "assert_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_equal", false]], "assert_not_equal()": [[29, "assert_not_equal", false]], "assert_not_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_in", false]], "assert_not_in()": [[29, "assert_not_in", false]], "assert_not_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_is_instance", false]], "assert_not_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output", false]], "assert_not_output()": [[29, "assert_not_output", false]], "assert_not_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output_contains", false]], "assert_not_output_contains()": [[29, "assert_not_output_contains", false]], "assert_not_output_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output_regex", false]], "assert_not_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_regex", false]], "assert_not_regex()": [[29, "assert_not_regex", false]], "assert_not_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_type", false]], "assert_not_type()": [[29, "assert_not_type", false]], "assert_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output", false]], "assert_output()": [[29, "assert_output", false]], "assert_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output_contains", false]], "assert_output_contains()": [[29, "assert_output_contains", false]], "assert_output_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output_regex", false]], "assert_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.assert_plot", false]], "assert_prints (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_prints", false]], "assert_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_regex", false]], "assert_regex()": [[29, "assert_regex", false]], "assert_true (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_true", false]], "assert_true()": [[29, "assert_true", false]], "assert_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_type", false]], "assert_type()": [[29, "assert_type", false]], "assertalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertAlmostEqual", false]], "assertequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertEqual", false]], "assertfalse (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertFalse", false]], "assertgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreater", false]], "assertgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreaterEqual", false]], "asserthasattr (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasAttr", false]], "asserthasfunction (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasFunction", false]], "asserthasvariable (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasVariable", false]], "assertin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIn", false]], "assertis (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIs", false]], "assertisinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsInstance", false]], "assertisnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNone", false]], "assertisnot (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNot", false]], "assertisnotinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotInstance", false]], "assertisnotnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotNone", false]], "assertlengthequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthEqual", false]], "assertlengthgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreater", false]], "assertlengthgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreaterEqual", false]], "assertlengthless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLess", false]], "assertlengthlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLessEqual", false]], "assertlengthnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthNotEqual", false]], "assertless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLess", false]], "assertlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLessEqual", false]], "assertnotalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotAlmostEqual", false]], "assertnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotEqual", false]], "assertnotin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotIn", false]], "assertnotoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutput", false]], "assertnotoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutputContains", false]], "assertnotregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotRegex", false]], "assertnottype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotType", false]], "assertoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutput", false]], "assertoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutputContains", false]], "assertprints (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertPrints", false]], "assertregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertRegex", false]], "asserttrue (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertTrue", false]], "asserttype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertType", false]], "assign_target() (tifa method)": [[12, "pedal.tifa.Tifa.assign_target", false]], "assignment (submission attribute)": [[0, "pedal.core.submission.Submission.assignment", false]], "atomic feedback function": [[14, "term-Atomic-Feedback-Function", true]], "attribute_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.attribute_error", false]], "author (feedback attribute)": [[0, "pedal.core.commands.Feedback.author", false], [0, "pedal.core.feedback.Feedback.author", false]], "badgraphfeedback (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.BadGraphFeedback", false]], "block_function()": [[30, "block_function", false]], "block_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_function", false]], "block_module()": [[30, "block_module", false]], "block_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_module", false]], "block_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.block_module", false]], "block_real_io()": [[30, "block_real_io", false]], "block_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_real_io", false]], "built-in function": [[26, "clear_report", false], [26, "compliment", false], [26, "contextualize_report", false], [26, "debug", false], [26, "explain", false], [26, "gently", false], [26, "get_all_feedback", false], [26, "give_partial", false], [26, "guidance", false], [26, "hide_correctness", false], [26, "log", false], [26, "set_success", false], [26, "suppress", false], [29, "assert_contains_subset", false], [29, "assert_equal", false], [29, "assert_false", false], [29, "assert_greater", false], [29, "assert_greater_equal", false], [29, "assert_has_attr", false], [29, "assert_has_function", false], [29, "assert_has_variable", false], [29, "assert_in", false], [29, "assert_is", false], [29, "assert_is_dataclass", false], [29, "assert_is_instance", false], [29, "assert_is_none", false], [29, "assert_is_not", false], [29, "assert_is_not_dataclass", false], [29, "assert_is_not_instance", false], [29, "assert_is_not_none", false], [29, "assert_length_equal", false], [29, "assert_length_greater", false], [29, "assert_length_greater_equal", false], [29, "assert_length_less", false], [29, "assert_length_less_equal", false], [29, "assert_length_not_equal", false], [29, "assert_less", false], [29, "assert_less_equal", false], [29, "assert_not_contains_subset", false], [29, "assert_not_equal", false], [29, "assert_not_in", false], [29, "assert_not_output", false], [29, "assert_not_output_contains", false], [29, "assert_not_regex", false], [29, "assert_not_type", false], [29, "assert_output", false], [29, "assert_output_contains", false], [29, "assert_regex", false], [29, "assert_true", false], [29, "assert_type", false], [29, "check_dataclass_instance", false], [29, "ensure_called_uniquely", false], [29, "ensure_coverage", false], [29, "ensure_function_callable", false], [29, "unit_test", false], [30, "allow_function", false], [30, "allow_module", false], [30, "allow_real_io", false], [30, "block_function", false], [30, "block_module", false], [30, "block_real_io", false], [30, "call", false], [30, "check_coverage", false], [30, "clear_input", false], [30, "clear_mocks", false], [30, "clear_output", false], [30, "clear_sandbox", false], [30, "clear_student_data", false], [30, "count_unique_calls", false], [30, "evaluate", false], [30, "get_call_arguments", false], [30, "get_exception", false], [30, "get_input", false], [30, "get_module", false], [30, "get_output", false], [30, "get_python_errors", false], [30, "get_raw_output", false], [30, "get_sandbox", false], [30, "get_student_data", false], [30, "get_trace", false], [30, "mock_function", false], [30, "mock_module", false], [30, "queue_input", false], [30, "run", false], [30, "set_input", false], [30, "start_trace", false], [30, "stop_trace", false], [31, "check_section_exists", false], [31, "get_program", false], [31, "next_section", false], [31, "restore_code", false], [31, "separate_into_sections", false], [31, "set_source", false], [31, "stop_sections", false], [31, "verify", false], [32, "ensure_ast", false], [32, "ensure_dataclass", false], [32, "ensure_documented_functions", false], [32, "ensure_function", false], [32, "ensure_function_call", false], [32, "ensure_functions_return", false], [32, "ensure_import", false], [32, "ensure_literal", false], [32, "ensure_literal_type", false], [32, "ensure_operation", false], [32, "ensure_operator", false], [32, "ensure_prints_exactly", false], [32, "ensure_starting_code", false], [32, "files_not_handled_correctly", false], [32, "function_prints", false], [32, "only_printing_variables", false], [32, "prevent_advanced_iteration", false], [32, "prevent_ast", false], [32, "prevent_embedded_answer", false], [32, "prevent_function_call", false], [32, "prevent_import", false], [32, "prevent_literal", false], [32, "prevent_literal_type", false], [32, "prevent_operation", false], [32, "prevent_operator", false], [32, "prevent_printing_functions", false], [33, "tifa_analysis", false]], "caitexception": [[7, "pedal.cait.cait_api.CaitException", false]], "call()": [[30, "call", false]], "call() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.call", false]], "call() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.call", false]], "categories (feedback attribute)": [[0, "pedal.core.commands.Feedback.CATEGORIES", false], [0, "pedal.core.feedback.Feedback.CATEGORIES", false]], "category": [[27, "category", false]], "category (feedback attribute)": [[0, "pedal.core.commands.Feedback.category", false], [0, "pedal.core.feedback.Feedback.category", false]], "check_coverage()": [[30, "check_coverage", false]], "check_coverage() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.check_coverage", false]], "check_dataclass_error (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.check_dataclass_error", false]], "check_dataclass_instance()": [[29, "check_dataclass_instance", false]], "check_mark() (formatter method)": [[28, "Formatter.check_mark", false]], "check_section_exists()": [[31, "check_section_exists", false]], "clear() (report method)": [[0, "pedal.core.report.Report.clear", false]], "clear() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear", false]], "clear_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_context", false]], "clear_exception() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_exception", false]], "clear_input()": [[30, "clear_input", false]], "clear_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_input", false]], "clear_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_input", false]], "clear_mocked_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocked_function", false]], "clear_mocks()": [[30, "clear_mocks", false]], "clear_mocks() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_mocks", false]], "clear_mocks() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocks", false]], "clear_output()": [[30, "clear_output", false]], "clear_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_output", false]], "clear_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_output", false]], "clear_report()": [[26, "clear_report", false]], "clear_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.clear_report", false]], "clear_sandbox()": [[30, "clear_sandbox", false]], "clear_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_sandbox", false]], "clear_student_data()": [[30, "clear_student_data", false]], "clear_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_student_data", false]], "clear_tracer() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_tracer", false]], "col (location attribute)": [[0, "pedal.core.location.Location.col", false]], "commandblock (built-in class)": [[30, "CommandBlock", false]], "commandblock (class in pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.CommandBlock", false]], "compare_data() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.compare_data", false]], "complete (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.COMPLETE", false], [0, "pedal.core.feedback_category.FeedbackCategory.COMPLETE", false]], "compliment (class in pedal.core.commands)": [[0, "pedal.core.commands.compliment", false]], "compliment()": [[26, "compliment", false]], "composite feedback function": [[14, "term-Composite-Feedback-Function", true]], "compositefeedbackfunction() (in module pedal.core.feedback)": [[0, "pedal.core.feedback.CompositeFeedbackFunction", false]], "condition() (assert_contains_subset method)": [[6, "pedal.assertions.runtime.assert_contains_subset.condition", false]], "condition() (assert_equal method)": [[6, "pedal.assertions.runtime.assert_equal.condition", false]], "condition() (assert_false method)": [[6, "pedal.assertions.runtime.assert_false.condition", false]], "condition() (assert_greater method)": [[6, "pedal.assertions.runtime.assert_greater.condition", false]], "condition() (assert_greater_equal method)": [[6, "pedal.assertions.runtime.assert_greater_equal.condition", false]], "condition() (assert_has_attr method)": [[6, "pedal.assertions.runtime.assert_has_attr.condition", false]], "condition() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.condition", false]], "condition() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.condition", false]], "condition() (assert_in method)": [[6, "pedal.assertions.runtime.assert_in.condition", false]], "condition() (assert_is method)": [[6, "pedal.assertions.runtime.assert_is.condition", false]], "condition() (assert_is_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_dataclass.condition", false]], "condition() (assert_is_instance method)": [[6, "pedal.assertions.runtime.assert_is_instance.condition", false]], "condition() (assert_is_none method)": [[6, "pedal.assertions.runtime.assert_is_none.condition", false]], "condition() (assert_is_not method)": [[6, "pedal.assertions.runtime.assert_is_not.condition", false]], "condition() (assert_is_not_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass.condition", false]], "condition() (assert_is_not_none method)": [[6, "pedal.assertions.runtime.assert_is_not_none.condition", false]], "condition() (assert_length_equal method)": [[6, "pedal.assertions.runtime.assert_length_equal.condition", false]], "condition() (assert_length_greater method)": [[6, "pedal.assertions.runtime.assert_length_greater.condition", false]], "condition() (assert_length_greater_equal method)": [[6, "pedal.assertions.runtime.assert_length_greater_equal.condition", false]], "condition() (assert_length_less method)": [[6, "pedal.assertions.runtime.assert_length_less.condition", false]], "condition() (assert_length_less_equal method)": [[6, "pedal.assertions.runtime.assert_length_less_equal.condition", false]], "condition() (assert_length_not_equal method)": [[6, "pedal.assertions.runtime.assert_length_not_equal.condition", false]], "condition() (assert_less method)": [[6, "pedal.assertions.runtime.assert_less.condition", false]], "condition() (assert_less_equal method)": [[6, "pedal.assertions.runtime.assert_less_equal.condition", false]], "condition() (assert_not_contains_subset method)": [[6, "pedal.assertions.runtime.assert_not_contains_subset.condition", false]], "condition() (assert_not_equal method)": [[6, "pedal.assertions.runtime.assert_not_equal.condition", false]], "condition() (assert_not_in method)": [[6, "pedal.assertions.runtime.assert_not_in.condition", false]], "condition() (assert_not_is_instance method)": [[6, "pedal.assertions.runtime.assert_not_is_instance.condition", false]], "condition() (assert_not_output method)": [[6, "pedal.assertions.runtime.assert_not_output.condition", false]], "condition() (assert_not_output_contains method)": [[6, "pedal.assertions.runtime.assert_not_output_contains.condition", false]], "condition() (assert_not_output_regex method)": [[6, "pedal.assertions.runtime.assert_not_output_regex.condition", false]], "condition() (assert_not_regex method)": [[6, "pedal.assertions.runtime.assert_not_regex.condition", false]], "condition() (assert_not_type method)": [[6, "pedal.assertions.runtime.assert_not_type.condition", false]], "condition() (assert_output method)": [[6, "pedal.assertions.runtime.assert_output.condition", false]], "condition() (assert_output_contains method)": [[6, "pedal.assertions.runtime.assert_output_contains.condition", false]], "condition() (assert_output_regex method)": [[6, "pedal.assertions.runtime.assert_output_regex.condition", false]], "condition() (assert_regex method)": [[6, "pedal.assertions.runtime.assert_regex.condition", false]], "condition() (assert_true method)": [[6, "pedal.assertions.runtime.assert_true.condition", false]], "condition() (ensure_ast method)": [[6, "pedal.assertions.static.ensure_ast.condition", false]], "condition() (ensure_called_uniquely method)": [[6, "pedal.assertions.runtime.ensure_called_uniquely.condition", false]], "condition() (ensure_coverage method)": [[6, "pedal.assertions.runtime.ensure_coverage.condition", false]], "condition() (ensure_documented_functions method)": [[6, "pedal.assertions.static.ensure_documented_functions.condition", false]], "condition() (ensure_function_call method)": [[6, "pedal.assertions.static.ensure_function_call.condition", false]], "condition() (ensure_functions_return method)": [[6, "pedal.assertions.static.ensure_functions_return.condition", false]], "condition() (ensure_import method)": [[6, "pedal.assertions.static.ensure_import.condition", false]], "condition() (ensure_literal method)": [[6, "pedal.assertions.static.ensure_literal.condition", false]], "condition() (ensure_literal_type method)": [[6, "pedal.assertions.static.ensure_literal_type.condition", false]], "condition() (ensure_operation method)": [[6, "pedal.assertions.static.ensure_operation.condition", false]], "condition() (ensure_show method)": [[8, "pedal.extensions.plotting.ensure_show.condition", false]], "condition() (ensure_starting_code method)": [[6, "pedal.assertions.static.ensure_starting_code.condition", false]], "condition() (feedback method)": [[0, "pedal.core.commands.Feedback.condition", false], [0, "pedal.core.feedback.Feedback.condition", false]], "condition() (only_printing_variables method)": [[6, "pedal.assertions.static.only_printing_variables.condition", false]], "condition() (plt_rename_err method)": [[8, "pedal.extensions.plotting.plt_rename_err.condition", false]], "condition() (plt_wrong_import method)": [[8, "pedal.extensions.plotting.plt_wrong_import.condition", false]], "condition() (prevent_ast method)": [[6, "pedal.assertions.static.prevent_ast.condition", false]], "condition() (prevent_embedded_answer method)": [[6, "pedal.assertions.static.prevent_embedded_answer.condition", false]], "condition() (prevent_function_call method)": [[6, "pedal.assertions.static.prevent_function_call.condition", false]], "condition() (prevent_import method)": [[6, "pedal.assertions.static.prevent_import.condition", false]], "condition() (prevent_literal method)": [[6, "pedal.assertions.static.prevent_literal.condition", false]], "condition() (prevent_literal_type method)": [[6, "pedal.assertions.static.prevent_literal_type.condition", false]], "condition() (prevent_operation method)": [[6, "pedal.assertions.static.prevent_operation.condition", false]], "condition() (prevent_printing_functions method)": [[6, "pedal.assertions.static.prevent_printing_functions.condition", false]], "condition() (wheat_chaff_game_class method)": [[6, "pedal.assertions.commands.wheat_chaff_game_class.condition", false]], "constraint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.CONSTRAINT", false], [0, "pedal.core.feedback_category.FeedbackKind.CONSTRAINT", false]], "context (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.context", false]], "contextualize() (report method)": [[0, "pedal.core.report.Report.contextualize", false]], "contextualize_report()": [[26, "contextualize_report", false]], "contextualize_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.contextualize_report", false]], "correct": [[27, "correct", false]], "correct (feedback attribute)": [[0, "pedal.core.commands.Feedback.correct", false], [0, "pedal.core.feedback.Feedback.correct", false]], "count_unique_calls()": [[30, "count_unique_calls", false]], "count_unique_calls() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.count_unique_calls", false]], "course (submission attribute)": [[0, "pedal.core.submission.Submission.course", false]], "data (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.data", false]], "data_state() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_state", false]], "data_type() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_type", false]], "debug()": [[26, "debug", false]], "debug() (in module pedal.core.commands)": [[0, "pedal.core.commands.debug", false]], "debugpipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.DebugPipeline", false]], "def_use_error() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.def_use_error", false]], "else_message": [[27, "else_message", false]], "else_message (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message", false], [0, "pedal.core.feedback.Feedback.else_message", false]], "else_message_template": [[27, "else_message_template", false]], "else_message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message_template", false], [0, "pedal.core.feedback.Feedback.else_message_template", false]], "end_col (location attribute)": [[0, "pedal.core.location.Location.end_col", false]], "end_line (location attribute)": [[0, "pedal.core.location.Location.end_line", false]], "ensure_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_ast", false]], "ensure_ast()": [[32, "ensure_ast", false]], "ensure_called_uniquely (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_called_uniquely", false]], "ensure_called_uniquely()": [[29, "ensure_called_uniquely", false]], "ensure_correct_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_correct_plot", false]], "ensure_coverage (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_coverage", false]], "ensure_coverage()": [[29, "ensure_coverage", false]], "ensure_dataclass()": [[32, "ensure_dataclass", false]], "ensure_dataclass() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_dataclass", false]], "ensure_documented_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_documented_functions", false]], "ensure_documented_functions()": [[32, "ensure_documented_functions", false]], "ensure_function()": [[32, "ensure_function", false]], "ensure_function() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function", false]], "ensure_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function_call", false]], "ensure_function_call()": [[32, "ensure_function_call", false]], "ensure_function_callable()": [[29, "ensure_function_callable", false]], "ensure_functions_return (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_functions_return", false]], "ensure_functions_return()": [[32, "ensure_functions_return", false]], "ensure_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_import", false]], "ensure_import()": [[32, "ensure_import", false]], "ensure_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal", false]], "ensure_literal()": [[32, "ensure_literal", false]], "ensure_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal_type", false]], "ensure_literal_type()": [[32, "ensure_literal_type", false]], "ensure_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operation", false]], "ensure_operation()": [[32, "ensure_operation", false]], "ensure_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operator", false]], "ensure_operator()": [[32, "ensure_operator", false]], "ensure_prints_exactly()": [[32, "ensure_prints_exactly", false]], "ensure_prints_exactly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_prints_exactly", false]], "ensure_show (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_show", false]], "ensure_starting_code (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_starting_code", false]], "ensure_starting_code()": [[32, "ensure_starting_code", false]], "environment": [[14, "term-Environment", true]], "environment (class in pedal.core.environment)": [[0, "pedal.core.environment.Environment", false]], "error": [[12, "term-Error", true]], "evaluate()": [[30, "evaluate", false]], "evaluate() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.evaluate", false]], "evaluate() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.evaluate", false]], "exception (formatter attribute)": [[28, "Formatter.exception", false]], "exception (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception", false]], "exception (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.exception", false]], "exception_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_message", false]], "exception_name (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_name", false]], "execute_hooks() (report method)": [[0, "pedal.core.report.Report.execute_hooks", false]], "execution (submission attribute)": [[0, "pedal.core.submission.Submission.execution", false]], "expire_cait_cache() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.expire_cait_cache", false]], "explain (class in pedal.core.commands)": [[0, "pedal.core.commands.explain", false]], "explain()": [[26, "explain", false]], "feedback": [[14, "term-Feedback", true]], "feedback (class in pedal.core.commands)": [[0, "pedal.core.commands.Feedback", false]], "feedback (class in pedal.core.feedback)": [[0, "pedal.core.feedback.Feedback", false]], "feedback (in module pedal.core.commands)": [[0, "pedal.core.commands.feedback", false]], "feedback (report attribute)": [[0, "pedal.core.report.Report.feedback", false]], "feedback (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.feedback", false]], "feedback category": [[14, "term-Feedback-Category", true]], "feedback condition": [[14, "term-Feedback-Condition", true]], "feedback function": [[14, "term-Feedback-Function", true]], "feedback kind": [[14, "term-Feedback-Kind", true]], "feedback label": [[14, "term-Feedback-Label", true]], "feedback response": [[14, "term-Feedback-Response", true]], "feedbackcategory (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackCategory", false]], "feedbackcategory (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackCategory", false]], "feedbackkind (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackKind", false]], "feedbackkind (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackKind", false]], "feedbackpipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.FeedbackPipeline", false]], "feedbackresponse (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackResponse", false]], "feedbackstatus (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackStatus", false]], "field_names": [[27, "field_names", false]], "fields": [[27, "fields", false]], "fields (feedback attribute)": [[0, "pedal.core.commands.Feedback.fields", false], [0, "pedal.core.feedback.Feedback.fields", false]], "filename (formatter attribute)": [[28, "Formatter.filename", false]], "filename (location attribute)": [[0, "pedal.core.location.Location.filename", false]], "files (submission attribute)": [[0, "pedal.core.submission.Submission.files", false]], "files_not_handled_correctly()": [[32, "files_not_handled_correctly", false]], "files_not_handled_correctly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.files_not_handled_correctly", false]], "find_asts() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_asts", false]], "find_expr_sub_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_expr_sub_matches", false]], "find_function_calls() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_calls", false]], "find_function_definition() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_definition", false]], "find_match() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_match", false]], "find_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_matches", false]], "find_operation() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_operation", false]], "find_prior_initializations() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_prior_initializations", false]], "find_submatches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_submatches", false]], "format_assertion() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.format_assertion", false]], "format_assertion() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.format_assertion", false]], "formatter (built-in class)": [[28, "Formatter", false]], "frame (formatter attribute)": [[28, "Formatter.frame", false]], "from_ast() (location class method)": [[0, "pedal.core.location.Location.from_ast", false]], "full_clear() (report method)": [[0, "pedal.core.report.Report.full_clear", false]], "fully qualified name": [[12, "term-Fully-Qualified-Name", true]], "function_is_called() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.function_is_called", false]], "function_prints()": [[32, "function_prints", false]], "function_prints() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.function_prints", false]], "functions (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.functions", false]], "gently (class in pedal.core.commands)": [[0, "pedal.core.commands.gently", false]], "gently()": [[26, "gently", false]], "get_all_feedback()": [[26, "get_all_feedback", false]], "get_all_feedback() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_all_feedback", false]], "get_call_arguments()": [[30, "get_call_arguments", false]], "get_call_arguments() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_call_arguments", false]], "get_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_context", false]], "get_exception()": [[30, "get_exception", false]], "get_exception() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_exception", false]], "get_files_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_files_lines", false]], "get_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_function", false]], "get_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_function", false]], "get_input()": [[30, "get_input", false]], "get_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_input", false]], "get_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_lines", false]], "get_module()": [[30, "get_module", false]], "get_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_module", false]], "get_names_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_names_by_type", false]], "get_original_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_original_program", false]], "get_output()": [[30, "get_output", false]], "get_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_output", false]], "get_plots() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.get_plots", false]], "get_program()": [[31, "get_program", false]], "get_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_program", false]], "get_python_errors()": [[30, "get_python_errors", false]], "get_python_errors() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_python_errors", false]], "get_raw_output()": [[30, "get_raw_output", false]], "get_raw_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_raw_output", false]], "get_sandbox()": [[30, "get_sandbox", false]], "get_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_sandbox", false]], "get_student_data()": [[30, "get_student_data", false]], "get_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_student_data", false]], "get_submission() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_submission", false]], "get_trace()": [[30, "get_trace", false]], "get_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_trace", false]], "get_values_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_values_by_type", false]], "get_variables_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_variables_by_type", false]], "give_partial (class in pedal.core.commands)": [[0, "pedal.core.commands.give_partial", false]], "give_partial()": [[26, "give_partial", false]], "gradepipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.GradePipeline", false]], "group (report attribute)": [[0, "pedal.core.report.Report.group", false]], "group_names (report attribute)": [[0, "pedal.core.report.Report.group_names", false]], "guidance (class in pedal.core.commands)": [[0, "pedal.core.commands.guidance", false]], "guidance()": [[26, "guidance", false]], "has_import() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.has_import", false]], "hiddens (report attribute)": [[0, "pedal.core.report.Report.hiddens", false]], "hide_correctness()": [[26, "hide_correctness", false]], "hide_correctness() (in module pedal.core.commands)": [[0, "pedal.core.commands.hide_correctness", false]], "hide_correctness() (report method)": [[0, "pedal.core.report.Report.hide_correctness", false]], "hint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.HINT", false], [0, "pedal.core.feedback_category.FeedbackKind.HINT", false]], "hooks (report attribute)": [[0, "pedal.core.report.Report.hooks", false]], "htmlformatter (built-in class)": [[28, "HtmlFormatter", false]], "identifier": [[12, "term-Identifier", true]], "import_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.import_error", false]], "indent() (formatter method)": [[28, "Formatter.indent", false]], "indentation_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.indentation_error", false]], "index_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.index_error", false]], "inputs (formatter attribute)": [[28, "Formatter.inputs", false]], "inputs (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.inputs", false]], "instructions (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTIONS", false], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTIONS", false]], "instructor (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTOR", false], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTOR", false]], "instructor control script": [[14, "term-Instructor-Control-Script", true]], "io_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.io_error", false]], "is_top_level() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.is_top_level", false]], "issue": [[12, "term-Issue", true]], "justification": [[27, "justification", false]], "justification (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification", false], [0, "pedal.core.feedback.Feedback.justification", false]], "justification_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification_template", false], [0, "pedal.core.feedback.Feedback.justification_template", false]], "key_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.key_error", false]], "kind": [[27, "kind", false]], "kind (feedback attribute)": [[0, "pedal.core.commands.Feedback.kind", false], [0, "pedal.core.feedback.Feedback.kind", false]], "kinds (feedback attribute)": [[0, "pedal.core.commands.Feedback.KINDS", false], [0, "pedal.core.feedback.Feedback.KINDS", false]], "label": [[27, "label", false]], "label (feedback attribute)": [[0, "pedal.core.commands.Feedback.label", false], [0, "pedal.core.feedback.Feedback.label", false]], "line (formatter attribute)": [[28, "Formatter.line", false]], "line (location attribute)": [[0, "pedal.core.location.Location.line", false]], "literal": [[12, "term-Literal", true]], "location (class in pedal.core.location)": [[0, "pedal.core.location.Location", false]], "location (feedback attribute)": [[0, "pedal.core.commands.Feedback.location", false], [0, "pedal.core.feedback.Feedback.location", false]], "log()": [[26, "log", false]], "log() (in module pedal.core.commands)": [[0, "pedal.core.commands.log", false]], "main report": [[14, "term-Main-Report", true]], "main_code (submission attribute)": [[0, "pedal.core.submission.Submission.main_code", false]], "main_file (submission attribute)": [[0, "pedal.core.submission.Submission.main_file", false]], "main_report (in module pedal.core.report)": [[0, "pedal.core.report.MAIN_REPORT", false]], "make_safe_variable() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.make_safe_variable", false]], "maximum_temporary_length (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.MAXIMUM_TEMPORARY_LENGTH", false]], "memory_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.memory_error", false]], "message": [[27, "message", false]], "message (feedback attribute)": [[0, "pedal.core.commands.Feedback.message", false], [0, "pedal.core.feedback.Feedback.message", false]], "message_template": [[27, "message_template", false]], "message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.message_template", false], [0, "pedal.core.feedback.Feedback.message_template", false]], "metacognitive (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.METACOGNITIVE", false], [0, "pedal.core.feedback_category.FeedbackKind.METACOGNITIVE", false]], "misconception (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISCONCEPTION", false], [0, "pedal.core.feedback_category.FeedbackKind.MISCONCEPTION", false]], "mistake (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISTAKE", false], [0, "pedal.core.feedback_category.FeedbackKind.MISTAKE", false]], "mistakes (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.MISTAKES", false], [0, "pedal.core.feedback_category.FeedbackCategory.MISTAKES", false]], "mock_function()": [[30, "mock_function", false]], "mock_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_function", false]], "mock_module()": [[30, "mock_module", false]], "mock_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_module", false]], "mock_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.mock_module", false]], "module": [[0, "module-pedal.core.commands", false], [0, "module-pedal.core.environment", false], [0, "module-pedal.core.feedback", false], [0, "module-pedal.core.feedback_category", false], [0, "module-pedal.core.location", false], [0, "module-pedal.core.report", false], [0, "module-pedal.core.submission", false], [0, "module-pedal.core.tool", false], [6, "module-pedal.assertions", false], [6, "module-pedal.assertions.commands", false], [6, "module-pedal.assertions.runtime", false], [6, "module-pedal.assertions.static", false], [7, "module-pedal.cait", false], [7, "module-pedal.cait.cait_api", false], [7, "module-pedal.cait.find_node", false], [8, "module-pedal.extensions.plotting", false], [8, "module-pedal.extensions.turtles", false], [9, "module-pedal.questions.setup", false], [10, "module-pedal.sandbox", false], [10, "module-pedal.sandbox.commands", false], [10, "module-pedal.sandbox.feedbacks", false], [10, "module-pedal.sandbox.sandbox", false], [11, "module-pedal.source.source", false], [12, "module-pedal.tifa", false]], "muted": [[27, "muted", false]], "muted (feedback attribute)": [[0, "pedal.core.commands.Feedback.muted", false], [0, "pedal.core.feedback.Feedback.muted", false]], "name": [[12, "term-Name", true]], "name (formatter attribute)": [[28, "Formatter.name", false]], "name (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.name", false]], "name map": [[12, "term-Name-Map", true]], "name_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.name_error", false]], "negative_mark() (formatter method)": [[28, "Formatter.negative_mark", false]], "next_section()": [[31, "next_section", false]], "no_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.no_plt", false]], "only_printing_variables (class in pedal.assertions.static)": [[6, "pedal.assertions.static.only_printing_variables", false]], "only_printing_variables()": [[32, "only_printing_variables", false]], "open_without_arguments (class in pedal.assertions.static)": [[6, "pedal.assertions.static.open_without_arguments", false]], "other_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.other_plt", false]], "output (formatter attribute)": [[28, "Formatter.output", false]], "output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.output", false]], "parent (feedback attribute)": [[0, "pedal.core.commands.Feedback.parent", false], [0, "pedal.core.feedback.Feedback.parent", false]], "parse_program() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.parse_program", false]], "path": [[12, "term-Path", true]], "pedal.assertions": [[6, "module-pedal.assertions", false]], "pedal.assertions.commands": [[6, "module-pedal.assertions.commands", false]], "pedal.assertions.runtime": [[6, "module-pedal.assertions.runtime", false]], "pedal.assertions.static": [[6, "module-pedal.assertions.static", false]], "pedal.cait": [[7, "module-pedal.cait", false]], "pedal.cait.cait_api": [[7, "module-pedal.cait.cait_api", false]], "pedal.cait.find_node": [[7, "module-pedal.cait.find_node", false]], "pedal.core.commands": [[0, "module-pedal.core.commands", false]], "pedal.core.environment": [[0, "module-pedal.core.environment", false]], "pedal.core.feedback": [[0, "module-pedal.core.feedback", false]], "pedal.core.feedback_category": [[0, "module-pedal.core.feedback_category", false]], "pedal.core.location": [[0, "module-pedal.core.location", false]], "pedal.core.report": [[0, "module-pedal.core.report", false]], "pedal.core.submission": [[0, "module-pedal.core.submission", false]], "pedal.core.tool": [[0, "module-pedal.core.tool", false]], "pedal.extensions.plotting": [[8, "module-pedal.extensions.plotting", false]], "pedal.extensions.turtles": [[8, "module-pedal.extensions.turtles", false]], "pedal.questions.setup": [[9, "module-pedal.questions.setup", false]], "pedal.sandbox": [[10, "module-pedal.sandbox", false]], "pedal.sandbox.commands": [[10, "module-pedal.sandbox.commands", false]], "pedal.sandbox.feedbacks": [[10, "module-pedal.sandbox.feedbacks", false]], "pedal.sandbox.sandbox": [[10, "module-pedal.sandbox.sandbox", false]], "pedal.source.source": [[11, "module-pedal.source.source", false]], "pedal.tifa": [[12, "module-pedal.tifa", false]], "plots (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.plots", false]], "plt_rename_err (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_rename_err", false]], "plt_wrong_import (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_wrong_import", false]], "positive (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.POSITIVE", false], [0, "pedal.core.feedback_category.FeedbackCategory.POSITIVE", false]], "prevent_advanced_iteration()": [[32, "prevent_advanced_iteration", false]], "prevent_advanced_iteration() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_advanced_iteration", false]], "prevent_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_ast", false]], "prevent_ast()": [[32, "prevent_ast", false]], "prevent_embedded_answer (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_embedded_answer", false]], "prevent_embedded_answer()": [[32, "prevent_embedded_answer", false]], "prevent_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_function_call", false]], "prevent_function_call()": [[32, "prevent_function_call", false]], "prevent_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_import", false]], "prevent_import()": [[32, "prevent_import", false]], "prevent_incorrect_plt() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.prevent_incorrect_plt", false]], "prevent_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal", false]], "prevent_literal()": [[32, "prevent_literal", false]], "prevent_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal_type", false]], "prevent_literal_type()": [[32, "prevent_literal_type", false]], "prevent_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operation", false]], "prevent_operation()": [[32, "prevent_operation", false]], "prevent_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operator", false]], "prevent_operator()": [[32, "prevent_operator", false]], "prevent_printing_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_printing_functions", false]], "prevent_printing_functions()": [[32, "prevent_printing_functions", false]], "priority": [[27, "priority", false]], "priority (feedback attribute)": [[0, "pedal.core.commands.Feedback.priority", false], [0, "pedal.core.feedback.Feedback.priority", false]], "process_ast() (tifa method)": [[12, "pedal.tifa.Tifa.process_ast", false]], "process_code() (tifa method)": [[12, "pedal.tifa.Tifa.process_code", false]], "python_code (formatter attribute)": [[28, "Formatter.python_code", false]], "python_expression (formatter attribute)": [[28, "Formatter.python_expression", false]], "python_value (formatter attribute)": [[28, "Formatter.python_value", false]], "queue_input()": [[30, "queue_input", false]], "queue_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.queue_input", false]], "raw_output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.raw_output", false]], "register_tool() (report class method)": [[0, "pedal.core.report.Report.register_tool", false]], "reparse_if_needed() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reparse_if_needed", false]], "replace_main() (submission method)": [[0, "pedal.core.submission.Submission.replace_main", false]], "report": [[14, "term-Report", true]], "report (class in pedal.core.report)": [[0, "pedal.core.report.Report", false]], "report (feedback attribute)": [[0, "pedal.core.commands.Feedback.report", false], [0, "pedal.core.feedback.Feedback.report", false]], "require_tifa() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.require_tifa", false]], "reset (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.reset", false]], "reset() (in module pedal.assertions)": [[6, "pedal.assertions.reset", false]], "reset() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reset", false]], "reset() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.reset", false]], "reset() (in module pedal.sandbox)": [[10, "pedal.sandbox.reset", false]], "reset() (in module pedal.source.source)": [[11, "pedal.source.source.reset", false]], "reset_default_overrides() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.reset_default_overrides", false]], "reset_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.reset_output", false]], "resolver": [[14, "term-Resolver", true]], "resolves (report attribute)": [[0, "pedal.core.report.Report.resolves", false]], "restore_code()": [[31, "restore_code", false]], "restore_code() (in module pedal.source.source)": [[11, "pedal.source.source.restore_code", false]], "result (report attribute)": [[0, "pedal.core.report.Report.result", false]], "result (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.result", false]], "run()": [[30, "run", false]], "run() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.run", false]], "run() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.run", false]], "runpipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.RunPipeline", false]], "runtime (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.RUNTIME", false], [0, "pedal.core.feedback_category.FeedbackCategory.RUNTIME", false]], "runtime_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.runtime_error", false]], "sandbox (built-in class)": [[30, "Sandbox", false]], "sandbox (class in pedal.sandbox.sandbox)": [[10, "pedal.sandbox.sandbox.Sandbox", false]], "sandboxpipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.SandboxPipeline", false]], "scope": [[12, "term-Scope", true]], "scope chain": [[12, "term-Scope-Chain", true]], "score": [[27, "score", false]], "score (feedback attribute)": [[0, "pedal.core.commands.Feedback.score", false], [0, "pedal.core.feedback.Feedback.score", false]], "separate_into_sections()": [[31, "separate_into_sections", false]], "set_correct (class in pedal.core.commands)": [[0, "pedal.core.commands.set_correct", false]], "set_formatter() (in module pedal.core.commands)": [[0, "pedal.core.commands.set_formatter", false]], "set_formatter() (report method)": [[0, "pedal.core.report.Report.set_formatter", false]], "set_input()": [[30, "set_input", false]], "set_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.set_input", false]], "set_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_input", false]], "set_line_offset() (submission method)": [[0, "pedal.core.submission.Submission.set_line_offset", false]], "set_seed() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.set_seed", false]], "set_source()": [[31, "set_source", false]], "set_source() (in module pedal.source.source)": [[11, "pedal.source.source.set_source", false]], "set_source_file() (in module pedal.source.source)": [[11, "pedal.source.source.set_source_file", false]], "set_student_data() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_student_data", false]], "set_success (in module pedal.core.commands)": [[0, "pedal.core.commands.set_success", false]], "set_success()": [[26, "set_success", false]], "specification (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SPECIFICATION", false], [0, "pedal.core.feedback_category.FeedbackCategory.SPECIFICATION", false]], "start_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.start_grouping_context", false]], "start_trace()": [[30, "start_trace", false]], "start_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.start_trace", false]], "state": [[12, "term-State", true]], "statspipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.StatsPipeline", false]], "stop_group() (report method)": [[0, "pedal.core.report.Report.stop_group", false]], "stop_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.stop_grouping_context", false]], "stop_sections()": [[31, "stop_sections", false]], "stop_trace()": [[30, "stop_trace", false]], "stop_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.stop_trace", false]], "student (built-in variable)": [[30, "student", false]], "student (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STUDENT", false], [0, "pedal.core.feedback_category.FeedbackCategory.STUDENT", false]], "style (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STYLE", false], [0, "pedal.core.feedback_category.FeedbackCategory.STYLE", false]], "submission": [[14, "term-Submission", true]], "submission (class in pedal.core.submission)": [[0, "pedal.core.submission.Submission", false]], "submission (report attribute)": [[0, "pedal.core.report.Report.submission", false]], "suppress()": [[26, "suppress", false]], "suppress() (in module pedal.core.commands)": [[0, "pedal.core.commands.suppress", false]], "suppress() (report method)": [[0, "pedal.core.report.Report.suppress", false]], "suppressions (report attribute)": [[0, "pedal.core.report.Report.suppressions", false]], "syntax (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYNTAX", false], [0, "pedal.core.feedback_category.FeedbackCategory.SYNTAX", false]], "system (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYSTEM", false], [0, "pedal.core.feedback_category.FeedbackCategory.SYSTEM", false]], "system_error (class in pedal.core.commands)": [[0, "pedal.core.commands.system_error", false]], "table() (formatter method)": [[28, "Formatter.table", false]], "tags (feedback attribute)": [[0, "pedal.core.commands.Feedback.tags", false], [0, "pedal.core.feedback.Feedback.tags", false]], "target (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.target", false]], "textformatter (built-in class)": [[28, "TextFormatter", false]], "tifa (class in pedal.tifa)": [[12, "pedal.tifa.Tifa", false]], "tifa_analysis()": [[33, "tifa_analysis", false]], "tifa_analysis() (in module pedal.tifa)": [[12, "pedal.tifa.tifa_analysis", false]], "timeout_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.timeout_error", false]], "title": [[27, "title", false]], "title (feedback attribute)": [[0, "pedal.core.commands.Feedback.title", false], [0, "pedal.core.feedback.Feedback.title", false]], "to_json() (location method)": [[0, "pedal.core.location.Location.to_json", false]], "tool": [[14, "term-Tool", true], [27, "tool", false]], "tool (feedback attribute)": [[0, "pedal.core.commands.Feedback.tool", false], [0, "pedal.core.feedback.Feedback.tool", false]], "toolregistration (class in pedal.core.tool)": [[0, "pedal.core.tool.ToolRegistration", false]], "tools (report attribute)": [[0, "pedal.core.report.Report.TOOLS", false]], "traceback (formatter attribute)": [[28, "Formatter.traceback", false]], "traceback (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback", false]], "traceback_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback_message", false]], "tracer_style (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.tracer_style", false]], "turtles (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.turtles", false]], "type": [[12, "term-Type", true]], "type_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.type_error", false]], "unit_test()": [[29, "unit_test", false]], "unit_test() (in module pedal.assertions.commands)": [[6, "pedal.assertions.commands.unit_test", false]], "unknown (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.UNKNOWN", false], [0, "pedal.core.feedback_category.FeedbackCategory.UNKNOWN", false]], "unscored": [[27, "unscored", false]], "unscored (feedback attribute)": [[0, "pedal.core.commands.Feedback.unscored", false], [0, "pedal.core.feedback.Feedback.unscored", false]], "update_location() (feedback method)": [[0, "pedal.core.commands.Feedback.update_location", false], [0, "pedal.core.feedback.Feedback.update_location", false]], "user (submission attribute)": [[0, "pedal.core.submission.Submission.user", false]], "valence (feedback attribute)": [[0, "pedal.core.commands.Feedback.valence", false], [0, "pedal.core.feedback.Feedback.valence", false]], "value_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.value_error", false]], "var (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.var", false]], "verify()": [[31, "verify", false]], "verify() (in module pedal.source.source)": [[11, "pedal.source.source.verify", false]], "verify_section() (in module pedal.source.source)": [[11, "pedal.source.source.verify_section", false]], "verifypipeline (class in pedal.command_line.modes)": [[19, "pedal.command_line.modes.VerifyPipeline", false]], "version (feedback attribute)": [[0, "pedal.core.commands.Feedback.version", false], [0, "pedal.core.feedback.Feedback.version", false]], "visit() (tifa method)": [[12, "pedal.tifa.Tifa.visit", false]], "visit_annassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AnnAssign", false]], "visit_assign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Assign", false]], "visit_attribute() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Attribute", false]], "visit_augassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AugAssign", false]], "visit_binop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BinOp", false]], "visit_bool() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Bool", false]], "visit_boolop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BoolOp", false]], "visit_classdef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ClassDef", false]], "visit_compare() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Compare", false]], "visit_comprehension() (tifa method)": [[12, "pedal.tifa.Tifa.visit_comprehension", false]], "visit_constant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Constant", false]], "visit_dict() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Dict", false]], "visit_dictcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_DictComp", false]], "visit_expr() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Expr", false]], "visit_for() (tifa method)": [[12, "pedal.tifa.Tifa.visit_For", false]], "visit_functiondef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_FunctionDef", false]], "visit_generatorexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_GeneratorExp", false]], "visit_if() (tifa method)": [[12, "pedal.tifa.Tifa.visit_If", false]], "visit_ifexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_IfExp", false]], "visit_import() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Import", false]], "visit_importfrom() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ImportFrom", false]], "visit_lambda() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Lambda", false]], "visit_list() (tifa method)": [[12, "pedal.tifa.Tifa.visit_List", false]], "visit_listcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ListComp", false]], "visit_name() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Name", false]], "visit_nameconstant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_NameConstant", false]], "visit_num() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Num", false]], "visit_return() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Return", false]], "visit_setcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_SetComp", false]], "visit_slice() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Slice", false]], "visit_statements() (tifa method)": [[12, "pedal.tifa.Tifa.visit_statements", false]], "visit_str() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Str", false]], "visit_subscript() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Subscript", false]], "visit_unaryop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_UnaryOp", false]], "visit_while() (tifa method)": [[12, "pedal.tifa.Tifa.visit_While", false]], "visit_with() (tifa method)": [[12, "pedal.tifa.Tifa.visit_With", false]], "wheat_chaff_game_class (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.wheat_chaff_game_class", false]], "wrong_plt_data (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_data", false]], "wrong_plt_type (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_type", false]], "zero_division_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.zero_division_error", false]]}, "objects": {"": [[30, 0, 1, "", "CommandBlock"], [28, 0, 1, "", "Formatter"], [28, 0, 1, "", "HtmlFormatter"], [30, 0, 1, "", "Sandbox"], [28, 0, 1, "", "TextFormatter"], [27, 2, 1, "", "activate"], [30, 3, 1, "", "allow_function"], [30, 3, 1, "", "allow_module"], [30, 3, 1, "", "allow_real_io"], [29, 3, 1, "", "assert_contains_subset"], [29, 3, 1, "", "assert_equal"], [29, 3, 1, "", "assert_false"], [29, 3, 1, "", "assert_greater"], [29, 3, 1, "", "assert_greater_equal"], [29, 3, 1, "", "assert_has_attr"], [29, 3, 1, "", "assert_has_function"], [29, 3, 1, "", "assert_has_variable"], [29, 3, 1, "", "assert_in"], [29, 3, 1, "", "assert_is"], [29, 3, 1, "", "assert_is_dataclass"], [29, 3, 1, "", "assert_is_instance"], [29, 3, 1, "", "assert_is_none"], [29, 3, 1, "", "assert_is_not"], [29, 3, 1, "", "assert_is_not_dataclass"], [29, 3, 1, "", "assert_is_not_instance"], [29, 3, 1, "", "assert_is_not_none"], [29, 3, 1, "", "assert_length_equal"], [29, 3, 1, "", "assert_length_greater"], [29, 3, 1, "", "assert_length_greater_equal"], [29, 3, 1, "", "assert_length_less"], [29, 3, 1, "", "assert_length_less_equal"], [29, 3, 1, "", "assert_length_not_equal"], [29, 3, 1, "", "assert_less"], [29, 3, 1, "", "assert_less_equal"], [29, 3, 1, "", "assert_not_contains_subset"], [29, 3, 1, "", "assert_not_equal"], [29, 3, 1, "", "assert_not_in"], [29, 3, 1, "", "assert_not_output"], [29, 3, 1, "", "assert_not_output_contains"], [29, 3, 1, "", "assert_not_regex"], [29, 3, 1, "", "assert_not_type"], [29, 3, 1, "", "assert_output"], [29, 3, 1, "", "assert_output_contains"], [29, 3, 1, "", "assert_regex"], [29, 3, 1, "", "assert_true"], [29, 3, 1, "", "assert_type"], [30, 3, 1, "", "block_function"], [30, 3, 1, "", "block_module"], [30, 3, 1, "", "block_real_io"], [30, 3, 1, "", "call"], [27, 2, 1, "", "category"], [30, 3, 1, "", "check_coverage"], [29, 3, 1, "", "check_dataclass_instance"], [31, 3, 1, "", "check_section_exists"], [30, 3, 1, "", "clear_input"], [30, 3, 1, "", "clear_mocks"], [30, 3, 1, "", "clear_output"], [26, 3, 1, "", "clear_report"], [30, 3, 1, "", "clear_sandbox"], [30, 3, 1, "", "clear_student_data"], [26, 3, 1, "", "compliment"], [26, 3, 1, "", "contextualize_report"], [27, 2, 1, "", "correct"], [30, 3, 1, "", "count_unique_calls"], [26, 3, 1, "", "debug"], [27, 2, 1, "", "else_message"], [27, 2, 1, "", "else_message_template"], [32, 3, 1, "", "ensure_ast"], [29, 3, 1, "", "ensure_called_uniquely"], [29, 3, 1, "", "ensure_coverage"], [32, 3, 1, "", "ensure_dataclass"], [32, 3, 1, "", "ensure_documented_functions"], [32, 3, 1, "", "ensure_function"], [32, 3, 1, "", "ensure_function_call"], [29, 3, 1, "", "ensure_function_callable"], [32, 3, 1, "", "ensure_functions_return"], [32, 3, 1, "", "ensure_import"], [32, 3, 1, "", "ensure_literal"], [32, 3, 1, "", "ensure_literal_type"], [32, 3, 1, "", "ensure_operation"], [32, 3, 1, "", "ensure_operator"], [32, 3, 1, "", "ensure_prints_exactly"], [32, 3, 1, "", "ensure_starting_code"], [30, 3, 1, "", "evaluate"], [26, 3, 1, "", "explain"], [27, 2, 1, "", "field_names"], [27, 2, 1, "", "fields"], [32, 3, 1, "", "files_not_handled_correctly"], [32, 3, 1, "", "function_prints"], [26, 3, 1, "", "gently"], [26, 3, 1, "", "get_all_feedback"], [30, 3, 1, "", "get_call_arguments"], [30, 3, 1, "", "get_exception"], [30, 3, 1, "", "get_input"], [30, 3, 1, "", "get_module"], [30, 3, 1, "", "get_output"], [31, 3, 1, "", "get_program"], [30, 3, 1, "", "get_python_errors"], [30, 3, 1, "", "get_raw_output"], [30, 3, 1, "", "get_sandbox"], [30, 3, 1, "", "get_student_data"], [30, 3, 1, "", "get_trace"], [26, 3, 1, "", "give_partial"], [26, 3, 1, "", "guidance"], [26, 3, 1, "", "hide_correctness"], [27, 2, 1, "", "justification"], [27, 2, 1, "", "kind"], [27, 2, 1, "", "label"], [26, 3, 1, "", "log"], [27, 2, 1, "", "message"], [27, 2, 1, "", "message_template"], [30, 3, 1, "", "mock_function"], [30, 3, 1, "", "mock_module"], [27, 2, 1, "", "muted"], [31, 3, 1, "", "next_section"], [32, 3, 1, "", "only_printing_variables"], [32, 3, 1, "", "prevent_advanced_iteration"], [32, 3, 1, "", "prevent_ast"], [32, 3, 1, "", "prevent_embedded_answer"], [32, 3, 1, "", "prevent_function_call"], [32, 3, 1, "", "prevent_import"], [32, 3, 1, "", "prevent_literal"], [32, 3, 1, "", "prevent_literal_type"], [32, 3, 1, "", "prevent_operation"], [32, 3, 1, "", "prevent_operator"], [32, 3, 1, "", "prevent_printing_functions"], [27, 2, 1, "", "priority"], [30, 3, 1, "", "queue_input"], [31, 3, 1, "", "restore_code"], [30, 3, 1, "", "run"], [27, 2, 1, "", "score"], [31, 3, 1, "", "separate_into_sections"], [30, 3, 1, "", "set_input"], [31, 3, 1, "", "set_source"], [26, 3, 1, "", "set_success"], [30, 3, 1, "", "start_trace"], [31, 3, 1, "", "stop_sections"], [30, 3, 1, "", "stop_trace"], [30, 6, 1, "", "student"], [26, 3, 1, "", "suppress"], [33, 3, 1, "", "tifa_analysis"], [27, 2, 1, "", "title"], [27, 2, 1, "", "tool"], [29, 3, 1, "", "unit_test"], [27, 2, 1, "", "unscored"], [31, 3, 1, "", "verify"]], "Formatter": [[28, 1, 1, "", "check_mark"], [28, 2, 1, "", "exception"], [28, 2, 1, "", "filename"], [28, 2, 1, "", "frame"], [28, 1, 1, "", "indent"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "line"], [28, 2, 1, "", "name"], [28, 1, 1, "", "negative_mark"], [28, 2, 1, "", "output"], [28, 2, 1, "", "python_code"], [28, 2, 1, "", "python_expression"], [28, 2, 1, "", "python_value"], [28, 1, 1, "", "table"], [28, 2, 1, "", "traceback"]], "pedal": [[6, 4, 0, "-", "assertions"], [7, 4, 0, "-", "cait"], [10, 4, 0, "-", "sandbox"], [12, 4, 0, "-", "tifa"]], "pedal.assertions": [[6, 4, 0, "-", "commands"], [6, 3, 1, "", "reset"], [6, 4, 0, "-", "runtime"], [6, 4, 0, "-", "static"]], "pedal.assertions.commands": [[6, 0, 1, "", "check_dataclass_error"], [6, 3, 1, "", "unit_test"], [6, 0, 1, "", "wheat_chaff_game_class"]], "pedal.assertions.commands.wheat_chaff_game_class": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime": [[6, 2, 1, "", "assertAlmostEqual"], [6, 2, 1, "", "assertEqual"], [6, 2, 1, "", "assertFalse"], [6, 2, 1, "", "assertGreater"], [6, 2, 1, "", "assertGreaterEqual"], [6, 2, 1, "", "assertHasAttr"], [6, 2, 1, "", "assertHasFunction"], [6, 2, 1, "", "assertHasVariable"], [6, 2, 1, "", "assertIn"], [6, 2, 1, "", "assertIs"], [6, 2, 1, "", "assertIsInstance"], [6, 2, 1, "", "assertIsNone"], [6, 2, 1, "", "assertIsNot"], [6, 2, 1, "", "assertIsNotInstance"], [6, 2, 1, "", "assertIsNotNone"], [6, 2, 1, "", "assertLengthEqual"], [6, 2, 1, "", "assertLengthGreater"], [6, 2, 1, "", "assertLengthGreaterEqual"], [6, 2, 1, "", "assertLengthLess"], [6, 2, 1, "", "assertLengthLessEqual"], [6, 2, 1, "", "assertLengthNotEqual"], [6, 2, 1, "", "assertLess"], [6, 2, 1, "", "assertLessEqual"], [6, 2, 1, "", "assertNotAlmostEqual"], [6, 2, 1, "", "assertNotEqual"], [6, 2, 1, "", "assertNotIn"], [6, 2, 1, "", "assertNotOutput"], [6, 2, 1, "", "assertNotOutputContains"], [6, 2, 1, "", "assertNotRegex"], [6, 2, 1, "", "assertNotType"], [6, 2, 1, "", "assertOutput"], [6, 2, 1, "", "assertOutputContains"], [6, 2, 1, "", "assertPrints"], [6, 2, 1, "", "assertRegex"], [6, 2, 1, "", "assertTrue"], [6, 2, 1, "", "assertType"], [6, 0, 1, "", "assert_almost_equal"], [6, 0, 1, "", "assert_contains_subset"], [6, 0, 1, "", "assert_equal"], [6, 0, 1, "", "assert_false"], [6, 0, 1, "", "assert_greater"], [6, 0, 1, "", "assert_greater_equal"], [6, 0, 1, "", "assert_has_attr"], [6, 0, 1, "", "assert_has_function"], [6, 0, 1, "", "assert_has_variable"], [6, 0, 1, "", "assert_in"], [6, 0, 1, "", "assert_is"], [6, 0, 1, "", "assert_is_dataclass"], [6, 0, 1, "", "assert_is_instance"], [6, 0, 1, "", "assert_is_none"], [6, 0, 1, "", "assert_is_not"], [6, 0, 1, "", "assert_is_not_dataclass"], [6, 0, 1, "", "assert_is_not_none"], [6, 0, 1, "", "assert_length_equal"], [6, 0, 1, "", "assert_length_greater"], [6, 0, 1, "", "assert_length_greater_equal"], [6, 0, 1, "", "assert_length_less"], [6, 0, 1, "", "assert_length_less_equal"], [6, 0, 1, "", "assert_length_not_equal"], [6, 0, 1, "", "assert_less"], [6, 0, 1, "", "assert_less_equal"], [6, 0, 1, "", "assert_not_almost_equal"], [6, 0, 1, "", "assert_not_contains_subset"], [6, 0, 1, "", "assert_not_equal"], [6, 0, 1, "", "assert_not_in"], [6, 0, 1, "", "assert_not_is_instance"], [6, 0, 1, "", "assert_not_output"], [6, 0, 1, "", "assert_not_output_contains"], [6, 0, 1, "", "assert_not_output_regex"], [6, 0, 1, "", "assert_not_regex"], [6, 0, 1, "", "assert_not_type"], [6, 0, 1, "", "assert_output"], [6, 0, 1, "", "assert_output_contains"], [6, 0, 1, "", "assert_output_regex"], [6, 0, 1, "", "assert_prints"], [6, 0, 1, "", "assert_regex"], [6, 0, 1, "", "assert_true"], [6, 0, 1, "", "assert_type"], [6, 0, 1, "", "ensure_called_uniquely"], [6, 0, 1, "", "ensure_coverage"]], "pedal.assertions.runtime.assert_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_false": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_attr": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_function": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_has_variable": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_true": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_called_uniquely": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_coverage": [[6, 1, 1, "", "condition"]], "pedal.assertions.static": [[6, 0, 1, "", "ensure_ast"], [6, 3, 1, "", "ensure_dataclass"], [6, 0, 1, "", "ensure_documented_functions"], [6, 3, 1, "", "ensure_function"], [6, 0, 1, "", "ensure_function_call"], [6, 0, 1, "", "ensure_functions_return"], [6, 0, 1, "", "ensure_import"], [6, 0, 1, "", "ensure_literal"], [6, 0, 1, "", "ensure_literal_type"], [6, 0, 1, "", "ensure_operation"], [6, 2, 1, "", "ensure_operator"], [6, 3, 1, "", "ensure_prints_exactly"], [6, 0, 1, "", "ensure_starting_code"], [6, 3, 1, "", "files_not_handled_correctly"], [6, 3, 1, "", "function_prints"], [6, 3, 1, "", "has_import"], [6, 0, 1, "", "only_printing_variables"], [6, 0, 1, "", "open_without_arguments"], [6, 3, 1, "", "prevent_advanced_iteration"], [6, 0, 1, "", "prevent_ast"], [6, 0, 1, "", "prevent_embedded_answer"], [6, 0, 1, "", "prevent_function_call"], [6, 0, 1, "", "prevent_import"], [6, 0, 1, "", "prevent_literal"], [6, 0, 1, "", "prevent_literal_type"], [6, 0, 1, "", "prevent_operation"], [6, 2, 1, "", "prevent_operator"], [6, 0, 1, "", "prevent_printing_functions"]], "pedal.assertions.static.ensure_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_documented_functions": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_functions_return": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_starting_code": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.only_printing_variables": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_embedded_answer": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_printing_functions": [[6, 1, 1, "", "condition"]], "pedal.cait": [[7, 4, 0, "-", "cait_api"], [7, 4, 0, "-", "find_node"]], "pedal.cait.cait_api": [[7, 5, 1, "", "CaitException"], [7, 3, 1, "", "data_state"], [7, 3, 1, "", "data_type"], [7, 3, 1, "", "def_use_error"], [7, 3, 1, "", "expire_cait_cache"], [7, 3, 1, "", "find_asts"], [7, 3, 1, "", "find_expr_sub_matches"], [7, 3, 1, "", "find_match"], [7, 3, 1, "", "find_matches"], [7, 3, 1, "", "find_submatches"], [7, 3, 1, "", "parse_program"], [7, 3, 1, "", "reparse_if_needed"], [7, 3, 1, "", "require_tifa"], [7, 3, 1, "", "reset"]], "pedal.cait.find_node": [[7, 3, 1, "", "find_function_calls"], [7, 3, 1, "", "find_function_definition"], [7, 3, 1, "", "find_operation"], [7, 3, 1, "", "find_prior_initializations"], [7, 3, 1, "", "function_is_called"], [7, 3, 1, "", "is_top_level"]], "pedal.command_line.modes": [[19, 0, 1, "", "DebugPipeline"], [19, 0, 1, "", "FeedbackPipeline"], [19, 0, 1, "", "GradePipeline"], [19, 0, 1, "", "RunPipeline"], [19, 0, 1, "", "SandboxPipeline"], [19, 0, 1, "", "StatsPipeline"], [19, 0, 1, "", "VerifyPipeline"]], "pedal.core": [[0, 4, 0, "-", "commands"], [0, 4, 0, "-", "environment"], [0, 4, 0, "-", "feedback"], [0, 4, 0, "-", "feedback_category"], [0, 4, 0, "-", "location"], [0, 4, 0, "-", "report"], [0, 4, 0, "-", "submission"], [0, 4, 0, "-", "tool"]], "pedal.core.commands": [[0, 0, 1, "", "Feedback"], [0, 3, 1, "", "clear_report"], [0, 0, 1, "", "compliment"], [0, 3, 1, "", "contextualize_report"], [0, 3, 1, "", "debug"], [0, 0, 1, "", "explain"], [0, 2, 1, "", "feedback"], [0, 0, 1, "", "gently"], [0, 3, 1, "", "get_all_feedback"], [0, 3, 1, "", "get_submission"], [0, 0, 1, "", "give_partial"], [0, 0, 1, "", "guidance"], [0, 3, 1, "", "hide_correctness"], [0, 3, 1, "", "log"], [0, 0, 1, "", "set_correct"], [0, 3, 1, "", "set_formatter"], [0, 2, 1, "", "set_success"], [0, 3, 1, "", "suppress"], [0, 0, 1, "", "system_error"]], "pedal.core.commands.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.environment": [[0, 0, 1, "", "Environment"]], "pedal.core.feedback": [[0, 3, 1, "", "CompositeFeedbackFunction"], [0, 0, 1, "", "Feedback"], [0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackResponse"]], "pedal.core.feedback.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.feedback.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.feedback_category": [[0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackStatus"]], "pedal.core.feedback_category.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback_category.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.location": [[0, 0, 1, "", "Location"]], "pedal.core.location.Location": [[0, 2, 1, "", "col"], [0, 2, 1, "", "end_col"], [0, 2, 1, "", "end_line"], [0, 2, 1, "", "filename"], [0, 1, 1, "", "from_ast"], [0, 2, 1, "", "line"], [0, 1, 1, "", "to_json"]], "pedal.core.report": [[0, 6, 1, "", "MAIN_REPORT"], [0, 0, 1, "", "Report"]], "pedal.core.report.Report": [[0, 2, 1, "", "TOOLS"], [0, 2, 1, "", "_tool_data"], [0, 1, 1, "", "add_class_hook"], [0, 1, 1, "", "add_feedback"], [0, 1, 1, "", "add_hook"], [0, 1, 1, "", "add_ignored_feedback"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "contextualize"], [0, 1, 1, "", "execute_hooks"], [0, 2, 1, "", "feedback"], [0, 1, 1, "", "full_clear"], [0, 2, 1, "", "group"], [0, 2, 1, "", "group_names"], [0, 2, 1, "", "hiddens"], [0, 1, 1, "", "hide_correctness"], [0, 2, 1, "", "hooks"], [0, 1, 1, "", "register_tool"], [0, 2, 1, "", "resolves"], [0, 2, 1, "", "result"], [0, 1, 1, "", "set_formatter"], [0, 1, 1, "", "stop_group"], [0, 2, 1, "", "submission"], [0, 1, 1, "", "suppress"], [0, 2, 1, "", "suppressions"]], "pedal.core.submission": [[0, 0, 1, "", "Submission"]], "pedal.core.submission.Submission": [[0, 2, 1, "", "assignment"], [0, 2, 1, "", "course"], [0, 2, 1, "", "execution"], [0, 2, 1, "", "files"], [0, 1, 1, "", "get_files_lines"], [0, 1, 1, "", "get_lines"], [0, 2, 1, "", "main_code"], [0, 2, 1, "", "main_file"], [0, 1, 1, "", "replace_main"], [0, 1, 1, "", "set_line_offset"], [0, 2, 1, "", "user"]], "pedal.core.tool": [[0, 0, 1, "", "ToolRegistration"]], "pedal.core.tool.ToolRegistration": [[0, 2, 1, "", "name"], [0, 2, 1, "", "reset"]], "pedal.extensions": [[8, 4, 0, "-", "plotting"], [8, 4, 0, "-", "turtles"]], "pedal.extensions.plotting": [[8, 0, 1, "", "BadGraphFeedback"], [8, 3, 1, "", "assert_plot"], [8, 3, 1, "", "compare_data"], [8, 3, 1, "", "ensure_correct_plot"], [8, 0, 1, "", "ensure_show"], [8, 3, 1, "", "get_plots"], [8, 0, 1, "", "no_plt"], [8, 0, 1, "", "other_plt"], [8, 0, 1, "", "plt_rename_err"], [8, 0, 1, "", "plt_wrong_import"], [8, 3, 1, "", "prevent_incorrect_plt"], [8, 0, 1, "", "wrong_plt_data"], [8, 0, 1, "", "wrong_plt_type"]], "pedal.extensions.plotting.ensure_show": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_rename_err": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_wrong_import": [[8, 1, 1, "", "condition"]], "pedal.questions": [[9, 4, 0, "-", "setup"]], "pedal.questions.setup": [[9, 3, 1, "", "reset"], [9, 3, 1, "", "set_seed"]], "pedal.sandbox": [[10, 4, 0, "-", "commands"], [10, 4, 0, "-", "feedbacks"], [10, 3, 1, "", "reset"], [10, 4, 0, "-", "sandbox"]], "pedal.sandbox.commands": [[10, 0, 1, "", "CommandBlock"], [10, 3, 1, "", "allow_function"], [10, 3, 1, "", "allow_module"], [10, 3, 1, "", "allow_real_io"], [10, 3, 1, "", "block_function"], [10, 3, 1, "", "block_module"], [10, 3, 1, "", "block_real_io"], [10, 3, 1, "", "call"], [10, 3, 1, "", "check_coverage"], [10, 3, 1, "", "clear_input"], [10, 3, 1, "", "clear_mocks"], [10, 3, 1, "", "clear_output"], [10, 3, 1, "", "clear_sandbox"], [10, 3, 1, "", "clear_student_data"], [10, 3, 1, "", "count_unique_calls"], [10, 3, 1, "", "evaluate"], [10, 3, 1, "", "get_call_arguments"], [10, 3, 1, "", "get_exception"], [10, 3, 1, "", "get_function"], [10, 3, 1, "", "get_input"], [10, 3, 1, "", "get_module"], [10, 3, 1, "", "get_output"], [10, 3, 1, "", "get_python_errors"], [10, 3, 1, "", "get_raw_output"], [10, 3, 1, "", "get_sandbox"], [10, 3, 1, "", "get_student_data"], [10, 3, 1, "", "get_trace"], [10, 3, 1, "", "mock_function"], [10, 3, 1, "", "mock_module"], [10, 3, 1, "", "queue_input"], [10, 3, 1, "", "reset_output"], [10, 3, 1, "", "run"], [10, 3, 1, "", "set_input"], [10, 3, 1, "", "start_trace"], [10, 3, 1, "", "stop_trace"]], "pedal.sandbox.feedbacks": [[10, 0, 1, "", "attribute_error"], [10, 0, 1, "", "import_error"], [10, 0, 1, "", "indentation_error"], [10, 0, 1, "", "index_error"], [10, 0, 1, "", "io_error"], [10, 0, 1, "", "key_error"], [10, 0, 1, "", "memory_error"], [10, 0, 1, "", "name_error"], [10, 0, 1, "", "runtime_error"], [10, 0, 1, "", "timeout_error"], [10, 0, 1, "", "type_error"], [10, 0, 1, "", "value_error"], [10, 0, 1, "", "zero_division_error"]], "pedal.sandbox.feedbacks.runtime_error": [[10, 2, 1, "", "context"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "exception_message"], [10, 2, 1, "", "exception_name"], [10, 2, 1, "", "traceback"], [10, 2, 1, "", "traceback_message"]], "pedal.sandbox.sandbox": [[10, 0, 1, "", "Sandbox"]], "pedal.sandbox.sandbox.Sandbox": [[10, 2, 1, "", "MAXIMUM_TEMPORARY_LENGTH"], [10, 2, 1, "", "_context"], [10, 2, 1, "", "_current_patches"], [10, 2, 1, "", "_next_context_id"], [10, 1, 1, "", "allow_module"], [10, 2, 1, "", "allowed_time"], [10, 1, 1, "", "append_output"], [10, 1, 1, "", "block_module"], [10, 1, 1, "", "call"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_context"], [10, 1, 1, "", "clear_exception"], [10, 1, 1, "", "clear_input"], [10, 1, 1, "", "clear_mocked_function"], [10, 1, 1, "", "clear_mocks"], [10, 1, 1, "", "clear_output"], [10, 1, 1, "", "clear_tracer"], [10, 2, 1, "", "data"], [10, 1, 1, "", "evaluate"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "feedback"], [10, 7, 1, "", "functions"], [10, 1, 1, "", "get_context"], [10, 1, 1, "", "get_function"], [10, 1, 1, "", "get_names_by_type"], [10, 1, 1, "", "get_values_by_type"], [10, 1, 1, "", "get_variables_by_type"], [10, 2, 1, "", "inputs"], [10, 1, 1, "", "make_safe_variable"], [10, 1, 1, "", "mock_module"], [10, 2, 1, "", "output"], [10, 2, 1, "", "raw_output"], [10, 1, 1, "", "reset_default_overrides"], [10, 2, 1, "", "result"], [10, 1, 1, "", "run"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "set_student_data"], [10, 1, 1, "", "start_grouping_context"], [10, 1, 1, "", "stop_grouping_context"], [10, 2, 1, "", "target"], [10, 2, 1, "", "tracer_style"], [10, 7, 1, "", "var"]], "pedal.sandbox.sandbox.Sandbox.modules": [[10, 2, 1, "", "plots"], [10, 2, 1, "", "turtles"]], "pedal.source": [[11, 4, 0, "-", "source"]], "pedal.source.source": [[11, 3, 1, "", "get_original_program"], [11, 3, 1, "", "get_program"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "restore_code"], [11, 3, 1, "", "set_source"], [11, 3, 1, "", "set_source_file"], [11, 3, 1, "", "verify"], [11, 3, 1, "", "verify_section"]], "pedal.tifa": [[12, 0, 1, "", "Tifa"], [12, 3, 1, "", "tifa_analysis"]], "pedal.tifa.Tifa": [[12, 1, 1, "", "assign_target"], [12, 1, 1, "", "process_ast"], [12, 1, 1, "", "process_code"], [12, 1, 1, "", "visit"], [12, 1, 1, "", "visit_AnnAssign"], [12, 1, 1, "", "visit_Assign"], [12, 1, 1, "", "visit_Attribute"], [12, 1, 1, "", "visit_AugAssign"], [12, 1, 1, "", "visit_BinOp"], [12, 1, 1, "", "visit_Bool"], [12, 1, 1, "", "visit_BoolOp"], [12, 1, 1, "", "visit_ClassDef"], [12, 1, 1, "", "visit_Compare"], [12, 1, 1, "", "visit_Constant"], [12, 1, 1, "", "visit_Dict"], [12, 1, 1, "", "visit_DictComp"], [12, 1, 1, "", "visit_Expr"], [12, 1, 1, "", "visit_For"], [12, 1, 1, "", "visit_FunctionDef"], [12, 1, 1, "", "visit_GeneratorExp"], [12, 1, 1, "", "visit_If"], [12, 1, 1, "", "visit_IfExp"], [12, 1, 1, "", "visit_Import"], [12, 1, 1, "", "visit_ImportFrom"], [12, 1, 1, "", "visit_Lambda"], [12, 1, 1, "", "visit_List"], [12, 1, 1, "", "visit_ListComp"], [12, 1, 1, "", "visit_Name"], [12, 1, 1, "", "visit_NameConstant"], [12, 1, 1, "", "visit_Num"], [12, 1, 1, "", "visit_Return"], [12, 1, 1, "", "visit_SetComp"], [12, 1, 1, "", "visit_Slice"], [12, 1, 1, "", "visit_Str"], [12, 1, 1, "", "visit_Subscript"], [12, 1, 1, "", "visit_UnaryOp"], [12, 1, 1, "", "visit_While"], [12, 1, 1, "", "visit_With"], [12, 1, 1, "", "visit_comprehension"], [12, 1, 1, "", "visit_statements"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:module", "5": "py:exception", "6": "py:data", "7": "py:property"}, "terms": {"": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33], "0": [0, 3, 6, 9, 12, 20, 21, 23, 25, 26, 29, 30, 31, 32], "0000": 20, "0000001": 29, "0001": 29, "001": [6, 29], "01": 20, "013": 20, "05": 20, "1": [0, 1, 3, 4, 6, 12, 16, 20, 23, 26, 29, 30, 31, 32], "10": [16, 20, 23, 28, 29], "100": [21, 23, 29], "1000": 18, "11": 20, "12": 20, "12323": 16, "13": [20, 23], "14": 25, "15": 20, "1998": 20, "1d": 28, "2": [0, 1, 16, 20, 23, 28, 29, 31, 32], "20": 20, "2005": 20, "201": 20, "2010": 20, "2013": 20, "2015": 20, "2019": 20, "2020": 20, "2021": 20, "256": 9, "27": 23, "29": [20, 23], "29am": 20, "2d": 28, "3": [12, 15, 16, 20, 23, 28, 29, 31, 32], "30": 20, "3000": 20, "31": 20, "32": 20, "35": 23, "38pm": 20, "4": [12, 20, 23, 28, 29, 31], "47": 23, "5": [0, 6, 16, 20, 23, 26, 27, 28, 29, 32], "50": [3, 20, 29], "6": [15, 16, 20, 21, 23, 29], "63": 23, "7": [15, 16, 20, 23, 29, 30], "8": [12, 20], "9": [20, 29], "90": 29, "9999": 20, "A": [0, 3, 4, 6, 7, 8, 10, 12, 14, 19, 22, 23, 26, 27, 28, 29, 30], "AND": [3, 6], "And": 29, "As": [23, 27, 28], "At": 16, "Be": 26, "But": [3, 4, 10, 20, 23, 29, 33], "By": [0, 3, 10, 14, 19, 21, 25, 26, 30, 32], "FORs": 12, "For": [0, 3, 6, 7, 12, 15, 16, 19, 20, 23, 25, 26, 28, 29, 30, 32], "IF": [0, 20], "IFs": 12, "If": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32], "In": [0, 3, 6, 10, 19, 20, 23, 25, 29], "It": [0, 3, 10, 14, 19, 20, 23, 24, 30, 32, 33, 34], "Its": [0, 23], "NOT": [0, 3, 4, 27], "No": [0, 10, 12, 20, 21, 31, 32], "Not": [3, 20, 26, 29, 31, 32, 33], "OR": 6, "Of": 0, "One": [0, 3, 10, 33], "Or": [20, 21, 23, 27, 28], "Such": 14, "THAT": 3, "That": [0, 3], "The": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33], "Then": [3, 23], "There": [0, 2, 3, 16, 19, 23, 32, 33], "These": [0, 2, 3, 4, 14, 23, 27, 30], "To": [10, 25, 29], "Will": [0, 10, 27], "_": [10, 30], "___": [3, 16, 20, 23, 25, 33], "____": [16, 20], "__all__": 0, "__dataclass_fields__": 29, "__exit__": 4, "__exp__": 25, "__import__": 10, "__init__": [0, 3], "__initial__": 23, "__targets__": 12, "__value__": 12, "__version__": 20, "_accumulator_": 23, "_activ": 4, "_context": 10, "_current_patch": 10, "_expr_": 16, "_field": 4, "_function_": 25, "_get_child_feedback": 3, "_handle_condit": 3, "_item_": 25, "_list_": [16, 25], "_my_func_": 25, "_next_context_id": 10, "_special_custom_help": 16, "_sum_": 25, "_thread": 4, "_tool_data": 0, "_var_": 25, "a_dog": 33, "abl": [0, 3, 4, 10, 20, 30, 32], "about": [0, 3, 4, 6, 10, 12, 14, 20, 22, 23, 26, 29, 30, 32], "abov": [15, 16, 19, 23, 25], "absolut": 4, "abstract": 0, "acbart": [0, 13, 20], "accept": [0, 7, 19, 29, 32], "access": [0, 3, 10, 12, 21, 23, 25, 30], "accomplish": 10, "accordingli": 26, "account": 29, "accumul": [11, 23], "accur": [16, 20], "achiev": 21, "across": [6, 9], "act": 10, "actaul": 29, "action": 33, "action_after_return": 33, "activ": [0, 3, 6, 8, 24, 27], "actual": [0, 3, 4, 6, 8, 10, 12, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33], "actual_count": 33, "actual_messag": 32, "ad": [0, 3, 4, 10, 14, 15, 16, 23, 25, 26, 30], "ada": [23, 26], "adapt": [0, 28], "add": [0, 3, 7, 10, 14, 23, 29, 30, 32], "add_3": 20, "add_class_hook": 0, "add_feedback": 0, "add_hook": 0, "add_ignored_feedback": 0, "add_numb": 23, "add_pric": 16, "addit": [0, 3, 10, 14, 16, 19, 20, 21, 23, 25, 26, 28, 29, 32], "addition": 12, "addition_error": 3, "adequ": 29, "adjac": [4, 19], "adjust": [14, 30], "advanc": [0, 6, 23, 31], "adventur": 20, "affect": 0, "after": [10, 20, 23, 28, 31, 33], "afterthought": 17, "ag": 32, "against": [0, 6, 7], "aggreg": 3, "aka": [0, 6, 29], "algorithm": [0, 3, 23, 26], "alia": [0, 6, 29], "alias": 29, "all": [0, 3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33], "all_docu": 20, "allow": [0, 3, 4, 6, 10, 14, 16, 22, 23, 29, 30, 32], "allow_for": [6, 32], "allow_funct": [5, 6, 10, 24, 30, 32], "allow_modul": [5, 10, 24, 30], "allow_real_io": [5, 10, 24, 30], "allow_whil": [6, 32], "allowed_tim": 10, "almost": [0, 1, 3, 4, 6, 15, 26], "along": [0, 14, 20, 21, 32], "alpha": 30, "alreadi": [0, 10, 23, 30, 33], "also": [0, 3, 4, 6, 10, 11, 14, 16, 17, 19, 21, 22, 23, 25, 26, 29, 30, 32], "altern": [0, 4, 10, 16, 21, 29, 32], "alternate_filenam": 19, "although": [0, 3, 4, 10, 14, 15, 19, 23, 29, 30, 32], "alwai": [3, 12, 14, 23, 26], "am": [4, 20], "among": [16, 23], "amount": [3, 14, 20, 23], "an": [0, 3, 4, 6, 7, 9, 10, 11, 12, 14, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33], "analys": 12, "analysi": [0, 3, 7, 12, 16, 17, 19, 23, 27, 33], "analyz": [0, 3, 12, 14, 16, 17, 19, 20], "anecdot": 23, "ani": [0, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33], "annassign": 12, "annot": [20, 32], "anoth": [0, 3, 7, 14, 20, 29, 32, 33], "answer": [0, 11, 20, 23, 26, 32], "anyth": [0, 27, 30], "anywher": [6, 20, 21], "api": [14, 17, 19, 24], "appear": [0, 3, 6, 10, 23, 30], "append": [10, 20, 33], "append_output": 10, "append_to_non_list": 33, "appli": [0, 6, 7], "appreci": 20, "approach": 3, "appropri": [3, 10, 12, 16, 21, 23, 28, 29], "ar": [0, 2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33], "arbitrari": [10, 16, 30], "architectur": 17, "archiv": 19, "aren": [0, 18, 22], "arg": [0, 3, 6, 8, 10, 20, 25], "args_loc": 10, "argument": [0, 1, 3, 4, 6, 10, 23, 25, 26, 29, 30, 32, 33], "argument_type_nam": 33, "argv": [4, 10], "arithmet": 17, "ariti": [6, 16, 20, 23, 32, 33], "around": [4, 12, 29, 32], "arrow": 20, "aspect": 23, "assert": [0, 4, 5, 8, 17, 20, 24, 30], "assert_": [23, 29], "assert_almost_equ": [5, 6], "assert_contains_subset": [5, 6, 24, 29], "assert_coverag": 6, "assert_equ": [3, 5, 6, 16, 23, 24, 29], "assert_fals": [5, 6, 24, 29], "assert_funct": [6, 29], "assert_great": [5, 6, 24, 29], "assert_greater_equ": [5, 6, 24, 29], "assert_has_attr": [5, 6, 24, 29], "assert_has_class": 6, "assert_has_funct": [5, 6, 24, 29], "assert_has_vari": [5, 6, 24, 29], "assert_i": [5, 6, 24, 29], "assert_in": [5, 6, 24, 29], "assert_is_dataclass": [5, 6, 24, 29], "assert_is_inst": [5, 6, 24, 29], "assert_is_non": [5, 6, 24, 29], "assert_is_not": [5, 6, 24, 29], "assert_is_not_dataclass": [5, 6, 24, 29], "assert_is_not_inst": [24, 29], "assert_is_not_non": [5, 6, 24, 29], "assert_length_equ": [5, 6, 24, 29], "assert_length_great": [5, 6, 24, 29], "assert_length_greater_equ": [5, 6, 24, 29], "assert_length_less": [5, 6, 24, 29], "assert_length_less_equ": [5, 6, 24, 29], "assert_length_not_equ": [5, 6, 24, 29], "assert_less": [5, 6, 24, 29], "assert_less_equ": [5, 6, 24, 29], "assert_not_almost_equ": [5, 6], "assert_not_contains_subset": [5, 6, 24, 29], "assert_not_equ": [5, 6, 24, 29], "assert_not_in": [5, 6, 24, 29], "assert_not_is_inst": [5, 6, 29], "assert_not_output": [5, 6, 24, 29], "assert_not_output_contain": [5, 6, 24, 29], "assert_not_output_regex": [5, 6], "assert_not_regex": [5, 6, 24, 29], "assert_not_typ": [5, 6, 24, 29], "assert_output": [5, 6, 20, 23, 24, 29], "assert_output_contain": [5, 6, 24, 29], "assert_output_regex": [5, 6], "assert_plot": [5, 8], "assert_print": [5, 6, 29], "assert_ran": 6, "assert_regex": [5, 6, 24, 29], "assert_tru": [5, 6, 24, 29], "assert_typ": [5, 6, 24, 29], "assertalmostequ": [5, 6, 29], "assertequ": [5, 6, 16, 20, 29], "assertfals": [5, 6, 29], "assertgener": 20, "assertgraphtyp": 6, "assertgraphvalu": 6, "assertgreat": [5, 6, 20, 29], "assertgreaterequ": [5, 6, 20, 29], "assertha": 20, "asserthasattr": [5, 6, 29], "asserthasfunct": [5, 6, 20, 29], "asserthasvari": [5, 6, 29], "asserti": [5, 6, 29], "assertin": [5, 6, 20, 29], "assertion_messag": 29, "assertionerror": 16, "assertisinst": [5, 6, 20, 29], "assertisnon": [5, 6, 29], "assertisnot": [5, 6, 29], "assertisnotinst": [5, 6, 29], "assertisnotnon": [5, 6, 29], "assertlengthequ": [5, 6, 29], "assertlengthgreat": [5, 6, 29], "assertlengthgreaterequ": [5, 6, 29], "assertlengthless": [5, 6, 29], "assertlengthlessequ": [5, 6, 29], "assertlengthnotequ": [5, 6, 29], "assertless": [5, 6, 29], "assertlessequ": [5, 6, 29], "assertnotalmostequ": [5, 6, 29], "assertnotequ": [5, 6, 29], "assertnotin": [5, 6, 29], "assertnotoutput": [5, 6, 29], "assertnotoutputcontain": [5, 6, 29], "assertnotregex": [5, 6, 29], "assertnottyp": [5, 6, 29], "assertoutput": [5, 6, 29], "assertoutputcontain": [5, 6, 29], "assertprint": [5, 6, 29], "assertregex": [5, 6, 29], "asserttru": [5, 6, 29], "asserttyp": [5, 6, 29], "assign": [0, 3, 7, 10, 12, 14, 19, 20, 21, 23, 30], "assign_target": 12, "assigned_literal_value_to_answ": 23, "assigned_to_answ": 23, "assignment_nam": 19, "associ": [0, 3, 10, 11, 16], "assum": [0, 10, 26, 28, 32], "ast": [0, 4, 6, 7, 11, 12, 17, 20, 25, 31, 32], "ast_map": 7, "ast_nam": [20, 32], "ast_nod": [7, 25], "ast_tre": 12, "astmap": 7, "astnod": 7, "asymmetri": 29, "at_least": [6, 20, 23, 29, 32], "at_least_messag": 29, "at_most": [6, 20, 23, 32], "atom": [0, 3, 14], "atomicfeedbackfunct": 14, "attach": [0, 3, 7, 10, 12, 14, 26, 30, 33], "attempt": [0, 3, 4, 10, 14, 22, 24, 30, 33], "attent": 3, "attr": [6, 29], "attribut": [0, 3, 4, 10, 12, 23, 25, 29], "attribute_error": [5, 10], "attributeerror": 10, "augassign": 12, "austin": 13, "author": [0, 6, 8, 14, 20, 24, 28], "autograd": [0, 14, 15, 16, 17, 19, 23, 27], "autom": 3, "automat": [0, 3, 10, 16, 19, 21, 23, 30], "auxiliari": 0, "avail": [0, 4, 10, 12, 21, 24, 25, 26, 29, 30, 31, 32], "averag": 0, "avoid": [0, 4, 14, 19, 22, 26, 29, 30], "award": 3, "b": [20, 27], "babbag": 23, "back": [0, 3, 11, 14, 16, 20, 31], "bad": 31, "badgraphfeedback": [5, 8], "bart": [0, 13, 23, 26], "base": [0, 3, 7, 10, 14, 21, 28], "bash": 21, "basic": [2, 17, 23, 26, 29], "batch": 19, "bdb": 4, "bdbquit": 4, "beat": 32, "becam": 3, "becaus": [0, 4, 6, 10, 12, 14, 27, 29, 32], "becom": 3, "been": [0, 6, 10, 11, 12, 14, 21, 23, 30, 32, 33], "befor": [0, 10, 11, 12, 20, 23, 28, 31, 32, 33], "began": 10, "begin": 16, "behav": 23, "behavior": [0, 3, 10, 27, 28, 29], "behind": [0, 10], "being": [0, 3, 6, 8, 10, 12, 14, 19, 27, 30], "believ": [0, 4, 16, 21], "belong": 0, "below": 16, "benefit": 24, "besid": [3, 26], "best": [14, 29], "beta": 20, "better": [0, 3, 30], "between": [0, 3, 6, 8], "big": 4, "bin": 21, "binari": [6, 7, 32], "bit": [14, 29], "bitwis": [3, 32], "blank": [29, 31], "blank_sourc": 31, "block": [6, 10, 20, 21, 28, 30, 32, 33], "block_funct": [5, 10, 24, 30], "block_modul": [5, 10, 24, 30], "block_real_io": [5, 10, 24, 30], "blockedmodul": 20, "blockpi": [0, 1, 4, 10, 14, 16, 17, 19, 23, 28, 30], "bodi": [20, 23, 25, 33], "boilerpl": 23, "book": 16, "bool": [0, 3, 6, 7, 8, 10, 11, 12, 20, 23, 26, 29, 32], "boolean": [0, 3, 6, 7, 12, 29, 32], "booltyp": 25, "both": [0, 6, 7, 10, 21, 23, 26, 28, 33], "bottom": 21, "brace": [4, 27], "bracket": 4, "branch": [7, 32, 33], "break": [0, 3, 28, 31, 33], "breaker": 4, "breviti": 25, "briefli": 0, "broadcast": 0, "broke": 30, "browser": 1, "bug": 0, "bui": 20, "build": [0, 3, 4, 14], "built": [0, 4, 8, 10, 17, 20, 24, 25, 29, 30, 32], "builtin": [4, 10, 30], "bunch": 29, "bundl": [12, 23], "by_nam": 10, "bypass": 29, "c": [19, 20, 27], "c_long": 4, "cach": [7, 19], "cait": [0, 4, 5, 6, 17, 20, 23, 24, 32], "cait_api": 25, "cait_nod": [6, 7], "caitexcept": [5, 7], "caitexpress": 7, "caitnod": [0, 6, 7, 10, 25], "calcul": [3, 4, 12, 20, 29], "call": [0, 3, 4, 5, 6, 7, 8, 10, 12, 16, 17, 24, 28, 29, 30, 31, 32, 33], "callabl": [0, 8, 10, 29], "callback": 0, "camelcas": 29, "can": [0, 1, 2, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33], "cannot": [0, 4, 12, 20, 29, 33], "capabl": 28, "capac": 32, "captur": [4, 7, 16, 19], "card": 23, "care": [3, 14, 26, 28], "caret": 3, "cascad": 0, "case": [0, 3, 6, 20, 23, 27, 28, 29, 32], "cat": 17, "catch": 4, "categor": 27, "categori": [0, 2, 3, 6, 8, 14, 22, 24, 26, 27, 30], "caus": [0, 10, 12, 23], "cell": 21, "central": [0, 14, 16, 17, 23], "certain": [1, 6, 19, 23, 25, 29], "certainli": 0, "chaff": 6, "chain": [3, 12], "chang": [0, 3, 4, 6, 10, 12, 21, 27, 29, 32, 33], "changelog": 0, "charact": [6, 28, 29, 31], "characterist": [12, 29], "cheat": 29, "check": [0, 3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 17, 19, 20, 21, 25, 28, 29, 30, 31, 32, 33], "check_coverag": [5, 10, 24, 30], "check_dataclass_error": [5, 6], "check_dataclass_inst": [24, 29], "check_mark": 28, "check_section_exist": 31, "checker": [29, 34], "child": [3, 7, 25], "chmod": 21, "choic": 19, "choos": [3, 16, 19, 20, 23, 26, 27, 30, 33], "chop": [6, 29], "chose": 3, "chosen": 27, "chunk": [0, 3, 11], "circumst": 30, "cisc108": 20, "cl": [6, 29], "clariti": 4, "class": [0, 2, 3, 4, 6, 8, 10, 12, 19, 25, 27, 28, 29, 30, 32], "classic": 6, "classifi": 0, "classmethod": 0, "clean": 10, "clean_data": 32, "clear": [0, 10, 26, 29, 30], "clear_context": 10, "clear_except": 10, "clear_input": [5, 10, 24, 30], "clear_mock": [5, 10, 24, 30], "clear_mocked_funct": 10, "clear_output": [5, 10, 24, 30], "clear_report": [0, 24, 26], "clear_sandbox": [5, 10, 24, 30], "clear_student_data": [5, 10, 24, 30], "clear_trac": 10, "clearli": [0, 3, 16, 29], "cli": 19, "clickabl": 3, "close": [6, 20, 26, 29, 32], "closur": 12, "code": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32], "codebas": 14, "coher": 14, "col": 0, "collaps": 30, "collect": [0, 6, 10, 17, 23], "color": 3, "column": [0, 28], "com": [15, 21], "combin": [0, 3, 14], "come": [3, 16, 19, 21, 33], "comfort": [23, 29], "command": [1, 6, 10, 14, 17, 20, 21, 24, 25, 28], "command_lin": 4, "commandblock": [5, 6, 10, 24, 30], "comment": [29, 32], "common": [0, 12, 14, 16, 19, 20, 23, 30, 32], "compar": [6, 10, 19, 20, 29], "compare_data": [5, 8], "comparison": [4, 6, 7, 8, 29, 32], "compat": [4, 16, 17], "compatibl": 17, "compil": [4, 10, 17, 19], "complement": 23, "complet": [0, 3, 4, 10, 20, 23, 26, 27, 34], "complex": [3, 12, 16, 17, 19, 23, 26, 27], "compliant": 4, "complic": 29, "compliment": [0, 6, 16, 20, 23, 24, 26, 32], "compon": [0, 12, 16], "compos": [3, 23], "composit": [0, 3, 14, 27], "compositefeedbackfunct": 0, "comprehens": 32, "comput": [10, 32], "concaten": [4, 10], "concept": [12, 14, 17, 27], "concern": 10, "concis": 29, "conclus": [16, 20], "concret": 14, "condens": 14, "condit": [0, 3, 6, 8, 14, 16, 22, 23, 26, 27], "condition": 3, "config": 19, "configur": [0, 11, 14, 19, 21, 26, 33], "confirm": [7, 8, 20, 32], "conflict": 10, "confus": 29, "conjunct": 29, "connect": 33, "consid": [0, 3, 7, 11, 19], "consist": [0, 4, 33, 34], "consol": [0, 10, 19, 28, 30], "constant": [0, 2, 3, 12], "constant_field": 3, "constraint": 0, "construct": [0, 6, 10, 27], "constructor": 3, "consult": 27, "consum": [3, 20, 29], "contact": 17, "contain": [0, 3, 4, 6, 10, 11, 12, 14, 19, 20, 25, 29, 30], "content": [0, 11, 20, 29], "context": [0, 3, 4, 6, 8, 10, 12, 16, 19, 20, 29, 30], "context_id": 10, "context_messag": 29, "contextu": [0, 11, 26, 31], "contextualize_report": [0, 20, 23, 24, 26], "continu": 7, "contribut": [0, 3], "control": [0, 3, 12, 14, 16, 17, 19, 20, 21, 27, 29], "conveni": [0, 4, 14, 23, 26, 29, 31], "convent": [0, 3, 17], "convers": [4, 27, 28, 29], "convert": [0, 20, 29, 30], "coordin": 14, "copi": 10, "core": [3, 6, 7, 8, 9, 10, 11, 12, 17, 24], "cori": [0, 13], "correct": [0, 3, 6, 8, 19, 20, 23, 24, 26, 27, 28, 32], "correct_stori": 20, "correctli": [0, 6, 7, 8, 23, 26, 29, 32], "correspond": [9, 10, 14, 27, 32], "cost": 20, "could": [0, 3, 4, 6, 8, 10, 14, 16, 23, 26, 31], "couldn": 4, "count": [3, 4, 6, 10, 29, 31, 32], "count_unique_cal": [5, 10, 24, 30], "cours": [0, 14, 17, 20], "cover": [6, 20, 29], "coverag": [4, 6, 10, 20, 29], "coverage_messag": 29, "cpython": [4, 29], "crash": [18, 19], "crazi": 2, "creat": [0, 4, 6, 10, 11, 14, 16, 17, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31], "create_output": 19, "create_world": 20, "create_world_compon": 20, "create_world_don": 20, "creation": 3, "creator": 3, "credit": [3, 6, 16, 23, 26, 32], "criteria": 7, "critic": [3, 17, 19, 22], "cross": 28, "csv": 19, "ctvt": 21, "ctype": 4, "cumbersom": 0, "curli": 27, "current": [0, 3, 4, 6, 7, 10, 11, 12, 19, 26, 27, 29, 30, 31, 32, 33], "curriculum": 21, "curriculum_snek": 20, "custom": [0, 3, 4, 10, 16, 17, 21, 26], "cut": 7, "cutom": 32, "d": [0, 3, 9, 11, 20, 30], "data": [0, 3, 6, 8, 9, 10, 12, 14, 19, 20, 23, 24, 26, 27, 28, 30, 32], "data_st": [5, 7, 25], "data_typ": [5, 7, 25], "dataclass": [4, 6, 29, 32], "dataclass_not_avail": 32, "dataset": 19, "date": 20, "datetim": 20, "db": 19, "dc_annot": 32, "de": 20, "deactiv": 0, "deal": 4, "debug": [0, 1, 3, 19, 24, 26, 32], "debugpipelin": 19, "decid": [0, 3, 4], "decim": [6, 29], "decis": [0, 33], "declar": [3, 16, 23, 33], "decor": [0, 14], "deeper": 16, "def": [3, 16, 20, 25, 30, 32], "def_use_error": [5, 7], "default": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 19, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33], "defeat": 32, "defin": [0, 3, 4, 6, 10, 16, 17, 19, 25, 29, 30, 32, 33], "definit": [6, 7, 20, 24, 32, 33], "delai": [0, 3], "delawar": 13, "delay_condit": [0, 3, 6, 8], "delet": [0, 7, 12], "delic": 3, "deliv": [0, 11, 14, 19, 23], "delta": [6, 29], "demand": 26, "denni": 13, "denot": 23, "depend": [1, 4, 6, 15, 25, 27], "depened": 0, "deploy": 1, "deprec": [6, 7], "depth": 3, "descend": [3, 4], "describ": [0, 3, 24, 27], "descript": [0, 3, 6, 7, 11, 19, 23, 27], "deseri": 3, "design": [4, 15, 17], "desir": [0, 3, 10, 21, 29], "despit": 29, "destroi": 10, "detail": [16, 23, 29], "detect": [0, 3, 6, 8, 10, 14, 16, 23, 26, 32], "detector": 0, "determin": [3, 6, 7, 8, 14, 20, 29], "determinist": 9, "develop": [13, 17, 21, 24, 27], "diagram": 16, "dict": [0, 3, 6, 7, 8, 10, 11, 20, 26, 27, 30, 32], "dictionari": [0, 3, 6, 7, 10, 12, 26, 30, 32], "dicttyp": 25, "did": [0, 20, 26, 29, 32, 33], "differ": [0, 4, 6, 7, 8, 14, 16, 17, 19, 20, 23, 28, 29, 33], "difficult": 4, "digit": 0, "direct": [3, 25], "directli": [0, 3, 10, 19, 20, 29, 32], "directori": [11, 19], "disabl": [17, 29], "disabled_builtin": 20, "discourag": 3, "discuss": 13, "disk": 30, "disori": 16, "dispatch": 10, "displai": [0, 3, 4, 26, 27, 33], "dist": 1, "distinct": [0, 2, 14, 29], "divid": [6, 11, 23, 29], "do": [0, 3, 4, 6, 10, 14, 16, 20, 21, 23, 25, 26, 27, 29, 32, 33], "do_not_use_for_loop": 26, "docstr": [0, 29, 32], "document": [3, 4, 6, 14, 15, 18, 20, 21, 23, 24, 27, 32], "doe": [0, 3, 4, 6, 10, 19, 23, 24, 29, 30, 32], "doesn": [0, 4, 7], "dog": 33, "dollar": 20, "don": [3, 4, 15, 20, 27, 30, 32], "done": [0, 23], "done_earli": 20, "done_is_d": 20, "done_parse_date_dai": 20, "done_parse_date_month": 20, "done_parse_date_year": 20, "doubl": [23, 32], "down": [1, 33], "download": 15, "dr": [0, 13], "draw": 10, "driven": 3, "dude": 3, "dump": 19, "dunder": 12, "duplic": 32, "duplicate_dataclass_definit": 32, "duplicate_function_definit": 32, "dure": [0, 3, 10, 12, 28, 31], "dynam": [3, 4], "e": [0, 3, 4, 6, 7, 10, 11, 14, 19, 21, 23, 25, 26, 29, 30, 32, 33], "each": [6, 9, 10, 14, 19, 23, 25, 28, 29, 30], "earlier": [0, 20, 21], "easi": [3, 34], "easier": [3, 16, 25, 29], "easili": 32, "echo": 21, "edit": 19, "edu": [0, 1, 13, 15, 21], "effect": [0, 10, 14, 23], "effort": 21, "either": [0, 6, 8, 10, 14, 26, 28, 29, 31], "elegantli": 0, "element": [10, 12, 32], "elev": [3, 17], "els": [3, 23, 32, 33], "else_messag": [0, 3, 6, 8, 24, 27, 29], "else_message_templ": [0, 6, 8, 24, 27], "else_on_loop_bodi": 33, "email": [0, 13], "emb": [20, 32], "embed": [19, 20, 32], "empti": [6, 12, 20, 29, 33], "emul": [0, 4, 10, 23], "en": 6, "enabl": 21, "encapsul": [3, 16, 27], "encourag": [3, 23], "end": [0, 1, 10, 11, 20, 23, 29], "end_col": 0, "end_lin": 0, "engin": [17, 33], "enhanc": [7, 10, 11, 23], "enough": [9, 29, 31, 32], "ensur": [6, 23, 30], "ensure_ast": [5, 6, 20, 23, 24, 32], "ensure_called_uniqu": [5, 6, 24, 29], "ensure_cisc108_test": 20, "ensure_correct_plot": [5, 8], "ensure_coverag": [5, 6, 20, 24, 29], "ensure_dataclass": [5, 6, 24, 32], "ensure_documented_funct": [5, 6, 20, 23, 24, 32], "ensure_funct": [5, 6, 16, 20, 23, 24, 32], "ensure_function_cal": [5, 6, 20, 23, 24, 29, 32], "ensure_functions_return": [5, 6, 20, 24, 32], "ensure_import": [5, 6, 20, 23, 24, 32], "ensure_liter": [5, 6, 20, 23, 24, 32], "ensure_literal_typ": [5, 6, 23, 24, 32], "ensure_oper": [5, 6, 20, 23, 24, 32], "ensure_prints_exactli": [5, 6, 24, 32], "ensure_show": [5, 8], "ensure_starting_cod": [5, 6, 24, 32], "enter": 28, "entir": [0, 3, 4, 25, 26, 30], "entri": [0, 10], "enumer": 0, "env": 21, "environ": [3, 4, 10, 14, 15, 16, 17, 19, 20, 21, 26, 27, 28, 30], "equal": [3, 6, 20, 23, 29, 33], "equival": [3, 6, 24, 25], "error": [0, 3, 4, 6, 7, 10, 11, 12, 16, 19, 20, 22, 23, 26, 27, 29, 30, 31], "especi": [0, 2, 14], "essenti": 26, "etc": [0, 12, 19, 23, 31], "eval": [10, 32], "evalu": [0, 3, 5, 6, 7, 10, 12, 21, 24, 26, 29, 30], "even": [3, 7, 26, 29, 30, 32, 33], "event": [0, 19], "event_nam": 0, "eventu": 14, "ever": [3, 6], "everi": [3, 4, 12, 21, 32], "everyth": [4, 25], "evid": 0, "exact": [6, 32], "exact_str": [6, 29], "exactli": [0, 6, 29, 32], "exam": 26, "exampl": [0, 1, 2, 3, 6, 12, 17, 21, 23, 25, 28, 29, 30, 32], "exc_info": 4, "exceed": 31, "except": [0, 3, 4, 6, 7, 9, 10, 20, 25, 26, 27, 28, 30, 32], "exception_messag": [10, 31], "exception_nam": 10, "exclude_builtin": 10, "exclus": 3, "exec": [10, 30, 32], "execut": [0, 3, 6, 10, 12, 16, 17, 19, 21, 28, 29, 30], "execute_hook": 0, "executioncontext": 10, "exhaust": 24, "exist": [0, 6, 7, 8, 10, 11, 12, 14, 16, 17, 23, 26, 29, 30, 31, 32, 33], "expandedtraceback": 10, "expect": [0, 3, 6, 8, 14, 19, 20, 21, 23, 29, 30, 31, 32, 33], "expected_count": 33, "expected_messag": 32, "expected_typ": [6, 29], "expected_verb": 6, "experiment": [0, 4], "expire_cait_cach": [5, 7], "explain": [0, 6, 16, 20, 23, 24, 26, 28], "explan": [6, 27, 29], "explicit": [27, 31], "explicitli": [3, 10, 23, 26, 30], "explor": 25, "expos": 0, "exposur": 0, "expr": [12, 20], "express": [4, 7, 10, 11, 12, 20, 23, 25, 31, 33], "extend": 27, "extens": [0, 5, 17, 21, 23], "extern": [0, 15], "extra": [0, 3, 23, 30], "extract_tb": 4, "extrem": 30, "f": [3, 4], "face": 0, "fact": [3, 23, 29], "factor": 4, "fail": [0, 3, 4, 10, 16, 23, 29], "failur": [6, 20], "fairli": [6, 29], "fall": 0, "fals": [0, 3, 6, 7, 8, 10, 11, 12, 19, 20, 26, 29, 32], "falsei": 29, "fanci": 20, "fancier": 4, "far": [0, 6, 19, 20, 26, 29, 30], "fashion": 0, "faster": 1, "fastest": 19, "favor": 30, "featur": [0, 3, 4, 14, 23, 24], "feedback": [6, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 24, 26, 28, 29, 30, 32, 33], "feedback_categori": [0, 26], "feedbackcategori": [0, 2, 26, 27], "feedbackkind": [0, 2, 27], "feedbackloc": 3, "feedbackpipelin": 19, "feedbackregistri": 10, "feedbackrespons": 0, "feedbackstatu": 0, "few": [3, 4, 14, 15, 23, 29, 30, 32], "fewer": 32, "ff": [3, 27], "field": [0, 3, 4, 6, 7, 8, 10, 11, 19, 22, 24, 25, 26, 27, 28, 30, 32], "field_messag": 32, "field_nam": [0, 6, 8, 24, 27], "fight": 20, "figur": 4, "file": [0, 4, 6, 10, 11, 12, 16, 17, 20, 21, 26, 28, 30, 31, 32], "filenam": [0, 6, 10, 11, 12, 19, 26, 28, 30, 31, 32], "files_not_handled_correctli": [5, 6, 24, 32], "filesystem": [11, 19], "fill": 0, "filter": [19, 32], "final": [0, 6, 16, 19, 23, 26, 27, 29], "finalfeedback": 0, "find": [0, 1, 6, 7, 11, 12, 16, 17, 21, 24], "find_al": 6, "find_ast": [5, 7, 16], "find_expr_sub_match": [5, 7], "find_function_cal": [5, 7], "find_function_definit": [5, 7], "find_match": [3, 5, 6, 7, 16, 20, 23, 25], "find_oper": [5, 7], "find_prior_initi": [5, 7], "find_submatch": [5, 7], "fine": 23, "finish": [0, 3, 20], "finish_grad": 20, "finit": 0, "first": [0, 3, 6, 7, 10, 11, 12, 16, 21, 23, 25, 26, 29, 30, 31, 32], "fit": 3, "five": 29, "fix": [0, 18], "flag": [0, 3, 27, 28, 32], "flatten": [6, 29], "flexibl": [3, 6, 29, 32], "flexibli": 29, "float": [3, 6, 10, 20, 26, 29, 32], "flow": 12, "fo": 28, "folder": [1, 19, 23], "folk": 29, "follow": [0, 1, 3, 4, 6, 8, 12, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33], "followup": 0, "food": 20, "forbid": 23, "forc": [0, 6], "fork": 4, "form": [0, 14, 29, 32, 33], "formal": [0, 33], "format": [0, 3, 6, 10, 17, 20, 26, 28, 29], "format_assert": 6, "formatt": [0, 3, 17, 24, 27], "found": [6, 7, 8, 11, 19, 20, 23, 29, 31, 32, 33], "four": 28, "frame": 28, "framework": [17, 23], "friendli": [0, 2, 6, 16, 19], "friendly_nam": [10, 30], "from": [0, 1, 3, 4, 6, 7, 9, 10, 12, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33], "from_ast": 0, "front": 0, "full": [4, 15, 19, 26, 34], "full_clear": 0, "fulli": [10, 12], "funciton": 0, "function": [0, 4, 6, 7, 8, 10, 12, 14, 16, 17, 19, 24, 26, 28, 29, 30, 31, 32, 33], "function_is_cal": [5, 7], "function_kwarg": 10, "function_nam": [6, 8, 10, 29, 30, 32], "function_name_messag": 33, "function_not_avail": 29, "function_print": [5, 6, 24, 32], "function_signatur": 20, "function_typ": 33, "function_valu": 20, "functiondef": 7, "functiontyp": 25, "functool": 4, "fundament": 3, "further": [0, 27], "futur": 27, "g": [0, 3, 4, 6, 7, 10, 11, 19, 21, 23, 25, 26, 29, 30, 32, 33], "gain": 0, "game": 20, "gave": 33, "gener": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 32], "generate_numb": 30, "gentli": [0, 20, 22, 23, 24, 25, 26], "get": [0, 3, 4, 10, 19, 21, 23, 25, 29, 30], "get_all_feedback": [0, 24, 26], "get_call_argu": [5, 10, 24, 30], "get_child_feedback": 3, "get_context": 10, "get_data_st": 25, "get_data_typ": 25, "get_evalu": 0, "get_except": [5, 10, 24, 30], "get_files_lin": 0, "get_funct": [5, 10], "get_input": [5, 10, 24, 30], "get_lin": 0, "get_modul": [5, 10, 24, 30], "get_names_by_typ": 10, "get_opt": 20, "get_original_program": [5, 11], "get_output": [5, 10, 20, 24, 30], "get_plot": [5, 8], "get_program": [0, 5, 11, 20, 24, 31], "get_python_error": [5, 10, 24, 30], "get_raw_output": [5, 10, 24, 29, 30], "get_sandbox": [5, 10, 24, 30], "get_student_data": [5, 10, 24, 30], "get_submiss": 0, "get_trac": [5, 10, 24, 30], "get_values_by_typ": 10, "get_variables_by_typ": 10, "getattr": 32, "getter": 4, "gettrac": 4, "git": 21, "github": [13, 17, 21], "give": [0, 3, 6, 16, 17, 19, 20, 23, 26, 27, 29, 32], "give_parti": [0, 20, 24, 26, 32], "given": [0, 3, 6, 7, 8, 10, 11, 12, 14, 19, 20, 23, 26, 29, 30, 31, 32, 33], "global": [0, 3, 9, 10, 11, 14], "glossari": 17, "go": [0, 10, 20, 23], "goal": [0, 4, 16, 17, 30], "goe": [3, 20], "gone": [0, 3], "good": [16, 19, 20, 23], "good_coverage_so_far": 20, "got": [23, 32], "gpt": 19, "gpt_api_kei": 19, "grab": 20, "grade": [0, 3, 14, 16, 19, 20, 21, 23, 26], "grade_assign": [20, 22, 23], "grade_choos": 20, "grade_create_world": 20, "grade_create_world_finish": 20, "grade_create_world_map": 20, "grade_create_world_play": 20, "grade_create_world_statu": 20, "grade_get_opt": 20, "grade_record": 20, "grade_rend": 20, "grade_render_end": 20, "grade_render_introduct": 20, "grade_upd": 20, "grade_win_and_lose_path": 20, "gradepipelin": 19, "grader": [0, 23], "gradescop": [0, 14, 17, 19], "grammat": 0, "grasp": 16, "great": [20, 26], "greater": [6, 29], "green": 6, "greentreesnak": [6, 32], "group": [0, 3, 10, 29], "group_nam": 0, "guess_numb": 29, "guid": [17, 25, 26], "guidanc": [0, 24, 26], "gusukuma": 13, "gz": 19, "h": 19, "ha": [0, 3, 6, 7, 10, 11, 12, 14, 16, 18, 19, 21, 23, 26, 28, 29, 30, 32, 33], "hack": [7, 29], "had": [20, 32, 33], "half": [6, 29], "handl": [0, 4, 6, 7, 8, 10, 12, 23, 26, 29, 30], "happen": [0, 3, 10, 23, 27], "hard": 16, "hardcod": 4, "harder": 3, "has_import": [5, 6], "hasattr": 29, "hash": 9, "hashlib": 4, "have": [0, 3, 4, 6, 10, 12, 14, 15, 16, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33], "haven": [25, 26], "haystack": [6, 29], "header": [21, 27, 32], "heavili": [0, 23], "hello": [23, 26, 29, 30, 32], "hello_world": 32, "help": [0, 1, 3, 14, 16, 26], "helper": [6, 7, 20], "here": [4, 6, 16, 20, 21, 23, 25], "hidden": 0, "hide": [0, 21], "hide_correct": [0, 24, 26], "hierarchi": 3, "high": [0, 2, 23], "higher": [0, 3, 33], "highest": [3, 21, 23], "highlight": 28, "hint": [0, 14, 22, 23, 24, 26, 27], "hist": 8, "histogram": 8, "histori": [10, 11], "hoc": 3, "hold": [0, 12, 19, 30], "holder": 23, "hole": 33, "homogen": 12, "hook": 0, "host": 14, "hour": 0, "how": [0, 3, 6, 10, 11, 18, 19, 20, 23, 28, 29], "howev": [0, 1, 3, 12, 15, 19, 20, 21, 23, 25, 26, 27, 30, 32, 33], "html": [0, 6, 14, 21, 23, 27, 28], "htmlformatt": [24, 28], "http": [6, 15], "huge": 3, "human": [0, 2, 6, 10], "hundr": 23, "hyperlink": 28, "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ic": [21, 28], "ics_direct": 19, "id": [10, 12, 23, 25], "idea": [0, 3, 4, 20, 23, 27], "ideal": [0, 2, 3], "ident": [6, 29], "identif": 3, "identifi": [0, 2, 3, 12, 14, 23, 25, 27, 33], "ignor": [0, 6, 11, 29], "ignored_feedback": 3, "imagin": 16, "imit": 30, "immedi": 3, "impact": 3, "imper": 0, "implement": [3, 4], "implicit": [14, 32], "import": [3, 4, 6, 8, 10, 12, 16, 17, 18, 20, 21, 23, 25, 26, 29, 30, 31, 32, 33], "import_error": [5, 10], "imported_arrow": 20, "imported_datetim": 20, "imported_panda": 20, "imported_r": 20, "importerror": 10, "imprecis": 29, "improv": [6, 15, 23, 26], "inact": [0, 3], "includ": [0, 3, 6, 7, 12, 14, 19, 21, 23, 26, 30, 32], "include_script": 19, "inclus": [3, 7], "incompat": [23, 33], "incompatible_typ": 33, "incomplet": 7, "incorpor": [7, 26, 27], "incorporate_vari": 26, "incorrect": [28, 31, 33], "incorrect_answ": 23, "incorrect_ar": 33, "incorrect_number_of_sect": 31, "incorrectli": 32, "increas": [0, 10, 26], "incredibli": 4, "increment": 0, "indent": [25, 28], "indentation_error": [5, 10], "indentationerror": 10, "independ": [3, 11], "index": [9, 17, 20, 31, 33], "index_error": [5, 10], "indexerror": 10, "indic": [0, 3, 12, 26, 28, 31], "individu": [6, 19, 23, 26, 29], "infer": [14, 27], "inferenc": 12, "infinit": 18, "info": [4, 11, 19, 23], "inform": [0, 1, 3, 6, 8, 10, 12, 14, 15, 23, 26, 29, 30, 32], "infrastructur": 0, "inherit": [0, 3, 4, 12, 28], "ini": 19, "initi": [0, 6, 7, 9, 10, 11, 16, 21, 23, 33], "initial_world": 20, "initialization_problem": 33, "initialized_accumul": 23, "inject": [0, 3, 10], "inner": 10, "innermost": 12, "input": [6, 10, 20, 26, 28, 29, 30], "insid": [4, 6, 16, 23, 28, 29, 32, 33], "insight": 16, "inspect": [0, 4, 23, 26], "instal": [17, 21], "instanc": [0, 3, 6, 10, 29], "instanti": [3, 12], "instantli": 0, "instead": [0, 3, 7, 10, 14, 19, 20, 23, 25, 26, 27, 29, 31, 32, 33], "instruct": [0, 3, 17, 20, 26, 29, 32], "instructor": [0, 3, 6, 10, 14, 16, 17, 19, 20, 21, 24, 25, 26, 27, 29, 30, 32], "instructor_fil": [0, 19], "instructor_ignore_messag": 29, "instructor_nam": 19, "instructor_test": 0, "int": [0, 3, 6, 7, 8, 9, 10, 16, 20, 23, 25, 28, 29, 30, 31, 32], "integ": [20, 23, 29, 30, 32], "integr": [15, 17, 19, 23], "intellig": [0, 3], "intend": 15, "intens": 0, "intention": 14, "interact": [0, 28], "interest": [0, 3, 4, 19, 21, 27], "interfac": [14, 17, 21, 26], "intern": [0, 3, 10, 12, 17, 26, 27, 28, 30, 34], "interpol": [0, 27, 28], "interpolat": 3, "interpolatedvalu": 6, "interpret": 3, "introduc": 32, "introduct": [17, 20], "introspect": 12, "intuit": 29, "invalid": [0, 12, 32], "invalid_field_typ": 32, "invalid_parameter_typ": 32, "inventori": 20, "invers": 6, "inverse_oper": 6, "invert": 32, "investig": 4, "invok": 19, "involv": [14, 30], "io": [4, 6], "io_error": [5, 10], "ioerror": [10, 31], "is_dat": 20, "is_dataclass": 29, "is_mod": 7, "is_top_level": [5, 7], "isinst": [29, 30], "isn": [9, 11, 19], "issu": [3, 12, 14, 16, 21, 23, 30, 31, 32, 33], "item": [0, 20, 25, 29], "iter": [6, 9, 16, 20, 29, 32, 33], "iter_field": 4, "iterating_over_empty_list": 33, "iterating_over_non_list": 33, "iteration_problem": 33, "itertool": 4, "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 21, 23, 27, 28, 29, 30, 32, 33], "itself": [0, 3, 10, 12, 14, 16, 29, 30], "j": 1, "job": 19, "join": [13, 20], "json": [0, 3, 19, 21, 24], "jupyt": [4, 17, 18, 19], "just": [0, 3, 6, 10, 12, 16, 19, 23, 27, 28, 29, 30, 32, 33], "justif": [0, 3, 6, 8, 24, 26, 27, 29, 31, 33], "justification_templ": 0, "kafura": 13, "keep": [0, 2, 21], "keep_context": 20, "kei": [0, 3, 4, 10, 19, 20], "key_error": [5, 10], "keyerror": 10, "keyword": [0, 3, 10, 25, 26, 27], "keyword_argu": 0, "kind": [0, 2, 3, 6, 8, 10, 12, 14, 16, 19, 22, 23, 24, 26, 27, 30, 32, 33], "know": [0, 10, 15, 20], "knowledg": 7, "known": 0, "kwarg": [0, 3, 6, 8, 10], "kwargs_loc": 10, "l": [20, 23], "label": [0, 2, 3, 6, 8, 14, 16, 20, 22, 23, 24, 26, 27, 29, 31, 32, 33], "languag": [12, 16], "larg": [3, 17, 21, 23, 27], "last": [0, 10, 16, 19, 25, 30], "later": [0, 3], "latest": [6, 10, 11, 21, 31], "learn": 12, "learner": [0, 3, 14, 16, 23, 26], "least": [3, 12, 19, 20, 29, 32], "leav": [1, 3], "led": 3, "left": [6, 9, 11, 29], "left_nam": 33, "legaci": 31, "len": [25, 29, 32], "length": [6, 29, 31], "less": [0, 6, 29], "lesser": 27, "let": [3, 15, 16, 20, 23, 30], "level": [0, 7, 10, 19, 20, 25, 29, 32, 33], "librari": [1, 8, 15, 16, 17, 19, 21], "lifetim": 17, "light": 31, "like": [0, 2, 3, 4, 6, 7, 10, 12, 16, 19, 21, 23, 25, 26, 28, 29, 30, 32, 33], "limit": [4, 9, 19, 23], "line": [0, 3, 6, 7, 8, 10, 14, 16, 17, 20, 21, 25, 26, 28, 29, 30, 31, 32, 33], "lineno": [0, 31], "lines_messag": 32, "link": 3, "list": [0, 3, 6, 7, 8, 10, 11, 12, 16, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33], "list_inside_loop": 16, "liter": [4, 6, 10, 12, 20, 23, 32], "literal_messag": 32, "literal_typ": [6, 32], "literal_type_messag": 32, "literalbool": 25, "literalnon": 25, "literalnum": 25, "literalstr": 25, "littl": [3, 16, 29, 32, 34], "live": 16, "ll": [0, 23, 25], "load": [4, 10, 11, 16, 19, 23, 30, 31], "load_error": 0, "local": 10, "locat": [3, 6, 8, 10, 17, 20, 32, 33], "log": [0, 19, 24, 26, 32], "log_level": 19, "logic": [0, 3, 10, 14, 19, 23], "long": [2, 6, 9, 10, 16, 20, 28, 29], "longer": [10, 31], "look": [3, 6, 7, 16, 20, 21, 23, 25, 26, 32, 33], "loop": [0, 16, 18, 23, 25, 26, 32, 33], "lose": 20, "lose_path": 20, "lost": 20, "lot": [16, 19, 22, 29, 30], "low": [0, 2], "lower": [20, 23, 26], "lowercas": [0, 2, 6, 29], "lowest": [3, 20, 23], "luke": 13, "lukesg08": 13, "m": [1, 4, 19, 21], "machineri": 23, "mad": 4, "made": [0, 6, 8, 10, 23, 30], "madlib": 20, "magic": 21, "mai": [0, 1, 4, 12, 14, 16, 20, 25, 27, 29, 32], "main": [0, 1, 3, 6, 10, 11, 12, 14, 19, 28, 29, 31, 32], "main_cod": [0, 3], "main_fil": 0, "main_report": [0, 3, 7, 9, 10, 11], "maintain": 13, "major": [3, 4, 16, 27], "make": [0, 1, 3, 6, 7, 10, 16, 17, 20, 21, 23, 29, 31, 32, 33], "make_safe_vari": 10, "manag": [4, 10, 29, 30], "mangl": 20, "mani": [3, 6, 10, 16, 19, 23, 25, 32], "manipul": [12, 27], "manner": 3, "manual": 3, "map": [0, 7, 10, 12, 20, 23, 30, 32], "mark": [0, 3, 23, 28], "markdown": [0, 14, 27, 28], "match": [0, 6, 7, 8, 16, 23, 24, 29, 33], "match_signatur": 20, "materi": 0, "math": [4, 23, 30, 32], "matplotlib": [8, 10], "matter": 4, "max": 32, "maximum": [6, 21], "maximum_temporary_length": 10, "mayb": [12, 33], "md5": 4, "mean": [0, 3], "meant": [0, 3, 14, 23, 26, 28], "measur": 16, "mechan": [0, 27], "medium": [0, 2, 17], "meet": [0, 7, 27], "member": [0, 3], "memory_error": [5, 10], "memoryerror": 10, "mental": 14, "mess": 32, "messag": [0, 3, 4, 6, 8, 10, 11, 14, 16, 20, 21, 23, 24, 26, 27, 29], "message_templ": [0, 3, 6, 8, 24, 26, 27, 28], "message_text": 0, "messi": 29, "met": [0, 3, 6, 27], "meta": [7, 14, 26, 30], "metacognit": 0, "metadata": [0, 14, 17, 19, 22, 23], "method": [4, 6, 7, 10, 12, 17, 20, 32], "methodtyp": 4, "middl": 0, "might": [0, 1, 3, 4, 10, 16, 20, 23, 26, 27, 28, 29, 30], "min": 32, "mind": 0, "minim": 3, "minimalist": 16, "minimum": [6, 23], "mirror": 25, "misconcept": [0, 14], "mismatch": 33, "miss": [0, 4, 6, 19, 32], "missing_dataclass": 32, "missing_dataclass_annot": 32, "missing_field_typ": 32, "missing_funct": 32, "missing_parameter_typ": 32, "missing_return_typ": 32, "mistak": [0, 3, 14, 16, 20, 23, 27, 28], "mistakenli": [29, 32], "mock": [4, 8, 10, 20, 30], "mock_funct": [5, 10, 24, 30], "mock_modul": [5, 10, 24, 30], "mockedmockmodul": 30, "mockmodul": 10, "mockped": 20, "mod": 4, "mode": 17, "model": 17, "modif": 10, "modifi": [0, 3, 10, 20, 25, 26, 30], "modul": [0, 4, 6, 7, 8, 10, 15, 17, 20, 23, 29, 30, 32, 33], "module_nam": [10, 30, 32], "module_not_found": 33, "moduletyp": 4, "modulo": 9, "monkei": 4, "more": [0, 3, 4, 6, 10, 14, 15, 16, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32], "most": [0, 1, 3, 4, 6, 7, 10, 14, 16, 19, 21, 23, 25, 26, 27, 29, 30, 32, 33], "mostli": [0, 2, 4, 19, 28, 31], "motiv": 0, "move": [0, 31, 32], "move_forward": 32, "mro": 4, "much": [3, 7, 20, 22, 26, 30, 33], "multilin": [4, 7], "multipl": [0, 4, 6, 11, 12, 19, 26, 27, 29, 30, 31, 32, 33], "multiple_return_typ": 33, "multipli": 23, "mundan": 32, "must": [0, 6, 7, 20, 28, 29, 32, 33], "mutabl": [10, 12], "mute": [0, 3, 6, 8, 11, 20, 24, 26, 27, 33], "my": [0, 3], "my_point": 29, "my_sum": 30, "my_variable_nam": 12, "n": [16, 20, 25, 32], "n2": [23, 26], "n3": 23, "n31": 26, "n44": 26, "name": [0, 3, 6, 7, 10, 12, 14, 17, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33], "name_error": [3, 5, 10], "name_is_not_a_dataclass": 32, "name_is_not_a_funct": 29, "name_messag": [29, 32, 33], "nameerror": [0, 10], "names_messag": 32, "namespac": [0, 10, 11, 12, 14, 29, 30], "narrow": 32, "nativ": [10, 11, 30], "nbformat": 4, "nearest": 20, "necessari": [1, 3, 15, 17, 23, 29, 31], "necessarili": 14, "need": [0, 1, 3, 4, 9, 12, 14, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32, 33], "need_multipl": 26, "needl": [6, 29], "neg": [0, 3, 23], "negative_mark": 28, "neighbor": 20, "neither": 34, "nest": [4, 29], "neutral": [0, 3], "never": [0, 23, 33], "new": [0, 3, 10, 11, 12, 20, 21, 27, 28, 29, 30, 31, 33], "new_data": 10, "new_vers": [10, 30], "newark": 20, "newlin": [6, 10, 29, 30], "next": [0, 10, 11, 23, 31, 32], "next_sect": 31, "nice": [10, 29], "no_plt": [5, 8], "node": [0, 6, 7, 11, 12, 23, 25, 32, 33], "node_nam": 7, "nodevisitor": 4, "non": [0, 3, 12, 17, 20, 29, 30, 33], "none": [0, 3, 6, 7, 8, 9, 10, 11, 12, 20, 25, 26, 29, 30, 32], "nonetyp": 25, "nor": 34, "normal": [0, 6, 10, 23, 25, 29, 30, 32], "not_a_funct": 33, "not_enough_sect": 31, "not_print": 26, "notabl": 0, "note": [0, 10, 20, 25, 27, 29, 30, 32], "notebook": [17, 18], "noth": [1, 7, 10], "notic": [0, 20, 23, 29], "now": [0, 3, 20, 23, 26], "npm": 1, "nuanc": 0, "null": 0, "num": [20, 32], "number": [3, 4, 6, 8, 10, 12, 14, 16, 20, 25, 27, 28, 29, 30, 31, 32, 33], "number_of_filenam": 32, "numer": [0, 3, 12, 26, 28], "numtyp": 25, "o": [4, 19, 20], "obj": [6, 29], "object": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 21, 23, 24, 25, 26, 29, 30], "oblig": [3, 26], "observ": 19, "obviou": [1, 29], "occur": [3, 10, 12, 29], "occurr": [6, 7, 26], "off": [0, 3, 7, 10, 20], "offset": 0, "often": [0, 3, 4, 14, 19, 25, 26, 29], "oh": 4, "okai": 20, "old": [0, 26, 33], "onc": [23, 29, 32, 33], "one": [0, 3, 4, 7, 9, 10, 12, 14, 16, 20, 21, 22, 23, 25, 26, 27, 29, 31, 32, 33], "ones": [11, 27, 31], "onli": [0, 3, 4, 6, 10, 14, 16, 17, 19, 20, 21, 23, 25, 27, 29, 30, 31, 32, 33], "only_printing_vari": [5, 6, 24, 32], "op": 12, "op_nam": [6, 7, 33], "open": [6, 10, 14, 20, 26, 31, 32], "open_without_argu": [5, 6, 32], "oper": [0, 3, 6, 7, 8, 12, 20, 23, 25, 29, 32, 33], "operand": 33, "oppos": [6, 10, 25, 29], "optim": 1, "option": [0, 7, 10, 11, 15, 17, 19, 20, 21, 23, 26, 30], "order": [0, 3, 4, 6, 11, 20, 26, 29, 32], "organ": [0, 4, 14, 20], "origin": [3, 10, 11, 29], "other": [0, 3, 4, 6, 10, 14, 16, 17, 19, 21, 25, 26, 28, 29, 30, 31, 32, 33], "other_plt": [5, 8], "otherwis": [0, 3, 4, 6, 7, 8, 10, 11, 14, 19, 26, 27, 29, 30, 31, 32], "our": [3, 4, 13, 16, 17, 20, 21, 22, 23, 29], "out": [0, 3, 4, 7, 10, 12, 16, 19, 20, 23, 26, 33], "outcom": [0, 20], "outer": 10, "output": [1, 3, 6, 10, 14, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32], "outsid": [15, 33], "over": [0, 10, 20, 27, 28, 33], "overal": [0, 3, 6, 26], "overlap": [6, 26], "overrid": [0, 4, 6, 10, 17, 19, 26, 27, 29, 31, 32], "overridden": [0, 14], "overwrit": 10, "overwritten": [12, 33], "overwritten_vari": 33, "own": [0, 3, 4, 7, 12, 23, 29, 30], "packag": [7, 25], "page": [4, 13, 17, 18, 22, 27], "pain": 4, "pair": [0, 6, 8, 27, 29], "panda": 20, "param": [0, 7, 10, 11], "paramet": [0, 3, 6, 7, 8, 9, 10, 11, 12, 17, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33], "parameter": 3, "parameter_messag": 32, "parameter_name_messag": 33, "parameter_type_mismatch": 33, "parameter_type_nam": 33, "parent": [0, 3, 6, 8, 25], "pars": [0, 4, 7, 10, 11, 23, 30, 31, 32], "parse_date_dai": 20, "parse_date_month": 20, "parse_date_year": 20, "parse_program": [5, 7, 20], "part": [0, 6, 11, 17, 26, 29, 31], "parti": 17, "partial": [3, 6, 16, 23, 26, 32], "partial_credit": [6, 29], "particular": [3, 26], "particularli": [3, 10, 12, 22], "pass": [0, 3, 6, 10, 12, 23, 25, 26, 29, 30, 31, 33], "patch": [4, 10], "path": [1, 4, 12, 19, 20, 33], "path_nam": 20, "pattern": [6, 7, 11, 17, 25, 29, 31], "payoff": 23, "pedagog": [0, 3, 14, 16, 26, 34], "pedal": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33], "pedal_path": 1, "peopl": 21, "pep8": 29, "per": 6, "percentag": [6, 29, 30], "perfectli": [10, 23, 30], "perform": [0, 3, 6, 12, 31, 33], "perhap": [0, 3, 10, 26, 29, 32], "period": 0, "person": 32, "perspect": [0, 3, 27], "phase": [3, 16, 20], "phrase": 0, "pickl": 4, "piec": [0, 3, 14, 22, 23, 26, 27], "pile": 3, "pip": [15, 21], "pipelin": 19, "place": [23, 30], "plai": 20, "plain": [0, 14, 27, 28], "platform": [0, 1, 9, 15, 16, 19, 21, 23], "player": 20, "pleas": [20, 21, 31], "plot": [8, 10, 30], "plt": 8, "plt_rename_err": [5, 8], "plt_type": 8, "plt_wrong_import": [5, 8], "plu": [3, 31], "plural": 32, "point": [0, 3, 6, 10, 25, 29], "polit": 0, "pool": [3, 4, 9], "popular": 4, "port": 4, "posit": [0, 3, 6, 10, 22, 27], "possibl": [0, 2, 3, 4, 14, 15, 19, 21, 22, 23, 30, 33], "possible_initialization_problem": 33, "possibli": 33, "post": [3, 29], "postcondit": 20, "potenti": [0, 3, 12, 14, 19], "power": [3, 17, 26, 28, 33], "practic": [6, 17, 20, 32, 34], "precis": 29, "precompil": 1, "precondit": 20, "preconfigur": 21, "prefer": 23, "preformat": 21, "preload": 21, "prematur": 0, "prepar": 21, "presenc": [0, 14], "present": [0, 6, 8, 9, 23], "pretend": 23, "pretti": [4, 10, 29], "prevent": [0, 6, 10, 23, 29, 30], "prevent_advanced_iter": [5, 6, 24, 32], "prevent_ast": [5, 6, 20, 23, 24, 32], "prevent_embedded_answ": [5, 6, 24, 32], "prevent_function_cal": [5, 6, 20, 23, 24, 32], "prevent_import": [5, 6, 20, 23, 24, 32], "prevent_incorrect_plt": [5, 8], "prevent_liter": [5, 6, 20, 23, 24, 32], "prevent_literal_typ": [5, 6, 23, 24, 32], "prevent_oper": [5, 6, 23, 24, 32], "prevent_printing_funct": [5, 6, 20, 24, 32], "previou": [10, 11, 12, 14, 25, 33], "previous": [0, 7, 10, 11, 33], "primari": 30, "print": [6, 7, 10, 19, 20, 23, 25, 26, 28, 29, 30, 32], "print_resolv": 23, "print_typ": 25, "print_valu": 23, "printabl": 0, "prior": [7, 25], "priorit": [3, 23, 27], "prioriti": [0, 2, 3, 6, 8, 20, 21, 23, 24, 26, 27], "probabl": [0, 3, 23, 28], "problem": [3, 4, 9, 16, 20, 26, 29, 32, 33], "problemat": 12, "procedur": 0, "process": [3, 12, 16, 19], "process_ast": 12, "process_cod": 12, "processs": 3, "produc": [0, 6, 7, 14, 20, 21, 23], "profil": 19, "program": [6, 7, 10, 12, 16, 17, 28, 30, 33], "programmat": 19, "progress": 16, "progsnap": 19, "progsnap2": 19, "progsnap_ev": 19, "progsnap_profil": 19, "proivd": 32, "project": [1, 17, 28], "prologu": 31, "prompt": 30, "proper": [26, 29, 32], "properli": [4, 10], "properti": [4, 10], "provid": [0, 3, 6, 10, 14, 16, 17, 19, 22, 23, 26, 27, 28, 29, 30, 32], "provide_opt": 29, "proxi": [10, 23, 30], "punctuat": [4, 6, 29], "pure": [1, 15, 16], "purpos": [0, 3, 19, 27], "put": [0, 3, 20, 23], "py": [0, 4, 11, 16, 19, 20, 21, 22, 23, 26], "py_object": 4, "pyodid": 17, "pypi": 17, "pyplot": [8, 10], "python": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 19, 20, 21, 23, 28, 30], "python3": 21, "python_cod": [26, 28], "python_express": [28, 32], "python_valu": [27, 28], "pythonapi": 4, "qualifi": 12, "quantiti": 23, "question": [0, 3, 4, 5, 14, 16, 17, 23], "queu": [10, 30], "queue": [10, 30], "queue_input": [5, 10, 24, 30], "quick": [17, 25], "quickli": [6, 15, 19], "quickstart": 0, "quit": [18, 20, 22], "quot": 20, "r": 4, "rais": [3, 7, 10, 21, 30], "ran": [23, 29], "random": [4, 20], "rang": [9, 16], "rather": [17, 21, 28, 30], "ratio": [6, 10, 29], "raw": [0, 4, 16, 30], "raw_output": [6, 10], "re": [0, 4, 19, 20, 23, 25, 29], "reach": [0, 26], "reachabl": 32, "read": [0, 6, 10, 12, 14, 19, 20, 26, 30, 33], "read_out_of_scop": 33, "readabl": 10, "readi": [18, 22], "readlin": 20, "readthedoc": 6, "real": [10, 20, 30], "real_io": 10, "realli": [4, 14, 21, 29], "reason": 29, "receiv": [0, 29], "recent": [6, 7, 10, 16, 29], "recogn": [0, 10, 30, 32], "recommend": [0, 2, 3, 23, 26], "reconfigur": 21, "record": [6, 10, 12, 20, 30], "recurs": [0, 6, 10, 18, 25, 32, 33], "recursive_cal": 33, "reduc": 32, "rees": 23, "refer": [0, 2, 6, 7, 10, 14, 15, 17, 23, 32], "refin": 26, "reflect": [12, 14], "regardless": [3, 20], "regex": [6, 29], "region": [0, 23], "regist": [0, 4], "register_tool": 0, "regrad": 23, "regress": 19, "regul": 0, "regular": [0, 7, 11, 20, 23, 28, 31], "rel": [0, 23], "relat": [3, 4, 6, 8], "relev": [0, 7, 14, 23, 28, 30], "reli": [0, 10], "rememb": [6, 20], "remov": [0, 1, 6, 9, 10, 11, 26, 29, 30, 31, 32], "render": [0, 20, 27, 28], "render_end": 20, "render_introduct": 20, "reorder": 3, "reparse_if_need": [5, 7], "repeatedli": [6, 29], "replac": [1, 11, 20], "replace_main": 0, "replic": 4, "report": [3, 6, 8, 9, 10, 12, 14, 16, 17, 19, 23, 26, 28, 30, 31, 33], "repositori": 15, "repres": [0, 3, 7, 12, 26], "represent": [0, 7, 12], "requir": [0, 4, 6, 14, 20, 21, 29, 32], "require_tifa": [5, 7], "rerout": 4, "rerun": 30, "research": [0, 14, 16, 17], "reserv": 23, "reset": [0, 5, 6, 7, 9, 10, 11, 12, 26], "reset_default_mock": 10, "reset_default_overrid": 10, "reset_funct": 0, "reset_output": [5, 10], "reshap": 4, "resolut": [0, 4], "resolv": [0, 3, 4, 14, 16, 17, 19, 20, 21, 26, 27], "resolve_al": 20, "respect": [0, 11, 32], "respons": [0, 3, 14, 16, 22, 23, 26, 27, 29, 31, 32, 33], "restor": [3, 31], "restore_cod": [5, 11, 24, 31], "restrict": [2, 4, 10], "result": [0, 3, 4, 10, 12, 14, 16, 17, 19, 20, 21, 28, 29, 30], "retriev": [0, 6, 7, 8, 10, 11, 26, 29, 30, 31], "return": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 20, 23, 25, 27, 28, 29, 30, 32, 33], "return_outside_funct": 33, "reus": [0, 3, 10, 26], "reusabl": 3, "revert": 7, "review": 23, "revis": 26, "rewind": 10, "rewrit": [4, 12], "rich": 23, "right": [3, 4, 6, 9, 10, 16, 20, 29, 31, 32, 33], "right_nam": 33, "risk": 3, "role": [0, 14], "root": [3, 6, 7, 11, 25, 32], "roughli": 20, "round": 20, "row": 28, "rstrip": [10, 20, 30], "rule": [0, 6, 27], "run": [0, 1, 4, 5, 6, 7, 10, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 29, 30, 33], "run_autograd": 21, "runpipelin": 19, "runtim": [0, 3, 6, 10, 14, 16, 17, 22, 23, 24, 26, 27, 30, 32], "runtime_error": [5, 10], "sacrif": 3, "safe": [10, 19, 23], "sai": [23, 29], "said": 29, "same": [0, 3, 6, 9, 12, 14, 20, 23, 25, 26, 27, 29, 30, 32, 33], "sandbox": [0, 3, 4, 5, 6, 8, 16, 17, 19, 20, 23, 24, 29], "sandbox_mixin": 10, "sandboxcontext": [6, 10], "sandboxpipelin": 19, "sandboxresult": 10, "saniti": 20, "save": [3, 24], "save_to_fil": 32, "scatter": 8, "scenario": [14, 16, 19, 20], "schema": [0, 2], "scope": [12, 29, 32, 33], "score": [0, 3, 6, 8, 16, 19, 20, 21, 23, 24, 26, 27, 29, 32], "script": [0, 3, 14, 16, 17, 19, 20, 21, 26, 27], "search": [0, 4, 6, 7, 17, 25, 29, 32], "second": [0, 26, 29, 30, 33], "secretli": 23, "section": [0, 3, 11, 19, 24, 33], "see": [2, 6, 16, 19, 21, 23, 25, 27, 29, 30], "seed": [4, 9], "seed_valu": 9, "seem": [0, 4], "seen": 6, "segfault": 29, "select": [0, 9, 16], "self": [3, 7, 16, 28], "semant": 0, "semicolon": 19, "semvar": 0, "sens": 3, "sent": 16, "sep": 0, "separ": [0, 2, 3, 11, 19, 30, 31], "separate_into_sect": 31, "sequenc": [6, 29, 33], "sequenti": 12, "seri": 23, "serial": 3, "serializ": 3, "seriou": [0, 3], "serv": [0, 3, 9], "server": 21, "set": [0, 3, 6, 7, 9, 10, 11, 12, 19, 21, 23, 26, 27, 29, 30, 31, 32, 33], "set_assertion_mod": 20, "set_correct": 0, "set_formatt": 0, "set_input": [5, 10, 24, 30], "set_line_offset": 0, "set_maximum_scor": 21, "set_se": [5, 9], "set_sourc": [5, 11, 24, 31], "set_source_fil": [5, 11], "set_student_data": 10, "set_success": [0, 20, 24, 26], "setattr": 32, "setdefault": 3, "setrecursionlimit": 18, "settrac": [4, 30], "setup": [0, 4, 9, 14, 19, 20, 21, 23], "setup_ped": 20, "sever": [14, 16, 19, 23], "sh": 21, "shadowed_builtin": 23, "short": [2, 3, 10], "shortcut": 3, "should": [0, 2, 3, 4, 10, 11, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33], "shouldn": [16, 30, 33], "show": [0, 3, 8, 11, 19, 20, 21, 23, 27], "showabl": 0, "shown": [0, 3, 10, 16, 26, 27, 30], "sibl": 25, "side": [6, 14, 23, 29, 33], "sign": [3, 20], "signal": 26, "signatur": [6, 20], "similar": [0, 3, 6, 10, 25, 26, 29], "simpl": [0, 2, 12, 17, 19, 20, 21, 26, 32, 34], "simpler": [14, 29], "simplest": 19, "simpli": [3, 6, 10, 29, 32], "simplif": 12, "simplifi": 0, "simplist": 6, "sinc": [0, 3, 4, 6, 10, 14, 16, 21, 22, 23, 26, 29], "singl": [0, 4, 6, 7, 8, 10, 11, 12, 14, 21, 23, 29, 30, 31, 32], "singleton": [0, 14], "singular": 33, "singular_nam": 33, "situat": [12, 23, 26, 29], "skip": [3, 19, 20], "skip_run": 19, "skip_tifa": [19, 20], "skulpt": 17, "sleep": 20, "slice": 12, "slightli": [4, 6], "small": [0, 3], "snake": 6, "snake_cas": 29, "snapshot": 19, "sneakili": 30, "snek": 21, "so": [0, 3, 4, 6, 7, 9, 10, 19, 20, 23, 25, 26, 29, 30, 31, 32], "softwar": 17, "solut": [16, 26, 31, 32], "solv": 23, "some": [0, 3, 4, 6, 11, 12, 14, 16, 20, 23, 25, 26, 27, 29, 31, 32], "somehow": 4, "someth": [0, 2, 3, 19, 23, 25, 26, 28, 29, 32], "sometim": [0, 10, 12, 23, 29, 30], "somewhat": [23, 29], "somewher": [3, 6], "sophis": 20, "sophist": [3, 4, 16, 30], "sorri": [18, 22], "sort": [0, 6, 27, 29, 32], "sound": [4, 26, 34], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 21, 23, 24, 25, 26, 30], "source_file_not_found": [11, 31], "space": [0, 6, 28, 29], "span": 28, "speak": 14, "special": [0, 1, 2, 3, 8, 12, 15, 19, 21, 26, 29], "special_comparison": 8, "specif": [0, 3, 4, 14, 15, 16, 19, 25, 26, 27, 32], "specifi": [0, 3, 6, 7, 16, 26, 32], "spell": 0, "spit": 16, "split": [4, 6, 10, 20, 29], "sprite": 32, "sqlite": 19, "sqlite3": 4, "stack": [10, 12], "stanc": 26, "standard": [0, 15, 17, 19, 28], "start": [0, 3, 6, 10, 17, 20, 28, 30, 32], "start_grouping_context": 10, "start_trac": [5, 10, 24, 30], "startswith": 20, "stat": 19, "state": [0, 7, 10, 12, 14, 25, 26], "statement": [3, 6, 7, 10, 12, 16, 20, 23, 29, 30, 32, 33], "static": [0, 3, 6, 17, 23, 24], "statist": 23, "statspipelin": 19, "statu": [0, 3, 20], "stderr": 4, "stdin": [0, 4], "stdout": [4, 10, 19, 30, 32], "step": [4, 14], "still": [0, 3, 4, 10, 29, 30], "stolen": 4, "stop": [10, 12, 30], "stop_group": 0, "stop_grouping_context": 10, "stop_sect": 31, "stop_trac": [5, 10, 24, 30], "store": [0, 9, 10, 11, 12, 16, 19, 20, 23, 30, 33], "store_with_read": 12, "stori": 20, "story_fil": 20, "str": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 20, 23, 26, 27, 28, 29, 30, 31, 32], "strategi": [0, 3, 6, 26, 29], "streamlin": 0, "strictli": [0, 29], "string": [0, 3, 4, 6, 7, 9, 10, 11, 12, 20, 23, 25, 26, 27, 29, 30, 31, 32], "stringio": 4, "strip": [20, 31], "strive": 27, "strong": 0, "strongli": 26, "strtype": 25, "structur": [7, 8], "student": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 32], "student_answ": [27, 28], "student_cod": [7, 23], "student_email": 19, "student_fil": 19, "student_func_cal": 25, "student_func_def": 25, "student_submiss": 23, "student_var": 25, "student_var_nam": 25, "stuff": [4, 20], "style": [0, 6, 14, 20, 23], "stylist": 0, "sub": [4, 7], "subclass": [0, 3, 4, 12], "submatch": 25, "submiss": [3, 7, 10, 11, 12, 14, 16, 17, 19, 21, 23, 26, 31, 33], "submit": [12, 16, 21], "submodul": [0, 14], "subscr": 4, "subscript": [4, 12, 32], "subsequ": [10, 23, 30, 31], "subsitut": 11, "substitut": [0, 11], "subtask": 27, "subtract": [3, 30], "subtre": [7, 23, 24], "success": [0, 3, 7, 11, 12, 21, 26, 27], "successfulli": [7, 8, 11], "suffici": [4, 32], "suggest": [0, 3], "suggestion_messag": 31, "suitabl": [14, 20], "sum": [0, 6, 16, 20, 23, 29, 30, 32], "summar": [18, 22], "super": [3, 4, 20], "supplant": 23, "support": [0, 3, 4, 6, 7, 10, 14, 23, 25, 27, 29, 32], "suppos": [28, 32], "suppress": [0, 3, 14, 20, 24, 26], "sure": [3, 4, 6, 10, 20, 21, 23, 31, 32, 33], "surprisingli": 32, "surround": 0, "suspect": 4, "sy": [4, 10, 18, 20, 30, 32], "symbol": [12, 28], "syntact": 19, "syntax": [0, 3, 10, 11, 14, 16, 20, 23, 26, 27, 28, 30, 31], "syntax_error": 31, "system": [0, 3, 4, 10, 14, 16, 17, 24, 26, 29], "system_error": 0, "t": [0, 3, 4, 7, 9, 11, 15, 16, 18, 19, 20, 22, 25, 26, 27, 29, 30, 32, 33], "tabl": [23, 28], "tabul": 4, "tabular": 29, "tag": [0, 6, 8, 14, 21], "take": [0, 3, 14, 20, 23, 26, 29], "taken": [0, 3], "talk": [4, 23], "tar": 19, "target": [6, 10, 12, 20, 30, 33], "target_typ": 12, "task": [0, 3, 27], "teach": 20, "teacher": [0, 3, 16, 17, 27], "tech": 13, "technic": [0, 3, 7, 14, 32], "tediou": 23, "templat": [0, 3, 6, 27], "template_text": 0, "temporari": 10, "temporarili": [11, 26], "tend": [0, 26], "term": 3, "termin": [12, 19], "terminologi": 29, "test": [0, 3, 6, 10, 16, 17, 19, 20, 29, 30], "test_path": 20, "text": [0, 3, 6, 10, 14, 20, 21, 26, 27, 28, 29], "textformatt": [24, 28], "textual": [6, 23], "than": [0, 6, 14, 16, 17, 20, 21, 23, 25, 28, 29, 30, 32], "thei": [0, 3, 4, 6, 10, 14, 15, 16, 20, 23, 26, 29, 30, 32, 33], "them": [0, 2, 3, 4, 6, 10, 19, 20, 23, 26, 29, 30, 31, 32, 33], "themselv": 10, "therefor": [3, 28, 29], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "thing": [0, 3, 4, 12, 18, 21, 23, 27, 30, 32], "think": [4, 6, 28, 29], "third": [0, 17], "those": [1, 3, 6, 10, 14, 29, 30, 32], "though": [0, 4, 6, 7, 33], "thread": [4, 10, 19, 30], "three": [0, 12, 20, 29], "through": [0, 3, 4, 6, 7, 8, 12, 19, 20, 21, 23, 31], "throughout": 23, "throw": 9, "ti": [0, 21], "tifa": [0, 4, 5, 6, 7, 17, 19, 21, 23, 24, 25, 26], "tifa_analysi": [5, 12, 16, 24, 25, 33], "tifa_cor": 12, "tifaanalysi": 12, "time": [0, 3, 4, 6, 10, 14, 20, 23, 29, 32, 33], "timeout": [4, 10, 19], "timeout_error": [5, 10], "timeouterror": 10, "titl": [0, 3, 6, 8, 16, 20, 23, 24, 27], "tl": 0, "to_json": [0, 3], "todo": [0, 6, 7, 10, 12, 33], "togeth": [0, 3, 10, 29], "too": [0, 4, 10, 32], "too_few_field": 32, "too_few_paramet": 32, "too_many_field": 32, "too_many_paramet": 32, "took": 25, "tool": [2, 3, 6, 7, 8, 9, 11, 14, 16, 17, 19, 23, 24, 26, 27, 33], "tool_nam": 0, "toolkit": [0, 20, 23], "toolregistr": 0, "tooltip": 3, "top": [7, 10, 12, 20, 28, 29, 32, 33], "total": [0, 3, 6, 10, 16, 23, 29], "total_cal": 29, "toward": [3, 16, 29], "tqdm": 4, "trace": [4, 6, 10, 25, 28, 29, 30], "traceback": [4, 10, 16, 23, 28], "traceback_messag": [10, 31], "traceback_preambl": 31, "tracebackexcept": 4, "tracer": [4, 30], "tracer_styl": [10, 30], "track": [0, 10, 16, 22, 26], "trail": [6, 29, 30], "translat": 4, "travers": [6, 7, 12], "treat": [2, 3, 10, 30], "tree": [6, 7], "trexler": 23, "tri": [10, 11, 15, 16, 20, 21, 31], "trigger": [0, 16, 26, 31], "trim": 7, "tripl": [20, 23], "trivial": 20, "troubl": 18, "true": [0, 3, 6, 7, 8, 10, 11, 12, 20, 26, 29, 30, 32], "trunc": 4, "truncat": 4, "truthi": [3, 29], "try": [0, 2, 4, 19, 20, 22, 26, 29, 34], "tupl": [0, 6, 12, 27, 29, 30, 32], "tupletyp": 25, "turn": [3, 10, 23, 28], "turtl": [8, 10], "tutori": 25, "twice": 32, "two": [3, 6, 8, 14, 20, 23, 26, 29, 32, 33], "txt": [20, 26, 32], "type": [0, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 20, 22, 23, 24, 26, 29, 30, 32, 33], "type_chang": 33, "type_definit": 25, "type_error": [5, 10], "typecheck": 16, "typeerror": 26, "typic": [0, 3, 10, 14, 25, 26, 27, 29, 30], "typograph": 0, "u": [4, 13, 15, 16], "udel": [0, 13], "ultim": [0, 3, 23], "unari": [6, 7, 32], "unbalanc": 4, "uncategor": 0, "unchang": [3, 28], "unclear": 4, "uncondition": 3, "unconnect": 33, "unconnected_block": 33, "undeclar": 16, "undefin": 3, "under": [0, 21, 30], "underli": 3, "underscor": [0, 2, 3, 23], "understand": 30, "undesir": 0, "undo": 31, "unequ": 33, "unexect": 10, "unexecut": 10, "unexpect": 4, "unfil": 33, "unfortun": 4, "unhappi": 3, "unhelp": 16, "unifi": 6, "uniform": 12, "uniqu": [0, 2, 3, 6, 10, 14, 27, 29, 30], "unique_cal": 29, "unique_call_count": 6, "unit": [3, 6, 16, 17, 20, 29], "unit_test": [0, 5, 6, 20, 23, 24, 29], "unittest": [4, 6, 20], "univers": [13, 27], "unknown": [0, 3, 32], "unknown_field": 32, "unknowntyp": 25, "unless": [4, 6, 7, 10, 12, 30], "unlik": [6, 27, 29], "unload": 10, "unmodifi": 28, "unnecessari": 33, "unnecessary_second_branch": 33, "unscor": [0, 3, 6, 8, 20, 24, 27], "unspecifi": 0, "unsurprisingli": 32, "until": [3, 4, 10, 33], "unus": [23, 26, 33], "unused_vari": [3, 33], "unusu": 34, "up": [0, 3, 7, 10, 16, 23, 26, 29, 30], "updat": [0, 3, 20, 26], "update_loc": 0, "upload": 21, "us": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "usabl": 21, "usag": [17, 19, 22, 25, 26], "use_previ": 7, "used_dollar_sign": 20, "used_tri": 20, "user": [0, 3, 4, 6, 7, 8, 10, 26, 28], "usr": 21, "usual": [0, 3, 4, 10, 27, 30, 33], "util": [0, 4, 20], "utterli": 3, "valenc": [0, 3, 6, 8, 14, 27], "valid": [2, 3, 10], "valu": [0, 3, 4, 6, 9, 10, 12, 14, 20, 23, 26, 29, 30, 32, 33], "value_error": [5, 10], "valueerror": [10, 30], "var": [10, 25], "vari": 0, "variabl": [0, 2, 3, 6, 10, 12, 16, 20, 21, 23, 24, 26, 29, 30, 32, 33], "variable_nam": [6, 29], "variou": [0, 1, 3, 4, 27], "vastli": [6, 23], "ve": [20, 23], "verb": 3, "veri": [0, 3, 6, 26, 32], "verifi": [5, 6, 8, 11, 16, 19, 23, 24, 29, 31], "verify_sect": [5, 11], "verifypipelin": 19, "version": [0, 4, 6, 8, 10, 11, 14, 20, 21, 23, 26, 29, 30, 32], "version_info": 4, "via": [0, 4, 10, 15, 16, 23, 26, 30, 32], "viewabl": 26, "violat": 0, "virginia": 13, "vision": 21, "visit": [12, 33], "visit_": 12, "visit_annassign": 12, "visit_assign": 12, "visit_attribut": 12, "visit_augassign": 12, "visit_binop": 12, "visit_bool": 12, "visit_boolop": 12, "visit_classdef": 12, "visit_compar": 12, "visit_comprehens": 12, "visit_const": 12, "visit_dict": 12, "visit_dictcomp": 12, "visit_expr": 12, "visit_for": 12, "visit_functiondef": 12, "visit_generatorexp": 12, "visit_if": 12, "visit_ifexp": 12, "visit_import": 12, "visit_importfrom": 12, "visit_lambda": 12, "visit_list": 12, "visit_listcomp": 12, "visit_nam": 12, "visit_nameconst": 12, "visit_num": 12, "visit_return": 12, "visit_setcomp": 12, "visit_slic": 12, "visit_stat": 12, "visit_str": 12, "visit_subscript": 12, "visit_unaryop": 12, "visit_whil": 12, "visit_with": 12, "vpl": [17, 19], "vpl_environ": 21, "vpl_evalu": 21, "vpl_execut": 21, "vpl_subfile0": 21, "vscodeedu": 19, "vt": 13, "w": 20, "wa": [0, 3, 4, 6, 7, 8, 10, 14, 15, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33], "wai": [0, 4, 14, 17, 19, 20, 23, 27, 29], "walk": [3, 20], "want": [0, 3, 4, 6, 7, 10, 13, 19, 20, 21, 23, 25, 26, 27, 29, 30, 32], "warn": 19, "warrant": [14, 16], "was_typ": 25, "wasnot": 33, "we": [0, 2, 3, 4, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27, 29, 32], "web": [14, 17, 28], "webcat": [0, 14], "well": [3, 4, 14, 23, 25], "went": [26, 30], "were": [3, 4, 6, 7, 10, 28, 29, 30, 31, 32, 33], "what": [0, 3, 4, 10, 16, 17, 19, 23, 27, 29, 30], "whatev": [0, 3, 6, 10, 14, 25, 29, 30], "wheat": 6, "wheat_chaff_game_class": [5, 6], "when": [0, 2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 18, 21, 22, 23, 26, 27, 29, 30, 31, 33], "whenev": 2, "where": [3, 4, 10, 20, 26, 30, 33], "whether": [0, 3, 6, 7, 8, 10, 11, 12, 20, 26, 29, 32], "which": [0, 1, 3, 4, 10, 12, 16, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32], "while": [1, 3, 6, 11, 12, 23, 30, 31, 32], "white": 28, "whitespac": [30, 32], "who": [0, 27, 33], "whole": [6, 20], "whose": 33, "why": [0, 4, 6, 17, 26, 27, 29, 30], "why_ignor": [6, 29], "wide": [0, 16], "wild": 23, "wildcard": 23, "win": [3, 20], "win_and_lose_path": 20, "win_path": 20, "wish": [0, 23, 29], "within": [0, 1, 2, 3, 6, 7, 10, 14, 23, 24, 30, 33], "without": [0, 3, 6, 7, 10, 12, 15, 16, 19, 20, 29, 32], "won": [0, 20, 27, 29], "wonder": 4, "word": [0, 6, 10, 20, 23, 29], "words_fil": 20, "work": [0, 3, 4, 6, 10, 15, 19, 20, 23, 25, 26, 27, 29, 30], "workaround": 4, "world": [20, 23, 26, 29, 30], "worth": [3, 32], "would": [0, 4, 10, 14, 20, 23], "wow": 20, "wrap": [4, 27, 29], "wrapper": [12, 23, 29, 32], "wrapup": 0, "write": [3, 10, 12, 14, 16, 19, 20, 23, 26, 27, 29, 30, 32, 33], "write_out_of_scop": 33, "written": [12, 14, 16], "wrong": [0, 16, 22, 23, 26, 30, 32, 33], "wrong_fields_typ": 32, "wrong_output": [22, 26], "wrong_parameter_typ": 32, "wrong_plt_data": [5, 8], "wrong_plt_typ": [5, 8], "wrong_return_typ": 32, "wrote": 21, "x": [12, 20, 21, 28, 29, 32], "xor": [3, 6], "y": [28, 29, 32], "yet": [0, 4, 18, 22], "yield": 30, "you": [0, 1, 3, 4, 6, 7, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33], "your": [3, 9, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33], "yourself": [23, 25, 26], "z": 28, "zero": 1, "zero_division_error": [5, 10], "zerodivisionerror": 10, "zip": 19, "zip_longest": 4}, "titles": ["Developer API", "Compilation", "Internal Naming Conventions", "Developers: Feedback Functions", "Necessary Libraries", "Developer Tools Reference", "Assertions", "CAIT", "Extensions", "Questions", "Sandbox", "Source", "TIFA", "Contact", "Glossary", "Installation", "Introduction", "Welcome to Pedal\u2019s documentation!", "Researchers: Analyzing with Pedal", "Command-Line Interface", "Teacher Examples", "Autograder Integrations", "Best Practices", "Teacher Quick Start Guide", "Teacher Reference", "CAIT", "Core Commands", "Feedback Functions", "Formatter", "Runtime Assertions", "Sandbox", "Source", "Static Assertions", "TIFA", "Pedal\u2019s Type System"], "titleterms": {"": [17, 34], "The": 3, "an": 16, "analyz": 18, "api": 0, "architectur": 16, "argument": 19, "arithmet": 20, "assert": [6, 23, 29, 32], "ast": 23, "autograd": 21, "basic": 20, "best": 22, "blockpi": 21, "built": 34, "cait": [7, 25], "call": [20, 23, 25], "cat": 21, "check": 23, "command": [0, 19, 23, 26], "compat": 15, "compatibl": 4, "compil": 1, "complex": 20, "concept": [0, 3], "contact": 13, "content": [5, 17, 24], "control": 23, "convent": 2, "core": [0, 23, 26], "creat": 3, "critic": 4, "custom": 23, "data": [7, 11, 25], "defin": 20, "definit": 25, "develop": [0, 3, 5], "differ": 3, "disabl": 3, "document": [17, 22], "environ": [0, 23], "equival": 29, "exampl": [16, 20], "execut": 23, "exist": 3, "extens": 8, "feedback": [0, 3, 22, 23, 27, 31], "file": 19, "find": [23, 25], "format": 19, "formatt": 28, "friendli": 22, "function": [3, 20, 23, 25, 27, 34], "gener": 34, "github": 15, "glossari": 14, "gradescop": 21, "guid": 23, "hint": 34, "import": 0, "indic": 17, "instal": 15, "instructor": 23, "integr": 21, "interfac": 19, "intern": 2, "introduct": 16, "json": 34, "jupyt": 21, "languag": 22, "larg": 20, "librari": 4, "lifetim": 3, "line": [19, 23], "list": 25, "locat": 0, "match": 25, "medium": 20, "metadata": 3, "method": 3, "micropython": 4, "mode": 19, "name": [2, 19, 29], "necessari": 4, "non": 4, "notebook": 21, "novic": 22, "object": 34, "option": 4, "other": 23, "overrid": 3, "paramet": 19, "parti": 4, "pattern": 23, "pedal": [1, 17, 18, 25, 34], "posit": 19, "practic": 22, "project": 20, "pyodid": 1, "pypi": 15, "question": [9, 20], "quick": 23, "refer": [5, 24, 25], "report": [0, 7, 11], "research": 18, "resolv": 23, "result": 23, "runtim": 29, "sandbox": [10, 30], "save": 25, "script": 23, "section": 31, "simpl": 23, "skulpt": [1, 4], "sourc": [11, 31], "standard": 4, "start": 23, "static": 32, "student": [20, 23], "submiss": 0, "subtre": 25, "system": 34, "tabl": 17, "teacher": [20, 23, 24], "test": 23, "third": 4, "tifa": [12, 33], "tool": [0, 5], "type": [25, 34], "unit": 23, "us": 22, "usag": 23, "variabl": 25, "vpl": 21, "wai": 3, "web": 21, "welcom": 17, "why": 3}})