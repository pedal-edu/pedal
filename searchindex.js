Search.setIndex({"docnames": ["developers/api", "developers/compilation", "developers/conventions", "developers/ffs", "developers/libraries", "developers/tools", "developers/tools/assertions", "developers/tools/cait", "developers/tools/extensions", "developers/tools/questions", "developers/tools/sandbox", "developers/tools/source", "developers/tools/tifa", "everyone/contact", "everyone/glossary", "everyone/installation", "everyone/introduction", "index", "teachers/analysis", "teachers/examples", "teachers/integrations", "teachers/practices", "teachers/quickstart", "teachers/reference", "teachers/tools/cait", "teachers/tools/core", "teachers/tools/ffs", "teachers/tools/formatter", "teachers/tools/runtime_assertions", "teachers/tools/sandbox", "teachers/tools/source", "teachers/tools/static_assertions", "teachers/tools/tifa", "teachers/tools/types"], "filenames": ["developers/api.rst", "developers/compilation.rst", "developers/conventions.rst", "developers/ffs.rst", "developers/libraries.rst", "developers/tools.rst", "developers/tools/assertions.rst", "developers/tools/cait.rst", "developers/tools/extensions.rst", "developers/tools/questions.rst", "developers/tools/sandbox.rst", "developers/tools/source.rst", "developers/tools/tifa.rst", "everyone/contact.rst", "everyone/glossary.rst", "everyone/installation.rst", "everyone/introduction.rst", "index.rst", "teachers/analysis.rst", "teachers/examples.rst", "teachers/integrations.rst", "teachers/practices.rst", "teachers/quickstart.rst", "teachers/reference.rst", "teachers/tools/cait.rst", "teachers/tools/core.rst", "teachers/tools/ffs.rst", "teachers/tools/formatter.rst", "teachers/tools/runtime_assertions.rst", "teachers/tools/sandbox.rst", "teachers/tools/source.rst", "teachers/tools/static_assertions.rst", "teachers/tools/tifa.rst", "teachers/tools/types.rst"], "titles": ["Developer API", "Compilation", "Internal Naming Conventions", "Developers: Feedback Functions", "Necessary Libraries", "Developer Tools Reference", "Assertions", "CAIT", "Extensions", "Questions", "Sandbox", "Source", "TIFA", "Contact", "Glossary", "Installation", "Introduction", "Welcome to Pedal\u2019s documentation!", "Researchers: Analyzing with Pedal", "Teacher Examples", "Autograder Integrations", "Best Practices", "Teacher Quick Start Guide", "Teacher Reference", "CAIT", "Core Commands", "Feedback Functions", "Formatter", "Runtime Assertions", "Sandbox", "Source", "Static Assertions", "TIFA", "Pedal\u2019s Type System"], "terms": {"thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "complet": [0, 3, 4, 10, 19, 22, 25, 26, 33], "refer": [0, 2, 6, 7, 10, 14, 15, 17, 22, 31], "pedal": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32], "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 20, 22, 26, 27, 28, 29, 31, 32], "associ": [0, 3, 10, 11, 16], "compon": [0, 12, 16], "If": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31], "you": [0, 1, 3, 4, 6, 7, 9, 10, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32], "ar": [0, 2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32], "an": [0, 3, 4, 6, 7, 9, 10, 11, 12, 14, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "instructor": [0, 3, 6, 10, 14, 16, 17, 19, 20, 23, 24, 25, 26, 28, 29, 31], "might": [0, 1, 3, 4, 10, 16, 19, 22, 25, 26, 27, 28, 29], "find": [0, 1, 6, 7, 11, 12, 16, 17, 20, 23], "more": [0, 3, 4, 6, 10, 14, 15, 16, 19, 22, 24, 25, 26, 28, 29, 30, 31], "help": [0, 1, 3, 14, 16, 25], "read": [0, 6, 10, 12, 14, 19, 25, 29, 32], "over": [0, 10, 19, 26, 27, 32], "quickstart": 0, "too": [0, 4, 10, 31], "function": [0, 4, 6, 7, 8, 10, 12, 14, 16, 17, 23, 25, 27, 28, 29, 30, 31, 32], "ani": [0, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32], "can": [0, 1, 2, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "attach": [0, 3, 7, 10, 12, 14, 25, 29, 32], "object": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25, 28, 29], "technic": [0, 3, 7, 14, 31], "should": [0, 2, 3, 4, 10, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32], "clearli": [0, 3, 16, 28], "mark": [0, 3, 22, 27], "respons": [0, 3, 14, 16, 21, 22, 25, 26, 28, 30, 31, 32], "markdown": [0, 14, 26, 27], "also": [0, 3, 4, 6, 10, 11, 14, 16, 17, 20, 21, 22, 24, 25, 28, 29, 31], "provid": [0, 3, 6, 10, 14, 16, 17, 21, 22, 25, 26, 27, 28, 29, 31], "plain": [0, 14, 26, 27], "text": [0, 3, 6, 10, 14, 19, 20, 25, 26, 27, 28], "consol": [0, 10, 27, 29], "friendli": [0, 2, 6, 16, 17], "version": [0, 4, 6, 8, 10, 11, 14, 19, 20, 22, 25, 28, 29, 31], "recommend": [0, 2, 3, 22, 25], "have": [0, 3, 4, 6, 10, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32], "mute": [0, 3, 6, 8, 11, 19, 23, 25, 26, 32], "boolean": [0, 3, 6, 7, 12, 28, 31], "paramet": [0, 3, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 25, 26, 27, 28, 29, 31, 32], "allow": [0, 3, 4, 6, 10, 14, 16, 21, 22, 28, 29, 31], "us": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "strictli": [0, 28], "condit": [0, 3, 6, 8, 14, 16, 21, 22, 25, 26], "when": [0, 2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 25, 26, 28, 29, 30, 32], "still": [0, 3, 4, 10, 28, 29], "contribut": [0, 3], "correct": [0, 3, 6, 8, 19, 22, 23, 25, 26, 27, 31], "consid": [0, 3, 7, 11], "being": [0, 3, 6, 8, 10, 12, 14, 26, 29], "displai": [0, 3, 4, 25, 26, 32], "user": [0, 3, 4, 6, 7, 8, 10, 25, 27], "Its": [0, 22], "score": [0, 3, 6, 8, 16, 19, 20, 22, 23, 25, 26, 28, 31], "ad": [0, 3, 4, 10, 14, 15, 16, 22, 24, 25, 29], "though": [0, 4, 6, 7, 32], "three": [0, 12, 19, 28], "perspect": [0, 3, 26], "grader": [0, 22], "we": [0, 2, 3, 4, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 28, 31], "need": [0, 1, 3, 4, 9, 12, 14, 19, 20, 22, 24, 25, 26, 28, 29, 31, 32], "abl": [0, 3, 4, 10, 19, 29, 31], "creat": [0, 4, 6, 10, 11, 14, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30], "deliv": [0, 11, 14, 22], "autograd": [0, 14, 15, 16, 17, 22, 26], "without": [0, 3, 6, 7, 10, 12, 15, 16, 19, 28, 31], "cumbersom": 0, "experiment": [0, 4], "custom": [0, 3, 4, 10, 16, 17, 20, 25], "messag": [0, 3, 4, 6, 8, 10, 11, 14, 16, 19, 20, 22, 23, 25, 26, 28], "wai": [0, 4, 14, 17, 19, 22, 26, 28], "expos": 0, "all": [0, 3, 4, 6, 7, 9, 10, 11, 12, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "featur": [0, 3, 4, 14, 22, 23], "research": [0, 14, 16, 17], "aren": [0, 18, 21], "t": [0, 3, 4, 7, 9, 11, 15, 16, 18, 19, 21, 24, 25, 26, 28, 29, 31, 32], "try": [0, 2, 4, 19, 21, 25, 28, 33], "analyz": [0, 3, 12, 14, 16, 17, 19], "through": [0, 3, 4, 6, 7, 8, 12, 19, 20, 22, 30], "sourc": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 20, 22, 23, 24, 25, 29], "code": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31], "want": [0, 3, 4, 6, 7, 10, 13, 19, 20, 22, 24, 25, 26, 28, 29, 31], "gener": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 20, 22, 23, 24, 26, 27, 28, 29, 31], "metadata": [0, 14, 17, 21, 22], "about": [0, 3, 4, 6, 10, 12, 14, 19, 21, 22, 25, 28, 29, 31], "piec": [0, 3, 14, 21, 22, 25, 26], "includ": [0, 3, 6, 7, 12, 14, 20, 22, 25, 29, 31], "regist": [0, 4], "known": 0, "label": [0, 2, 3, 6, 8, 14, 16, 19, 21, 22, 23, 25, 26, 28, 30, 31, 32], "up": [0, 3, 7, 10, 16, 22, 25, 28, 29], "front": 0, "goal": [0, 4, 16, 17, 29], "broadcast": 0, "what": [0, 3, 4, 10, 16, 17, 22, 26, 28, 29], "current": [0, 3, 4, 6, 7, 10, 11, 12, 25, 26, 28, 29, 30, 31, 32], "ideal": [0, 2, 3], "d": [0, 3, 9, 11, 19, 29], "system": [0, 3, 4, 10, 14, 16, 17, 23, 25, 28], "elegantli": 0, "overrid": [0, 4, 6, 10, 17, 25, 26, 28, 30, 31], "": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "word": [0, 6, 10, 19, 22, 28], "standard": [0, 15, 17, 27], "name": [0, 3, 6, 7, 10, 12, 14, 17, 19, 22, 23, 25, 26, 27, 29, 30, 31, 32], "schema": [0, 2], "other": [0, 3, 4, 6, 10, 14, 16, 17, 20, 24, 25, 27, 28, 29, 30, 31, 32], "field": [0, 3, 4, 6, 7, 8, 10, 11, 21, 23, 24, 26, 27, 29, 31], "some": [0, 3, 4, 6, 11, 12, 14, 16, 19, 22, 24, 25, 26, 28, 30, 31], "guidanc": [0, 23, 25], "how": [0, 3, 6, 10, 11, 18, 19, 22, 27, 28], "thei": [0, 3, 4, 6, 10, 14, 15, 16, 19, 22, 25, 28, 29, 31, 32], "author": [0, 6, 8, 14, 19, 23, 27], "In": [0, 3, 6, 10, 19, 22, 24, 28], "attempt": [0, 3, 4, 10, 14, 21, 23, 29, 32], "follow": [0, 1, 3, 4, 6, 8, 12, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32], "python": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 19, 20, 22, 27, 29], "variabl": [0, 2, 3, 6, 10, 12, 16, 19, 20, 22, 23, 25, 28, 29, 31, 32], "rule": [0, 6, 26], "lowercas": [0, 2, 6, 28], "underscor": [0, 2, 3, 22], "atom": [0, 3, 14], "one": [0, 3, 4, 7, 9, 10, 12, 14, 16, 19, 21, 22, 24, 25, 26, 28, 30, 31, 32], "ha": [0, 3, 6, 7, 10, 11, 12, 14, 16, 18, 20, 22, 25, 27, 28, 29, 31, 32], "exactli": [0, 6, 28, 31], "possibl": [0, 2, 3, 4, 14, 15, 20, 21, 22, 29, 32], "outcom": [0, 19], "move": [0, 30, 31], "static": [0, 3, 6, 17, 22, 23], "attribut": [0, 3, 4, 10, 12, 22, 24, 28], "template_text": 0, "str": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 19, 22, 25, 26, 27, 28, 29, 30, 31], "A": [0, 3, 4, 6, 7, 8, 10, 12, 14, 21, 22, 25, 26, 27, 28, 29], "string": [0, 3, 4, 6, 7, 9, 10, 11, 12, 19, 22, 24, 25, 26, 28, 29, 30, 31], "pass": [0, 3, 6, 10, 12, 22, 24, 25, 28, 29, 30, 32], "keyword": [0, 3, 10, 24, 26], "argument": [0, 1, 3, 4, 6, 10, 22, 24, 25, 28, 29, 31, 32], "message_text": 0, "same": [0, 3, 6, 9, 12, 14, 19, 22, 24, 25, 26, 28, 29, 31, 32], "justif": [0, 3, 6, 8, 23, 25, 26, 28, 30, 32], "titl": [0, 3, 6, 8, 16, 19, 22, 23, 26], "student": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31], "semvar": 0, "e": [0, 3, 4, 6, 7, 10, 11, 14, 20, 22, 24, 25, 28, 29, 31, 32], "g": [0, 3, 4, 6, 7, 10, 11, 20, 22, 24, 25, 28, 29, 31, 32], "0": [0, 3, 6, 9, 12, 19, 20, 22, 24, 25, 28, 29, 30, 31], "1": [0, 1, 3, 4, 6, 12, 16, 19, 22, 25, 28, 29, 30, 31], "pair": [0, 6, 8, 26, 28], "docstr": [0, 28, 31], "changelog": 0, "composit": [0, 3, 14, 26], "multipl": [0, 4, 6, 11, 12, 25, 26, 28, 29, 30, 31, 32], "could": [0, 3, 4, 6, 8, 10, 14, 16, 22, 25, 30], "spell": 0, "them": [0, 2, 3, 4, 6, 10, 19, 22, 25, 28, 29, 30, 31, 32], "out": [0, 3, 4, 7, 10, 12, 16, 19, 22, 25, 32], "tifa": [0, 4, 5, 6, 7, 17, 20, 22, 23, 24, 25], "rel": [0, 22], "central": [0, 14, 16, 17, 22], "finit": 0, "set": [0, 3, 6, 7, 9, 10, 11, 12, 20, 22, 25, 26, 28, 29, 30, 31, 32], "desir": [0, 3, 10, 20, 28], "configur": [0, 11, 14, 20, 25, 32], "reus": [0, 3, 10, 25], "phrase": 0, "mostli": [0, 2, 4, 27, 30], "syntax": [0, 3, 10, 11, 14, 16, 19, 22, 25, 26, 27, 29, 30], "error": [0, 3, 4, 6, 7, 10, 11, 12, 16, 19, 21, 22, 25, 26, 28, 29, 30], "cait": [0, 4, 5, 6, 17, 19, 22, 23, 31], "No": [0, 10, 12, 19, 20, 30, 31], "just": [0, 3, 6, 10, 12, 16, 22, 26, 27, 28, 29, 31, 32], "detector": 0, "assert": [0, 4, 5, 8, 17, 19, 23, 29], "heavili": [0, 22], "procedur": 0, "question": [0, 3, 4, 5, 14, 16, 17, 22], "inherit": [0, 3, 4, 12, 27], "from": [0, 1, 3, 4, 6, 7, 9, 10, 12, 16, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "sandbox": [0, 3, 4, 5, 6, 8, 16, 17, 19, 22, 23, 28], "runtim": [0, 3, 6, 10, 14, 16, 17, 21, 22, 23, 25, 26, 29, 31], "extern": [0, 15], "strong": 0, "toolkit": [0, 19, 22], "often": [0, 3, 4, 14, 24, 25, 28], "imper": 0, "style": [0, 6, 14, 19, 22], "construct": [0, 6, 10, 26], "conveni": [0, 4, 14, 22, 25, 28, 30], "global": [0, 3, 9, 10, 11, 14], "main_report": [0, 3, 7, 9, 10, 11], "class": [0, 2, 3, 4, 6, 8, 10, 12, 24, 26, 27, 28, 29, 31], "arg": [0, 3, 6, 8, 10, 19, 24], "none": [0, 3, 6, 7, 8, 9, 10, 11, 12, 19, 24, 25, 28, 29, 31], "categori": [0, 2, 3, 6, 8, 14, 21, 23, 25, 26, 29], "field_nam": [0, 6, 8, 23, 26], "kind": [0, 2, 3, 6, 8, 10, 12, 14, 16, 21, 22, 23, 25, 26, 29, 31, 32], "message_templ": [0, 3, 6, 8, 23, 26, 27], "else_messag": [0, 3, 6, 8, 23, 26, 28], "else_message_templ": [0, 6, 8, 23, 26], "prioriti": [0, 2, 3, 6, 8, 19, 20, 22, 23, 25, 26], "valenc": [0, 3, 6, 8, 14, 26], "unscor": [0, 3, 6, 8, 19, 23, 26], "tag": [0, 6, 8, 14, 20], "parent": [0, 3, 6, 8, 24], "delay_condit": [0, 3, 6, 8], "fals": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 31], "activ": [0, 3, 6, 8, 23, 26], "true": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 29, 31], "kwarg": [0, 3, 6, 8, 10], "store": [0, 9, 10, 11, 12, 16, 19, 22, 29, 32], "raw": [0, 4, 16, 29], "intern": [0, 3, 10, 12, 17, 25, 26, 27, 29, 33], "specif": [0, 3, 4, 14, 15, 16, 25, 26, 31], "The": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "separ": [0, 2, 3, 11, 29, 30], "convent": [0, 3, 17], "do": [0, 3, 4, 6, 10, 14, 16, 19, 20, 22, 24, 25, 26, 28, 31, 32], "uniqu": [0, 2, 3, 6, 10, 14, 26, 28, 29], "especi": [0, 2, 14], "within": [0, 1, 2, 3, 6, 7, 10, 14, 22, 23, 29, 32], "type": [0, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 21, 22, 23, 25, 28, 29, 31, 32], "indic": [0, 3, 12, 25, 27, 30], "taken": [0, 3], "directli": [0, 3, 10, 19, 28, 31], "itself": [0, 3, 10, 12, 14, 16, 28, 29], "wa": [0, 3, 4, 6, 7, 8, 10, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32], "control": [0, 3, 12, 14, 16, 17, 19, 20, 26, 28], "script": [0, 3, 14, 16, 17, 19, 20, 25, 26], "option": [0, 7, 10, 11, 15, 17, 19, 20, 22, 25, 29], "human": [0, 2, 6, 10], "present": [0, 6, 8, 9, 22], "showabl": 0, "learner": [0, 3, 14, 16, 22, 25], "sort": [0, 6, 26, 28, 31], "fall": 0, "algorithm": [0, 3, 22, 25], "than": [0, 6, 14, 16, 17, 19, 20, 22, 24, 27, 28, 29, 31], "cannot": [0, 4, 12, 19, 28, 32], "pedagog": [0, 3, 14, 16, 25, 33], "role": [0, 14], "misconcept": [0, 14], "mistak": [0, 3, 14, 16, 19, 22, 26, 27], "hint": [0, 14, 21, 22, 23, 25, 26], "constraint": 0, "usual": [0, 3, 4, 10, 26, 29, 32], "point": [0, 3, 6, 10, 24, 28], "variou": [0, 1, 3, 4, 26], "purpos": [0, 3, 26], "face": 0, "briefli": 0, "describ": [0, 3, 23, 26], "why": [0, 4, 6, 17, 25, 26, 28, 29], "select": [0, 9, 16], "serv": [0, 3, 9], "tl": 0, "dr": [0, 13], "debug": [0, 1, 3, 23, 25, 31], "appear": [0, 3, 6, 10, 22, 29], "justification_templ": 0, "format": [0, 3, 6, 10, 19, 27, 28], "templat": [0, 3, 6, 26], "inject": [0, 3, 10], "IF": [0, 19], "met": [0, 3, 6, 26], "high": [0, 2, 22], "medium": [0, 2, 17], "low": [0, 2], "get": [0, 3, 4, 10, 20, 22, 24, 28, 29], "resolv": [0, 3, 4, 14, 16, 17, 19, 25, 26], "typic": [0, 3, 10, 14, 24, 25, 26, 28, 29], "break": [0, 3, 27, 30, 32], "ti": [0, 20], "whether": [0, 3, 6, 7, 8, 10, 11, 12, 19, 25, 28, 31], "neg": [0, 3, 22], "posit": [0, 3, 6, 10, 21, 26], "neutral": [0, 3], "either": [0, 6, 8, 10, 14, 25, 27, 28, 30], "int": [0, 3, 6, 7, 8, 9, 10, 16, 19, 22, 24, 27, 28, 29, 30, 31], "formal": [0, 32], "instead": [0, 3, 7, 10, 14, 19, 22, 24, 25, 26, 28, 30, 31, 32], "aka": [0, 6, 28], "support": [0, 3, 4, 6, 7, 10, 14, 22, 24, 26, 28, 31], "html": [0, 6, 14, 20, 22, 26, 27], "render": [0, 19, 26, 27], "data": [0, 3, 6, 8, 9, 10, 12, 14, 19, 22, 23, 25, 26, 27, 29, 31], "interpol": [0, 26, 27], "produc": [0, 6, 7, 14, 19, 20, 22], "dict": [0, 3, 6, 7, 8, 10, 11, 19, 26, 29, 31], "inform": [0, 1, 3, 6, 8, 10, 12, 14, 15, 22, 25, 28, 29, 31], "relev": [0, 7, 14, 22, 27, 29], "numer": [0, 3, 12, 25, 27], "modifi": [0, 3, 10, 19, 24, 25, 29], "total": [0, 3, 6, 10, 16, 22, 28], "overal": [0, 3, 6, 25], "perform": [0, 3, 6, 12, 30, 32], "It": [0, 3, 10, 14, 19, 22, 23, 29, 31, 32, 33], "ultim": [0, 3, 22], "decid": [0, 3, 4], "combin": [0, 3, 14], "differ": [0, 4, 6, 7, 8, 14, 16, 17, 19, 22, 27, 28, 32], "strategi": [0, 3, 6, 25, 28], "would": [0, 4, 10, 14, 19, 22], "add": [0, 3, 7, 10, 14, 22, 28, 29, 31], "togeth": [0, 3, 10, 28], "non": [0, 3, 12, 17, 19, 28, 29, 32], "entir": [0, 3, 4, 24, 25, 29], "success": [0, 3, 7, 11, 12, 20, 25, 26], "task": [0, 3, 26], "now": [0, 3, 19, 22, 25], "finish": [0, 3, 19], "bool": [0, 3, 6, 7, 8, 10, 11, 12, 19, 22, 25, 28, 31], "someth": [0, 2, 3, 22, 24, 25, 27, 28, 31], "shown": [0, 3, 10, 16, 25, 26, 29], "There": [0, 2, 3, 16, 22, 31, 32], "case": [0, 3, 6, 19, 22, 26, 27, 28, 31], "flag": [0, 3, 26, 27, 31], "later": [0, 3], "suppress": [0, 3, 14, 19, 23, 25], "default": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32], "perhap": [0, 3, 10, 25, 28, 31], "interest": [0, 3, 4, 20, 26], "analysi": [0, 3, 7, 12, 16, 17, 22, 26, 32], "give": [0, 3, 6, 16, 17, 19, 22, 25, 26, 28, 31], "NOT": [0, 3, 4, 26], "trigger": [0, 16, 25, 30], "similar": [0, 3, 10, 25, 28], "mean": [0, 3], "deactiv": 0, "note": [0, 10, 19, 24, 26, 28, 29, 31], "most": [0, 1, 3, 4, 6, 7, 10, 14, 16, 20, 22, 24, 25, 26, 28, 29, 31, 32], "respect": [0, 11, 31], "list": [0, 3, 6, 7, 8, 10, 11, 12, 16, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32], "email": [0, 13], "who": [0, 26, 32], "cori": [0, 13], "bart": [0, 13, 22, 25], "acbart": [0, 13, 19], "udel": [0, 13], "edu": [0, 1, 13, 15, 20], "semant": 0, "last": [0, 10, 16, 24, 29], "third": [0, 17], "digit": 0, "increment": 0, "small": [0, 3], "bug": 0, "fix": [0, 18], "chang": [0, 3, 4, 6, 10, 12, 20, 26, 28, 31, 32], "middl": 0, "second": [0, 25, 28, 29, 32], "seriou": [0, 3], "intens": 0, "first": [0, 3, 6, 7, 10, 11, 12, 16, 20, 22, 24, 25, 28, 29, 30, 31], "made": [0, 6, 8, 10, 22, 29], "exposur": 0, "evid": 0, "base": [0, 3, 7, 10, 14, 20, 27], "motiv": 0, "logic": [0, 3, 10, 14, 22], "group": [0, 3, 10, 28], "belong": 0, "chunk": [0, 3, 11], "section": [0, 3, 11, 23, 32], "keep": [0, 2, 20], "track": [0, 10, 16, 21, 25], "decis": [0, 32], "organ": [0, 4, 14, 19], "unspecifi": 0, "fill": 0, "inspect": [0, 4, 22, 25], "context": [0, 3, 4, 6, 8, 10, 12, 16, 19, 28, 29], "alia": [0, 6, 28], "feedbackcategori": [0, 2, 25, 26], "feedbackkind": [0, 2, 26], "detect": [0, 3, 6, 8, 10, 14, 16, 22, 25, 31], "return": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 22, 24, 26, 27, 28, 29, 31, 32], "update_loc": 0, "updat": [0, 3, 19, 25], "both": [0, 6, 7, 10, 20, 22, 25, 27, 32], "todo": [0, 6, 7, 10, 12, 32], "handl": [0, 4, 6, 7, 8, 10, 12, 22, 25, 28, 29], "less": [0, 6, 28], "intellig": [0, 3], "clear_report": [0, 23, 25], "remov": [0, 1, 6, 9, 10, 11, 25, 28, 29, 30, 31], "exist": [0, 6, 7, 8, 10, 11, 12, 14, 16, 17, 22, 25, 28, 29, 30, 31, 32], "clear": [0, 10, 25, 28, 29], "compliment": [0, 6, 16, 19, 22, 23, 25, 31], "potenti": [0, 3, 12, 14], "line": [0, 3, 6, 7, 8, 10, 14, 16, 17, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32], "contextualize_report": [0, 19, 22, 23, 25], "filenam": [0, 6, 10, 11, 12, 25, 27, 29, 30, 31], "answer": [0, 11, 19, 22, 25, 31], "py": [0, 4, 11, 16, 19, 20, 21, 22, 25], "By": [0, 3, 10, 14, 20, 24, 25, 29, 31], "old": [0, 25, 32], "actual": [0, 3, 4, 6, 8, 10, 12, 19, 25, 26, 27, 28, 29, 30, 31, 32], "repres": [0, 3, 7, 12, 25], "given": [0, 3, 6, 7, 8, 10, 11, 12, 14, 19, 22, 25, 28, 29, 30, 31, 32], "befor": [0, 10, 11, 12, 19, 22, 27, 30, 31, 32], "item": [0, 19, 24, 28], "log": [0, 23, 25, 31], "work": [0, 3, 4, 6, 10, 15, 19, 22, 24, 25, 26, 28, 29], "higher": [0, 3, 32], "doe": [0, 3, 4, 6, 10, 22, 23, 28, 29, 31], "convert": [0, 19, 28, 29], "match": [0, 6, 7, 8, 16, 22, 23, 28, 32], "valu": [0, 3, 4, 6, 9, 10, 12, 14, 19, 22, 25, 28, 29, 31, 32], "Will": [0, 10, 26], "alreadi": [0, 10, 22, 29, 32], "explain": [0, 6, 16, 19, 22, 23, 25, 27], "like": [0, 2, 3, 4, 6, 7, 10, 12, 16, 20, 22, 24, 25, 27, 28, 29, 31, 32], "gentli": [0, 19, 21, 22, 23, 24, 25], "show": [0, 3, 8, 11, 19, 20, 22, 26], "get_all_feedback": [0, 23, 25], "access": [0, 3, 10, 12, 20, 22, 24, 29], "won": [0, 19, 26, 28], "build": [0, 3, 4, 14], "result": [0, 3, 4, 10, 12, 14, 16, 17, 19, 20, 27, 28, 29], "earlier": [0, 19, 20], "mechan": [0, 26], "search": [0, 4, 6, 7, 17, 24, 28, 31], "get_submiss": 0, "give_parti": [0, 19, 23, 25, 31], "increas": [0, 10, 25], "instruct": [0, 3, 17, 19, 25, 28, 31], "hide_correct": [0, 23, 25], "forc": [0, 6], "hide": [0, 20], "sep": 0, "between": [0, 3, 6, 8], "space": [0, 6, 27, 28], "set_correct": 0, "assign": [0, 3, 7, 10, 12, 14, 19, 20, 22, 29], "done": [0, 22], "set_formatt": 0, "formatt": [0, 3, 17, 23, 26], "wish": [0, 22, 28], "instanc": [0, 3, 6, 10, 28], "ll": [0, 22, 24], "call": [0, 3, 4, 5, 6, 7, 8, 10, 12, 16, 17, 23, 27, 28, 29, 30, 31, 32], "set_success": [0, 19, 23, 25], "member": [0, 3], "feedback_categori": [0, 25], "kei": [0, 3, 4, 10, 19], "system_error": 0, "gone": [0, 3], "wrong": [0, 16, 21, 22, 25, 29, 31, 32], "level": [0, 7, 10, 19, 24, 28, 31, 32], "doesn": [0, 4, 7], "happen": [0, 3, 10, 22, 26], "sometim": [0, 10, 12, 22, 28, 29], "cascad": 0, "polit": 0, "suggest": [0, 3], "correctli": [0, 6, 7, 8, 22, 25, 28, 31], "These": [0, 2, 3, 4, 14, 22, 26, 29], "file": [0, 4, 6, 10, 11, 12, 16, 19, 20, 25, 27, 29, 30, 31], "hold": [0, 12, 29], "make": [0, 1, 3, 6, 7, 10, 16, 17, 19, 20, 22, 28, 30, 31, 32], "seem": [0, 4], "veri": [0, 3, 6, 25, 31], "reli": [0, 10], "meant": [0, 3, 14, 22, 25, 27], "singleton": [0, 14], "so": [0, 3, 4, 6, 7, 9, 10, 19, 22, 24, 25, 28, 29, 30, 31], "own": [0, 3, 4, 7, 12, 22, 28, 29], "Of": 0, "cours": [0, 14, 17, 19], "expect": [0, 3, 6, 8, 14, 19, 20, 22, 28, 29, 30, 31, 32], "onli": [0, 3, 4, 6, 10, 14, 16, 17, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32], "averag": 0, "never": [0, 22, 32], "know": [0, 10, 15, 19], "along": [0, 14, 19, 20, 31], "auxiliari": 0, "contextu": [0, 11, 25, 30], "far": [0, 6, 19, 25, 28, 29], "been": [0, 6, 10, 11, 12, 14, 20, 22, 29, 31, 32], "tupl": [0, 6, 12, 26, 28, 29, 31], "hidden": 0, "part": [0, 6, 11, 17, 25, 28, 30], "final": [0, 6, 16, 22, 25, 26, 28], "etc": [0, 12, 22, 30], "automat": [0, 3, 10, 16, 20, 22, 29], "receiv": [0, 28], "exampl": [0, 1, 2, 3, 6, 12, 17, 20, 22, 24, 27, 28, 29, 31], "order": [0, 3, 4, 6, 11, 19, 25, 28, 31], "unit_test": [0, 5, 6, 19, 22, 23, 28], "group_nam": 0, "printabl": 0, "whatev": [0, 3, 6, 10, 14, 24, 28, 29], "go": [0, 10, 19, 22], "hook": 0, "dictionari": [0, 3, 6, 7, 10, 12, 29, 31], "map": [0, 7, 10, 12, 19, 22, 29, 31], "event": 0, "callabl": [0, 8, 10, 28], "execut": [0, 3, 6, 10, 12, 16, 17, 20, 27, 28, 29], "anoth": [0, 3, 7, 14, 19, 28, 31, 32], "For": [0, 3, 6, 7, 12, 15, 16, 19, 22, 24, 25, 27, 28, 29, 31], "resolut": [0, 4], "advanc": [0, 6, 22, 30], "next": [0, 10, 11, 22, 30, 31], "_tool_data": 0, "namespac": [0, 10, 11, 12, 14, 28, 29], "probabl": [0, 3, 22, 27], "previous": [0, 7, 10, 11, 32], "check": [0, 3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 17, 19, 20, 24, 27, 28, 29, 30, 31, 32], "finalfeedback": 0, "distinct": [0, 2, 14, 28], "yet": [0, 4, 18, 21], "toolregistr": 0, "avail": [0, 4, 10, 12, 20, 23, 25, 28, 29, 30, 31], "via": [0, 4, 10, 15, 16, 22, 25, 29, 31], "classmethod": 0, "add_class_hook": 0, "add_hook": 0, "except": [0, 3, 4, 6, 7, 9, 10, 19, 24, 25, 26, 27, 29, 31], "subclass": [0, 3, 4, 12], "add_feedback": 0, "extra": [0, 3, 22, 29], "further": [0, 26], "nuanc": 0, "idea": [0, 3, 4, 19, 22, 26], "modul": [0, 4, 5, 6, 7, 8, 10, 15, 17, 19, 22, 28, 29, 31, 32], "accept": [0, 7, 28, 31], "add_ignored_feedback": 0, "ignor": [0, 6, 11, 28], "That": [0, 3], "sinc": [0, 3, 4, 6, 10, 14, 16, 20, 21, 22, 25, 28], "did": [0, 19, 25, 28, 31, 32], "appli": [0, 6, 7], "reach": [0, 25], "reset": [0, 5, 6, 7, 9, 10, 11, 12, 25], "back": [0, 3, 11, 14, 16, 19, 30], "start": [0, 3, 6, 10, 17, 19, 27, 29, 31], "form": [0, 14, 28, 31, 32], "delet": [0, 7, 12], "overridden": [0, 14], "howev": [0, 1, 3, 12, 15, 19, 20, 22, 24, 25, 26, 29, 31, 32], "affect": 0, "execute_hook": 0, "event_nam": 0, "keyword_argu": 0, "period": 0, "callback": 0, "funciton": 0, "full_clear": 0, "regular": [0, 7, 11, 19, 22, 27, 30], "register_tool": 0, "tool_nam": 0, "reset_funct": 0, "identifi": [0, 2, 3, 12, 14, 22, 26, 32], "param": [0, 7, 10, 11], "new": [0, 3, 10, 11, 12, 19, 20, 26, 27, 28, 29, 30, 32], "stop_group": 0, "prematur": 0, "end": [0, 1, 10, 11, 19, 22, 28], "wrapup": 0, "against": [0, 6, 7], "simpl": [0, 2, 12, 17, 19, 20, 25, 31, 33], "col": 0, "end_lin": 0, "end_col": 0, "column": [0, 27], "miss": [0, 4, 6, 31], "region": [0, 22], "requir": [0, 4, 6, 14, 19, 20, 28, 31], "main": [0, 1, 3, 6, 10, 11, 12, 14, 27, 28, 30, 31], "from_ast": 0, "node": [0, 6, 7, 11, 12, 22, 24, 31, 32], "ast": [0, 4, 6, 7, 11, 12, 17, 19, 24, 30, 31], "built": [0, 4, 8, 10, 17, 19, 23, 24, 28, 29, 31], "caitnod": [0, 6, 7, 10, 24], "to_json": [0, 3], "json": [0, 3, 20, 23], "compositefeedbackfunct": 0, "decor": [0, 14], "enumer": 0, "presenc": [0, 14], "notic": [0, 19, 22, 28], "which": [0, 1, 3, 4, 10, 12, 16, 19, 20, 22, 25, 26, 27, 28, 29, 31], "under": [0, 20, 29], "One": [0, 3, 10, 32], "prevent": [0, 6, 10, 22, 28, 29], "special": [0, 1, 2, 3, 8, 12, 15, 20, 25, 28], "recogn": [0, 10, 29, 31], "off": [0, 3, 7, 10, 19], "fashion": 0, "dure": [0, 3, 10, 12, 27, 30], "invalid": [0, 12, 31], "oper": [0, 3, 6, 7, 8, 12, 19, 22, 24, 28, 31, 32], "becaus": [0, 4, 6, 10, 12, 14, 26, 28, 31], "fail": [0, 3, 4, 10, 16, 22, 28], "meet": [0, 7, 26], "specifi": [0, 3, 6, 7, 16, 25, 31], "behavior": [0, 3, 10, 26, 27, 28], "test": [0, 3, 6, 10, 16, 17, 19, 28, 29], "stylist": 0, "otherwis": [0, 3, 4, 6, 7, 8, 10, 11, 14, 25, 26, 28, 29, 30, 31], "undesir": 0, "grammat": 0, "typograph": 0, "pars": [0, 4, 7, 10, 11, 22, 29, 30, 31], "caus": [0, 10, 12, 22], "grade": [0, 3, 14, 16, 19, 20, 22, 25], "infrastructur": 0, "surround": 0, "unknown": [0, 3, 31], "uncategor": 0, "vari": 0, "tend": [0, 25], "descript": [0, 3, 6, 7, 11, 22, 26], "believ": [0, 4, 16, 20], "mind": 0, "materi": 0, "must": [0, 6, 7, 19, 27, 28, 31, 32], "initi": [0, 6, 7, 9, 10, 11, 16, 20, 22, 32], "nameerror": [0, 10], "5": [0, 6, 16, 19, 22, 25, 26, 27, 28, 31], "sum": [0, 6, 16, 19, 22, 28, 29, 31], "defin": [0, 3, 4, 6, 10, 16, 17, 24, 28, 29, 31, 32], "2": [0, 1, 16, 19, 22, 27, 28, 30, 31], "violat": 0, "loop": [0, 16, 18, 22, 24, 25, 31, 32], "recurs": [0, 6, 10, 18, 24, 31, 32], "metacognit": 0, "regul": 0, "hour": 0, "time": [0, 3, 4, 6, 10, 14, 19, 22, 28, 31, 32], "take": [0, 3, 14, 19, 22, 25, 28], "feedbackrespons": 0, "extens": [0, 5, 17, 20, 22], "behind": [0, 10], "classifi": 0, "feedbackstatu": 0, "statu": [0, 3, 19], "inact": [0, 3], "depened": 0, "altern": [0, 4, 10, 16, 28, 31], "mai": [0, 1, 4, 12, 14, 16, 19, 24, 26, 28, 31], "delai": [0, 3], "collect": [0, 6, 10, 17, 22], "setup": [0, 4, 9, 14, 19, 20, 22], "adapt": [0, 27], "better": [0, 3, 29], "platform": [0, 1, 9, 15, 16, 20, 22], "blockpi": [0, 1, 4, 10, 14, 16, 17, 22, 27, 29], "webcat": [0, 14], "gradescop": [0, 14, 17], "streamlin": 0, "common": [0, 12, 14, 16, 19, 22, 29, 31], "main_fil": 0, "main_cod": [0, 3], "instructor_fil": 0, "abstract": 0, "simplifi": 0, "anyth": [0, 26, 29], "content": [0, 11, 19, 28], "represent": [0, 7, 12], "almost": [0, 1, 3, 4, 6, 15, 25], "certainli": 0, "contain": [0, 3, 4, 6, 10, 11, 12, 14, 19, 24, 28, 29], "normal": [0, 6, 10, 22, 24, 28, 29, 31], "evalu": [0, 3, 5, 6, 7, 10, 12, 20, 23, 25, 28, 29], "stdin": [0, 4], "get_program": [0, 5, 11, 19, 23, 30], "get_evalu": 0, "instructor_test": 0, "load_error": 0, "singl": [0, 4, 6, 7, 8, 10, 11, 12, 14, 20, 22, 28, 29, 30, 31], "emul": [0, 4, 10, 22], "entri": [0, 10], "run": [0, 1, 4, 5, 6, 7, 10, 12, 14, 16, 18, 19, 20, 22, 23, 24, 28, 29, 32], "addit": [0, 3, 10, 14, 16, 19, 20, 22, 24, 25, 27, 28, 31], "get_files_lin": 0, "retriev": [0, 6, 7, 8, 10, 11, 25, 28, 29, 30], "get_lin": 0, "replace_main": 0, "substitut": [0, 11], "set_line_offset": 0, "lineno": [0, 30], "offset": 0, "effect": [0, 10, 14, 22], "submodul": [0, 14], "notabl": 0, "util": [0, 4, 19], "state": [0, 7, 10, 12, 14, 24, 25], "although": [0, 3, 4, 10, 14, 15, 22, 28, 29, 31], "avoid": [0, 4, 14, 21, 25, 28, 29], "put": [0, 3, 19, 22], "thing": [0, 3, 4, 12, 18, 20, 22, 26, 29, 31], "null": 0, "followup": 0, "constant": [0, 2, 3, 12], "interact": [0, 27], "assum": [0, 10, 27, 31], "my": [0, 3], "__init__": [0, 3], "__all__": 0, "teacher": [0, 3, 16, 17, 26], "consist": [0, 4, 32, 33], "instantli": 0, "gain": 0, "wide": [0, 16], "re": [0, 4, 19, 22, 24, 28], "pure": [1, 15, 16], "librari": [1, 8, 15, 16, 17, 20], "zero": 1, "depend": [1, 4, 6, 15, 24, 26], "necessari": [1, 3, 15, 17, 22, 28, 30], "deploy": 1, "certain": [1, 6, 22, 24, 28], "obviou": [1, 28], "browser": 1, "project": [1, 17, 27], "folder": [1, 22], "command": [1, 6, 10, 14, 17, 19, 20, 23, 24, 27], "replac": [1, 11, 19], "pedal_path": 1, "path": [1, 4, 12, 19, 32], "npm": 1, "precompil": 1, "dist": 1, "j": 1, "m": [1, 4, 20], "output": [1, 3, 6, 10, 14, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31], "down": [1, 32], "optim": 1, "while": [1, 3, 6, 11, 12, 22, 29, 30, 31], "those": [1, 3, 6, 10, 14, 28, 29, 31], "faster": 1, "leav": [1, 3], "noth": [1, 7, 10], "valid": [2, 3, 10], "treat": [2, 3, 10, 29], "basic": [2, 17, 22, 25, 28], "crazi": 2, "long": [2, 6, 9, 10, 16, 19, 27, 28], "see": [2, 6, 16, 20, 22, 24, 26, 28, 29], "tool": [2, 3, 6, 7, 8, 9, 11, 14, 16, 17, 22, 23, 25, 26, 32], "whenev": 2, "restrict": [2, 4, 10], "short": [2, 3, 10], "import": [3, 4, 6, 8, 10, 12, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32], "unit": [3, 6, 16, 17, 19, 28], "document": [3, 4, 6, 14, 15, 18, 19, 20, 22, 23, 26, 31], "walk": [3, 19], "autom": 3, "our": [3, 4, 13, 16, 17, 19, 20, 21, 22, 28], "becam": 3, "pile": 3, "statement": [3, 6, 7, 10, 12, 16, 19, 22, 28, 29, 31, 32], "complex": [3, 12, 16, 17, 22, 25, 26], "delic": 3, "reorder": 3, "chain": [3, 12], "larg": [3, 17, 20, 22, 26], "were": [3, 4, 6, 7, 10, 27, 28, 29, 30, 31, 32], "problem": [3, 4, 9, 16, 19, 25, 28, 31, 32], "hoc": 3, "therefor": [3, 27, 28], "much": [3, 7, 19, 21, 25, 29, 32], "harder": 3, "led": 3, "encapsul": [3, 16, 26], "issu": [3, 12, 14, 16, 20, 22, 29, 30, 31, 32], "relat": [3, 4, 6, 8], "sens": 3, "elev": [3, 17], "approach": 3, "process": [3, 12, 16], "declar": [3, 16, 22, 32], "driven": 3, "manner": 3, "sacrif": 3, "power": [3, 17, 25, 27, 32], "flexibl": [3, 6, 28, 31], "Not": [3, 19, 25, 28, 30, 31, 32], "reusabl": 3, "easier": [3, 16, 24, 28], "goe": [3, 19], "littl": [3, 16, 28, 31, 33], "depth": 3, "major": [3, 4, 16, 26], "descend": [3, 4], "huge": 3, "number": [3, 4, 6, 8, 10, 12, 14, 16, 19, 24, 26, 27, 28, 29, 30, 31, 32], "mani": [3, 6, 10, 16, 22, 24, 31], "encourag": [3, 22], "hierarchi": 3, "Then": [3, 22], "write": [3, 10, 12, 14, 16, 19, 22, 25, 26, 28, 29, 31, 32], "report": [3, 6, 8, 9, 10, 12, 14, 16, 17, 22, 25, 27, 29, 30, 32], "fundament": 3, "ff": [3, 26], "compos": [3, 22], "truthi": [3, 28], "bitwis": [3, 31], "exclus": 3, "xor": [3, 6], "caret": 3, "turn": [3, 10, 22, 27], "aggreg": 3, "particularli": [3, 10, 12, 21], "independ": [3, 11], "phase": [3, 16, 19], "deseri": 3, "undefin": 3, "simpli": [3, 6, 10, 28, 31], "constructor": 3, "AND": [3, 6], "don": [3, 4, 15, 19, 26, 29, 31], "even": [3, 7, 25, 28, 29, 31, 32], "save": [3, 23], "core": [3, 6, 7, 8, 9, 10, 11, 12, 17, 23], "addition_error": 3, "two": [3, 6, 8, 14, 19, 22, 25, 28, 31, 32], "everi": [3, 4, 12, 20, 31], "well": [3, 4, 14, 22], "your": [3, 9, 16, 17, 19, 22, 25, 26, 27, 28, 29, 30, 31, 32], "chose": 3, "regardless": [3, 19], "win": [3, 19], "highest": [3, 20, 22], "lowest": [3, 19, 22], "plu": [3, 30], "sign": [3, 19], "ever": [3, 6], "origin": [3, 10, 11, 28], "submiss": [3, 7, 10, 11, 12, 14, 16, 17, 20, 22, 25, 30, 32], "implement": [3, 4], "def": [3, 16, 19, 24, 29, 31], "self": [3, 7, 16, 27], "parameter": 3, "care": [3, 14, 25, 27], "easi": [3, 33], "shortcut": 3, "let": [3, 15, 16, 19, 22, 29], "look": [3, 6, 7, 16, 19, 20, 22, 24, 25, 31, 32], "sophist": [3, 4, 16, 29], "come": [3, 16, 20, 32], "calcul": [3, 4, 12, 19, 28], "choos": [3, 16, 19, 22, 25, 26, 29, 32], "verb": 3, "setdefault": 3, "els": [3, 22, 31, 32], "subtract": [3, 29], "super": [3, 4, 19], "root": [3, 6, 7, 11, 24, 31], "constant_field": 3, "explicitli": [3, 10, 22, 25, 29], "creator": 3, "oblig": [3, 25], "_handle_condit": 3, "ignored_feedback": 3, "get_child_feedback": 3, "post": [3, 28], "processs": 3, "child": [3, 7, 24], "unchang": [3, 27], "occur": [3, 10, 12, 28], "creation": 3, "rais": [3, 7, 10, 20, 29], "least": [3, 12, 19, 28, 31], "minim": 3, "identif": 3, "risk": 3, "equival": [3, 6, 23, 24], "equal": [3, 6, 19, 22, 28, 32], "underli": 3, "appropri": [3, 10, 12, 16, 20, 22, 27, 28], "priorit": [3, 22, 26], "fit": 3, "term": 3, "discourag": 3, "impact": 3, "interpret": 3, "alwai": [3, 12, 14, 22, 25], "dynam": [3, 4], "becom": 3, "interpolat": 3, "unused_vari": [3, 32], "environ": [3, 4, 10, 14, 15, 16, 17, 19, 20, 25, 26, 27, 29], "clickabl": 3, "link": 3, "tooltip": 3, "color": 3, "float": [3, 6, 10, 19, 25, 28, 31], "award": 3, "inclus": [3, 7], "worth": [3, 31], "amount": [3, 14, 19, 22], "partial": [3, 6, 16, 22, 25, 31], "credit": [3, 6, 16, 22, 25, 31], "besid": [3, 25], "50": [3, 19, 28], "serializ": 3, "serial": 3, "locat": [3, 6, 8, 10, 17, 19, 31, 32], "feedbackloc": 3, "where": [3, 4, 10, 19, 25, 29, 32], "attent": 3, "direct": [3, 24], "few": [3, 4, 14, 15, 22, 28, 29, 31], "condition": 3, "instanti": [3, 12], "until": [3, 4, 10, 32], "manual": 3, "immedi": 3, "pool": [3, 4, 9], "count": [3, 4, 6, 10, 28, 30, 31], "toward": [3, 16, 28], "utterli": 3, "skip": [3, 19], "But": [3, 4, 10, 19, 22, 28, 32], "critic": [3, 17, 21], "somewher": [3, 6], "sure": [3, 4, 6, 10, 19, 20, 22, 30, 31, 32], "right": [3, 4, 6, 9, 10, 16, 19, 28, 30, 31, 32], "determin": [3, 6, 7, 8, 14, 19, 28], "consum": [3, 19, 28], "uncondition": 3, "assert_equ": [3, 5, 6, 16, 22, 23, 28], "_get_child_feedback": 3, "unhappi": 3, "particular": [3, 25], "fact": [3, 22, 28], "restor": [3, 30], "name_error": [3, 5, 10], "THAT": 3, "dude": 3, "design": [4, 15, 17], "limit": [4, 9, 22], "unfortun": 4, "sound": [4, 25, 33], "cpython": [4, 28], "page": [4, 13, 17, 18, 21, 26], "talk": [4, 22], "workaround": 4, "sy": [4, 10, 18, 19, 29, 31], "monkei": 4, "patch": [4, 10], "mad": 4, "exc_info": 4, "stuff": [4, 19], "settrac": [4, 29], "gettrac": 4, "trace": [4, 6, 10, 24, 27, 28, 29], "stdout": [4, 10, 29, 31], "rerout": 4, "version_info": 4, "o": [4, 19], "dataclass": [4, 6, 28, 31], "_field": 4, "catch": 4, "functool": 4, "wrap": [4, 26, 28], "clariti": 4, "think": [4, 6, 27, 28], "mod": 4, "compil": [4, 10, 17], "split": [4, 6, 10, 19, 28], "multilin": [4, 7], "sub": [4, 7], "oh": 4, "nodevisitor": 4, "iter_field": 4, "methodtyp": 4, "method": [4, 6, 7, 10, 12, 17, 19, 31], "wonder": 4, "moduletyp": 4, "io": [4, 6], "stringio": 4, "mock": [4, 8, 10, 19, 29], "captur": [4, 7, 16], "unittest": [4, 6, 19], "tracer": [4, 29], "traceback": [4, 10, 16, 22, 27], "tracebackexcept": 4, "extract_tb": 4, "full": [4, 15, 25, 33], "info": [4, 11, 22], "reshap": 4, "timeout": [4, 10], "math": [4, 22, 29, 31], "truncat": 4, "properli": [4, 10], "itertool": 4, "zip_longest": 4, "thread": [4, 10, 29], "_activ": 4, "ctype": 4, "pythonapi": 4, "c_long": 4, "py_object": 4, "insid": [4, 6, 16, 22, 27, 28, 31, 32], "stolen": 4, "bdb": 4, "bdbquit": 4, "hashlib": 4, "md5": 4, "translat": 4, "replic": 4, "seed": [4, 9], "random": [4, 19], "comparison": [4, 6, 7, 8, 28, 31], "punctuat": [4, 6, 28], "hardcod": 4, "somehow": 4, "jupyt": [4, 17, 18], "absolut": 4, "nbformat": 4, "command_lin": 4, "stderr": 4, "argv": [4, 10], "sqlite3": 4, "pickl": 4, "u": [4, 13, 15, 16], "coverag": [4, 6, 10, 19, 28], "fancier": 4, "tabul": 4, "tqdm": 4, "here": [4, 6, 16, 19, 20, 22, 24], "figur": 4, "compat": [4, 16, 17], "popular": 4, "fork": 4, "everyth": [4, 24], "couldn": 4, "suffici": [4, 31], "port": 4, "trunc": 4, "investig": 4, "matter": 4, "slightli": [4, 6], "big": 4, "deal": 4, "breaker": 4, "pretti": [4, 10, 28], "_thread": 4, "suspect": 4, "around": [4, 12, 28, 31], "realli": [4, 14, 20, 28], "unless": [4, 6, 7, 10, 12, 29], "factor": 4, "difficult": 4, "pain": 4, "rewrit": [4, 12], "f": 4, "r": 4, "convers": [4, 26, 27, 28], "mro": 4, "compliant": 4, "incredibli": 4, "concaten": [4, 10], "adjac": 4, "liter": [4, 6, 10, 12, 19, 22, 31], "brace": [4, 26], "express": [4, 7, 10, 11, 12, 19, 22, 24, 30, 32], "unbalanc": 4, "nest": [4, 28], "bracket": 4, "load": [4, 10, 11, 16, 22, 29, 30], "am": [4, 19], "unclear": 4, "getter": 4, "properti": [4, 10], "unexpect": 4, "manag": [4, 10, 28, 29], "__exit__": 4, "builtin": [4, 10, 29], "subscr": 4, "subscript": [4, 12, 31], "step": [4, 14], "get_original_program": [5, 11], "restore_cod": [5, 11, 23, 30], "set_sourc": [5, 11, 23, 30], "set_source_fil": [5, 11], "verifi": [5, 6, 8, 11, 16, 22, 23, 28, 30], "verify_sect": [5, 11], "tifa_analysi": [5, 12, 16, 23, 24, 32], "find_function_cal": [5, 7], "find_function_definit": [5, 7], "find_oper": [5, 7], "find_prior_initi": [5, 7], "function_is_cal": [5, 7], "is_top_level": [5, 7], "caitexcept": [5, 7], "data_st": [5, 7, 24], "data_typ": [5, 7, 24], "def_use_error": [5, 7], "expire_cait_cach": [5, 7], "find_ast": [5, 7, 16], "find_expr_sub_match": [5, 7], "find_match": [5, 6, 7, 16, 19, 22, 24], "find_submatch": [5, 7], "parse_program": [5, 7, 19], "reparse_if_need": [5, 7], "require_tifa": [5, 7], "plot": [5, 8, 10, 29], "turtl": [5, 8, 10], "attribute_error": [5, 10], "import_error": [5, 10], "indentation_error": [5, 10], "index_error": [5, 10], "io_error": [5, 10], "key_error": [5, 10], "memory_error": [5, 10], "runtime_error": [5, 10], "timeout_error": [5, 10], "type_error": [5, 10], "value_error": [5, 10], "zero_division_error": [5, 10], "commandblock": [5, 6, 10, 23, 29], "allow_funct": [5, 6, 10, 23, 29, 31], "allow_modul": [5, 10, 23, 29], "allow_real_io": [5, 10, 23, 29], "block_funct": [5, 10, 23, 29], "block_modul": [5, 10, 23, 29], "block_real_io": [5, 10, 23, 29], "check_coverag": [5, 10, 23, 29], "clear_input": [5, 10, 23, 29], "clear_mock": [5, 10, 23, 29], "clear_output": [5, 10, 23, 29], "clear_sandbox": [5, 10, 23, 29], "clear_student_data": [5, 10, 23, 29], "count_unique_cal": [5, 10, 23, 29], "get_call_argu": [5, 10, 23, 29], "get_except": [5, 10, 23, 29], "get_funct": [5, 10], "get_input": [5, 10, 23, 29], "get_modul": [5, 10, 23, 29], "get_output": [5, 10, 19, 23, 29], "get_python_error": [5, 10, 23, 29], "get_raw_output": [5, 10, 23, 28, 29], "get_sandbox": [5, 10, 23, 29], "get_student_data": [5, 10, 23, 29], "get_trac": [5, 10, 23, 29], "mock_funct": [5, 10, 23, 29], "mock_modul": [5, 10, 23, 29], "queue_input": [5, 10, 23, 29], "reset_output": [5, 10], "set_input": [5, 10, 23, 29], "start_trac": [5, 10, 23, 29], "stop_trac": [5, 10, 23, 29], "ensure_ast": [5, 6, 19, 22, 23, 31], "ensure_dataclass": [5, 6, 23, 31], "ensure_documented_funct": [5, 6, 19, 22, 23, 31], "ensure_funct": [5, 6, 16, 19, 22, 23, 31], "ensure_function_cal": [5, 6, 19, 22, 23, 28, 31], "ensure_functions_return": [5, 6, 19, 23, 31], "ensure_import": [5, 6, 19, 22, 23, 31], "ensure_liter": [5, 6, 19, 22, 23, 31], "ensure_literal_typ": [5, 6, 22, 23, 31], "ensure_oper": [5, 6, 19, 22, 23, 31], "ensure_prints_exactli": [5, 6, 23, 31], "ensure_starting_cod": [5, 6, 23, 31], "files_not_handled_correctli": [5, 6, 23, 31], "function_print": [5, 6, 23, 31], "has_import": [5, 6], "only_printing_vari": [5, 6, 23, 31], "open_without_argu": [5, 6, 31], "prevent_advanced_iter": [5, 6, 23, 31], "prevent_ast": [5, 6, 19, 22, 23, 31], "prevent_embedded_answ": [5, 6, 23, 31], "prevent_function_cal": [5, 6, 19, 22, 23, 31], "prevent_import": [5, 6, 19, 22, 23, 31], "prevent_liter": [5, 6, 19, 22, 23, 31], "prevent_literal_typ": [5, 6, 22, 23, 31], "prevent_oper": [5, 6, 22, 23, 31], "prevent_printing_funct": [5, 6, 19, 23, 31], "assertalmostequ": [5, 6, 28], "assertequ": [5, 6, 16, 19, 28], "assertfals": [5, 6, 28], "assertgreat": [5, 6, 19, 28], "assertgreaterequ": [5, 6, 19, 28], "asserthasattr": [5, 6, 28], "asserthasfunct": [5, 6, 19, 28], "asserthasvari": [5, 6, 28], "assertin": [5, 6, 19, 28], "asserti": [5, 6, 28], "assertisinst": [5, 6, 19, 28], "assertisnon": [5, 6, 28], "assertisnot": [5, 6, 28], "assertisnotinst": [5, 6, 28], "assertisnotnon": [5, 6, 28], "assertlengthequ": [5, 6, 28], "assertlengthgreat": [5, 6, 28], "assertlengthgreaterequ": [5, 6, 28], "assertlengthless": [5, 6, 28], "assertlengthlessequ": [5, 6, 28], "assertlengthnotequ": [5, 6, 28], "assertless": [5, 6, 28], "assertlessequ": [5, 6, 28], "assertnotalmostequ": [5, 6, 28], "assertnotequ": [5, 6, 28], "assertnotin": [5, 6, 28], "assertnotoutput": [5, 6, 28], "assertnotoutputcontain": [5, 6, 28], "assertnotregex": [5, 6, 28], "assertnottyp": [5, 6, 28], "assertoutput": [5, 6, 28], "assertoutputcontain": [5, 6, 28], "assertprint": [5, 6, 28], "assertregex": [5, 6, 28], "asserttru": [5, 6, 28], "asserttyp": [5, 6, 28], "assert_almost_equ": [5, 6], "assert_contains_subset": [5, 6, 23, 28], "assert_fals": [5, 6, 23, 28], "assert_great": [5, 6, 23, 28], "assert_greater_equ": [5, 6, 23, 28], "assert_has_attr": [5, 6, 23, 28], "assert_has_funct": [5, 6, 23, 28], "assert_has_vari": [5, 6, 23, 28], "assert_in": [5, 6, 23, 28], "assert_i": [5, 6, 23, 28], "assert_is_dataclass": [5, 6, 23, 28], "assert_is_inst": [5, 6, 23, 28], "assert_is_non": [5, 6, 23, 28], "assert_is_not": [5, 6, 23, 28], "assert_is_not_dataclass": [5, 6, 23, 28], "assert_is_not_non": [5, 6, 23, 28], "assert_length_equ": [5, 6, 23, 28], "assert_length_great": [5, 6, 23, 28], "assert_length_greater_equ": [5, 6, 23, 28], "assert_length_less": [5, 6, 23, 28], "assert_length_less_equ": [5, 6, 23, 28], "assert_length_not_equ": [5, 6, 23, 28], "assert_less": [5, 6, 23, 28], "assert_less_equ": [5, 6, 23, 28], "assert_not_almost_equ": [5, 6], "assert_not_contains_subset": [5, 6, 23, 28], "assert_not_equ": [5, 6, 23, 28], "assert_not_in": [5, 6, 23, 28], "assert_not_is_inst": [5, 6, 28], "assert_not_output": [5, 6, 23, 28], "assert_not_output_contain": [5, 6, 23, 28], "assert_not_regex": [5, 6, 23, 28], "assert_not_typ": [5, 6, 23, 28], "assert_output": [5, 6, 19, 22, 23, 28], "assert_output_contain": [5, 6, 23, 28], "assert_print": [5, 6, 28], "assert_regex": [5, 6, 23, 28], "assert_tru": [5, 6, 23, 28], "assert_typ": [5, 6, 23, 28], "ensure_called_uniqu": [5, 6, 23, 28], "ensure_coverag": [5, 6, 19, 23, 28], "check_dataclass_error": [5, 6], "wheat_chaff_game_class": [5, 6], "set_se": [5, 9], "badgraphfeedback": [5, 8], "assert_plot": [5, 8], "compare_data": [5, 8], "ensure_correct_plot": [5, 8], "ensure_show": [5, 8], "get_plot": [5, 8], "no_plt": [5, 8], "other_plt": [5, 8], "plt_rename_err": [5, 8], "plt_wrong_import": [5, 8], "prevent_incorrect_plt": [5, 8], "wrong_plt_data": [5, 8], "wrong_plt_typ": [5, 8], "classic": 6, "feedback": [6, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 23, 25, 27, 28, 29, 31, 32], "at_least": [6, 19, 22, 28, 31], "anywher": [6, 19, 20], "green": 6, "tree": [6, 7], "snake": 6, "http": [6, 15], "greentreesnak": [6, 31], "readthedoc": 6, "en": 6, "latest": [6, 10, 11, 20, 30], "minimum": [6, 22], "find_al": 6, "occurr": [6, 7, 25], "ensur": [6, 22, 29], "definit": [6, 7, 19, 23, 31, 32], "program": [6, 7, 10, 12, 16, 17, 27, 29, 32], "travers": [6, 7, 12], "ariti": [6, 16, 19, 22, 31, 32], "signatur": [6, 19], "OR": 6, "record": [6, 10, 12, 19, 29], "at_most": [6, 19, 22, 31], "maximum": [6, 20], "print": [6, 7, 10, 19, 22, 24, 25, 27, 28, 29, 31], "literal_typ": [6, 31], "op_nam": [6, 7, 32], "binari": [6, 7, 31], "unari": [6, 7, 31], "deprec": [6, 7], "open": [6, 10, 14, 19, 25, 30, 31], "close": [6, 19, 25, 28, 31], "simplist": 6, "vastli": [6, 22], "improv": [6, 15, 22, 25], "function_nam": [6, 8, 10, 28, 29, 31], "practic": [6, 17, 19, 31, 33], "cait_nod": [6, 7], "oppos": [6, 10, 24, 28], "allow_whil": [6, 31], "allow_for": [6, 31], "iter": [6, 9, 16, 19, 28, 31, 32], "block": [6, 10, 19, 20, 27, 29, 31, 32], "assert_has_class": 6, "assertgraphtyp": 6, "assertgraphvalu": 6, "assert_coverag": 6, "assert_ran": 6, "left": [6, 9, 11, 28], "exact_str": [6, 28], "delta": [6, 28], "001": [6, 28], "needl": [6, 28], "haystack": [6, 28], "each": [6, 9, 10, 14, 22, 24, 27, 28, 29], "charact": [6, 27, 28, 30], "trail": [6, 28, 29], "decim": [6, 28], "chop": [6, 28], "flatten": [6, 28], "compar": [6, 10, 19, 28], "greater": [6, 28], "obj": [6, 28], "attr": [6, 28], "regex": [6, 28], "format_assert": 6, "textual": [6, 22], "explan": [6, 26, 28], "target": [6, 10, 12, 19, 29, 32], "expected_verb": 6, "side": [6, 14, 22, 28, 32], "inverse_oper": 6, "interpolatedvalu": 6, "sandboxcontext": [6, 10], "variable_nam": [6, 28], "ident": [6, 28], "cl": [6, 28], "sequenc": [6, 28, 32], "length": [6, 28, 30], "invers": 6, "expected_typ": [6, 28], "newlin": [6, 10, 28, 29], "raw_output": [6, 10], "individu": [6, 22, 25, 28], "empti": [6, 12, 19, 28, 32], "fairli": [6, 28], "found": [6, 7, 8, 11, 19, 22, 28, 30, 31, 32], "unlik": [6, 26, 28], "rememb": [6, 19], "across": [6, 9], "why_ignor": [6, 28], "recent": [6, 7, 10, 16, 28], "repeatedli": [6, 28], "seen": 6, "overlap": 6, "unique_call_count": 6, "ratio": [6, 10, 28], "cover": [6, 19, 28], "half": [6, 28], "unifi": 6, "partial_credit": [6, 28], "assert_funct": [6, 28], "helper": [6, 7, 19], "quickli": [6, 15], "exact": [6, 31], "divid": [6, 11, 22, 28], "input": [6, 10, 19, 25, 27, 28, 29], "per": 6, "percentag": [6, 28, 29], "whole": [6, 19], "wheat": 6, "chaff": 6, "failur": [6, 19], "packag": [7, 24], "pattern": [7, 11, 17, 24, 28, 30], "structur": [7, 8], "subtre": [7, 22, 23], "revert": 7, "incorpor": [7, 25, 26], "prior": [7, 24], "ast_nod": [7, 24], "top": [7, 10, 12, 19, 27, 28, 31, 32], "cach": 7, "astnod": 7, "node_nam": 7, "student_cod": [7, 22], "functiondef": 7, "criteria": 7, "is_mod": 7, "meta": [7, 14, 25, 29], "knowledg": 7, "hack": [7, 28], "cut": 7, "use_previ": 7, "caitexpress": 7, "trim": 7, "branch": [7, 31, 32], "astmap": 7, "continu": 7, "ast_map": 7, "incomplet": 7, "enhanc": [7, 10, 11, 22], "confirm": [7, 8, 19, 31], "successfulli": [7, 8, 11], "matplotlib": [8, 10], "plt_type": 8, "special_comparison": 8, "hist": 8, "scatter": 8, "histogram": 8, "plt": 8, "pyplot": [8, 10], "seed_valu": 9, "determinist": 9, "index": [9, 17, 19, 30, 32], "correspond": [9, 10, 14, 26, 31], "throw": 9, "isn": [9, 11], "enough": [9, 28, 30, 31], "hash": 9, "modulo": 9, "rang": [9, 16], "256": 9, "destroi": 10, "mutabl": [10, 12], "rstrip": [10, 19, 29], "allowed_tim": 10, "stop": [10, 12, 29], "tracer_styl": [10, 29], "_context": 10, "histori": [10, 11], "_next_context_id": 10, "id": [10, 12, 22], "_current_patch": 10, "stack": [10, 12], "maximum_temporary_length": 10, "temporari": 10, "module_nam": [10, 29, 31], "append_output": 10, "append": [10, 19, 32], "To": [10, 24, 28], "comput": [10, 31], "friendly_nam": [10, 29], "unload": 10, "readabl": 10, "_": [10, 29], "function_kwarg": 10, "args_loc": 10, "kwargs_loc": 10, "local": 10, "arbitrari": [10, 16, 29], "modif": 10, "conflict": 10, "proxi": [10, 22, 29], "sandboxresult": 10, "perfectli": [10, 22, 29], "clear_context": 10, "previou": [10, 11, 12, 14, 24, 32], "clear_except": 10, "queu": [10, 29], "clear_mocked_funct": 10, "reset_default_mock": 10, "__import__": 10, "clear_trac": 10, "clean": 10, "get_context": 10, "context_id": 10, "sandbox_mixin": 10, "by_nam": 10, "get_names_by_typ": 10, "exclude_builtin": 10, "get_values_by_typ": 10, "get_variables_by_typ": 10, "make_safe_vari": 10, "tri": [10, 11, 15, 16, 19, 20, 30], "safe": [10, 22], "accomplish": 10, "concern": 10, "new_vers": [10, 29], "reset_default_overrid": 10, "eval": [10, 31], "exec": [10, 29, 31], "after": [10, 19, 22, 27, 30, 32], "real_io": 10, "executioncontext": 10, "queue": [10, 29], "set_student_data": 10, "new_data": 10, "overwrit": 10, "copi": 10, "start_grouping_context": 10, "subsequ": [10, 22, 29, 30], "stop_grouping_context": 10, "var": [10, 24], "feedbackregistri": 10, "dispatch": 10, "attributeerror": 10, "importerror": 10, "indentationerror": 10, "indexerror": 10, "ioerror": [10, 30], "keyerror": 10, "memoryerror": 10, "exception_nam": 10, "exception_messag": [10, 30], "expandedtraceback": 10, "traceback_messag": [10, 30], "nice": [10, 28], "element": [10, 12, 31], "longer": [10, 30], "timeouterror": 10, "valueerror": [10, 29], "zerodivisionerror": 10, "act": 10, "themselv": 10, "rewind": 10, "real": [10, 19, 29], "draw": 10, "unexecut": 10, "unexect": 10, "outer": 10, "inner": 10, "began": 10, "mockmodul": 10, "fulli": [10, 12], "nativ": [10, 11, 29], "subsitut": 11, "temporarili": [11, 25], "accumul": [11, 22], "filesystem": 11, "directori": 11, "source_file_not_found": [11, 30], "ones": [11, 26, 30], "inferenc": 12, "flow": 12, "simplif": 12, "languag": [12, 16, 17], "homogen": 12, "introspect": 12, "reflect": [12, 14], "characterist": [12, 28], "dunder": 12, "closur": 12, "mayb": [12, 32], "scope": [12, 28, 31, 32], "addition": 12, "written": [12, 14, 16], "concept": [12, 14, 17, 26], "problemat": 12, "situat": [12, 22, 25, 28], "submit": [12, 16, 20], "termin": 12, "innermost": 12, "qualifi": 12, "4": [12, 19, 22, 27, 28, 30], "my_variable_nam": 12, "sequenti": 12, "IFs": 12, "FORs": 12, "overwritten": [12, 32], "wrapper": [12, 22, 28, 31], "symbol": [12, 27], "x": [12, 19, 20, 27, 28, 31], "manipul": [12, 26], "assign_target": 12, "target_typ": 12, "store_with_read": 12, "op": 12, "augassign": 12, "process_ast": 12, "ast_tre": 12, "analys": 12, "process_cod": 12, "visit": [12, 32], "visit_": 12, "visit_annassign": 12, "annassign": 12, "visit_assign": 12, "__targets__": 12, "__value__": 12, "visit_attribut": 12, "visit_augassign": 12, "visit_binop": 12, "visit_bool": 12, "visit_boolop": 12, "visit_classdef": 12, "visit_compar": 12, "visit_const": 12, "3": [12, 15, 16, 19, 22, 27, 28, 30, 31], "8": [12, 19], "visit_dict": 12, "uniform": 12, "visit_dictcomp": 12, "visit_expr": 12, "expr": [12, 19], "visit_for": 12, "visit_functiondef": 12, "visit_generatorexp": 12, "visit_if": 12, "visit_ifexp": 12, "visit_import": 12, "visit_importfrom": 12, "visit_lambda": 12, "visit_list": 12, "visit_listcomp": 12, "visit_nam": 12, "visit_nameconst": 12, "visit_num": 12, "visit_return": 12, "visit_setcomp": 12, "visit_slic": 12, "slice": 12, "visit_str": 12, "visit_subscript": 12, "visit_unaryop": 12, "visit_whil": 12, "visit_with": 12, "visit_comprehens": 12, "visit_stat": 12, "tifaanalysi": 12, "bundl": [12, 22], "learn": 12, "tifa_cor": 12, "develop": [13, 17, 20, 23, 26], "maintain": 13, "austin": 13, "univers": [13, 26], "delawar": 13, "luke": 13, "gusukuma": 13, "virginia": 13, "tech": 13, "lukesg08": 13, "vt": 13, "denni": 13, "kafura": 13, "discuss": 13, "join": [13, 19], "github": [13, 17, 20], "api": [14, 17, 23], "speak": 14, "warrant": [14, 16], "best": [14, 17, 28], "infer": [14, 26], "mental": 14, "concret": 14, "suitabl": [14, 19], "web": [14, 17, 27], "intention": 14, "involv": [14, 29], "sever": [14, 16, 22], "codebas": 14, "necessarili": 14, "coordin": 14, "eventu": 14, "condens": 14, "coher": 14, "bit": [14, 28], "host": 14, "simpler": [14, 28], "interfac": [14, 20, 25], "adjust": [14, 29], "implicit": [14, 31], "Such": 14, "atomicfeedbackfunct": 14, "scenario": [14, 16, 19], "integr": [15, 17, 22], "pip": [15, 20], "download": 15, "repositori": 15, "com": [15, 20], "outsid": [15, 32], "intend": 15, "7": [15, 16, 19, 22, 28, 29], "abov": [15, 16, 22, 24], "6": [15, 16, 19, 20, 22, 28], "good": [16, 19, 22], "hard": 16, "imagin": 16, "spit": 16, "12323": 16, "_special_custom_help": 16, "assertionerror": 16, "disori": 16, "deeper": 16, "insight": 16, "accur": [16, 19], "unhelp": 16, "detail": [16, 22, 28], "measur": 16, "progress": 16, "add_pric": 16, "book": 16, "lot": [16, 21, 28, 29], "below": 16, "minimalist": 16, "typecheck": 16, "live": 16, "10": [16, 19, 22, 27, 28], "_expr_": 16, "_list_": [16, 24], "n": [16, 19, 24, 31], "___": [16, 19, 22, 24, 32], "____": [16, 19], "shouldn": [16, 29, 32], "list_inside_loop": 16, "grasp": 16, "undeclar": 16, "among": [16, 22], "diagram": 16, "begin": 16, "solut": [16, 25, 30, 31], "At": 16, "conclus": [16, 19], "sent": 16, "framework": [17, 22], "model": 17, "softwar": 17, "engin": [17, 32], "rather": [17, 20, 27, 29], "afterthought": 17, "introduct": [17, 19], "architectur": 17, "instal": [17, 20], "pypi": 17, "quick": [17, 24], "guid": [17, 24, 25], "usag": [17, 21, 24, 25], "arithmet": 17, "vpl": 17, "cat": 17, "notebook": [17, 18], "novic": 17, "lifetim": 17, "disabl": [17, 28], "parti": 17, "compatibl": 17, "skulpt": 17, "pyodid": 17, "glossari": 17, "contact": 17, "summar": [18, 21], "quit": [18, 19, 21], "readi": [18, 21], "sorri": [18, 21], "troubl": 18, "crash": 18, "infinit": 18, "setrecursionlimit": 18, "1000": 18, "Or": [19, 20, 22, 26, 27], "grab": 19, "emb": [19, 31], "grade_assign": [19, 21, 22], "integ": [19, 22, 28, 29, 31], "round": 19, "dollar": 19, "trivial": 19, "nearest": 19, "bui": 19, "food": 19, "roughli": 19, "cost": 19, "9": [19, 28], "used_dollar_sign": 19, "num": [19, 31], "embed": [19, 31], "add_3": 19, "b": [19, 26], "c": [19, 26], "teach": 19, "annot": [19, 31], "sophis": 19, "mangl": 19, "madlib": 19, "words_fil": 19, "txt": [19, 25, 31], "story_fil": 19, "stori": 19, "w": 19, "strip": [19, 30], "l": [19, 22], "correct_stori": 19, "readlin": 19, "had": [19, 31, 32], "date": 19, "2020": 19, "12": 19, "38pm": 19, "__version__": 19, "curriculum_snek": 19, "ensure_cisc108_test": 19, "imported_r": 19, "datetim": 19, "imported_datetim": 19, "arrow": 19, "fanci": 19, "imported_arrow": 19, "panda": 19, "wow": 19, "okai": 19, "imported_panda": 19, "cisc108": 19, "great": [19, 25], "appreci": 19, "used_tri": 19, "good_coverage_so_far": 19, "parse_date_month": 19, "pleas": [19, 20, 30], "1998": 19, "11": 19, "30": 19, "2010": 19, "15": 19, "01": 19, "05": 19, "31": 19, "9999": 19, "32": 19, "2013": 19, "13": [19, 22], "newark": 19, "de": 19, "0000": 19, "done_parse_date_month": 19, "parse_date_dai": 19, "done_parse_date_dai": 19, "parse_date_year": 19, "2021": 19, "2015": 19, "2005": 19, "013": 19, "done_parse_date_year": 19, "is_dat": 19, "201": 19, "done_is_d": 19, "29": [19, 22], "20": 19, "2019": 19, "3000": 19, "done_earli": 19, "ve": [19, 22], "adventur": 19, "beta": 19, "29am": 19, "postcondit": 19, "precondit": 19, "resolve_al": 19, "set_assertion_mod": 19, "function_signatur": 19, "disabled_builtin": 19, "mockped": 19, "blockedmodul": 19, "setup_ped": 19, "skip_tifa": 19, "saniti": 19, "assertgener": 19, "tripl": [19, 22], "quot": 19, "render_introduct": 19, "create_world": 19, "world": [19, 22, 25, 28, 29], "get_opt": 19, "render_end": 19, "win_path": 19, "lose_path": 19, "plai": 19, "lose": 19, "function_valu": 19, "grade_record": 19, "bodi": [19, 22, 24, 32], "ast_nam": [19, 31], "lower": [19, 22, 25], "startswith": 19, "grade_render_introduct": 19, "match_signatur": 19, "create_world_compon": 19, "grade_create_world": 19, "initial_world": 19, "grade_create_world_statu": 19, "grade_create_world_map": 19, "neighbor": 19, "grade_create_world_play": 19, "player": 19, "inventori": 19, "create_world_don": 19, "grade_create_world_finish": 19, "grade_rend": 19, "keep_context": 19, "grade_get_opt": 19, "grade_choos": 19, "fight": 19, "sleep": 19, "grade_upd": 19, "grade_render_end": 19, "test_path": 19, "path_nam": 19, "win_and_lose_path": 19, "grade_win_and_lose_path": 19, "assertha": 19, "lost": 19, "game": 19, "finish_grad": 19, "all_docu": 19, "vision": 20, "usabl": 20, "achiev": 20, "reconfigur": 20, "ic": [20, 27], "upload": 20, "sh": 20, "python3": 20, "git": 20, "curriculum": 20, "snek": 20, "ctvt": 20, "run_autograd": 20, "usr": 20, "bin": 20, "env": 20, "bash": 20, "set_maximum_scor": 20, "100": [20, 22, 28], "preload": 20, "preconfigur": 20, "vpl_evalu": 20, "vpl_environ": 20, "echo": 20, "vpl_execut": 20, "vpl_subfile0": 20, "chmod": 20, "enabl": 20, "header": [20, 26, 31], "preformat": 20, "effort": 20, "prepar": 20, "peopl": 20, "server": 20, "magic": 20, "bottom": 20, "wrote": 20, "cell": 20, "wrong_output": [21, 25], "As": [22, 26, 27], "onc": [22, 28, 31, 32], "got": [22, 31], "fine": 22, "student_submiss": 22, "regrad": 22, "ada": [22, 25], "babbag": 22, "rees": 22, "trexler": 22, "63": 22, "prefer": 22, "hello": [22, 25, 28, 29, 31], "print_resolv": 22, "tediou": 22, "hundr": 22, "boilerpl": 22, "sai": [22, 28], "ran": [22, 28], "review": 22, "unus": [22, 25, 32], "throughout": 22, "complement": 22, "supplant": 22, "solv": 22, "incorrect_answ": 22, "assigned_literal_value_to_answ": 22, "wildcard": 22, "wild": 22, "card": 22, "assigned_to_answ": 22, "place": [22, 29], "holder": 22, "denot": 22, "_accumulator_": 22, "reserv": 22, "shadowed_builtin": 22, "doubl": [22, 31], "__initial__": 22, "initialized_accumul": 22, "47": 22, "add_numb": 22, "35": 22, "multipli": 22, "secretli": 22, "pretend": 22, "payoff": 22, "comfort": [22, 28], "assert_": [22, 28], "machineri": 22, "print_valu": 22, "n2": [22, 25], "n3": 22, "aspect": 22, "seri": 22, "tabl": [22, 27], "quantiti": 22, "27": 22, "statist": 22, "rich": 22, "somewhat": [22, 28], "yourself": [22, 24, 25], "forbid": 22, "incompat": [22, 32], "behav": 22, "anecdot": 22, "benefit": 23, "exhaust": 23, "textformatt": [23, 27], "htmlformatt": [23, 27], "check_dataclass_inst": [23, 28], "assert_is_not_inst": [23, 28], "cait_api": 24, "breviti": 24, "mirror": 24, "booltyp": 24, "dicttyp": 24, "functiontyp": 24, "literalbool": 24, "literalnon": 24, "literalnum": 24, "literalstr": 24, "nonetyp": 24, "numtyp": 24, "strtype": 24, "tupletyp": 24, "unknowntyp": 24, "_var_": 24, "student_var": 24, "_function_": 24, "student_func_cal": 24, "_my_func_": 24, "student_func_def": 24, "haven": [24, 25], "sibl": 24, "indent": [24, 27], "_item_": 24, "__exp__": 24, "submatch": 24, "tutori": 24, "type_definit": 24, "_sum_": 24, "get_data_typ": 24, "took": 24, "get_data_st": 24, "was_typ": 24, "explor": 24, "14": 24, "print_typ": 24, "len": [24, 28, 31], "strongli": 25, "do_not_use_for_loop": 25, "need_multipl": 25, "revis": 25, "incorporate_vari": 25, "signal": 25, "exam": 25, "stanc": 25, "refin": 25, "accordingli": 25, "typeerror": 25, "viewabl": 25, "went": [25, 29], "essenti": 25, "Be": 25, "n31": 25, "n44": 25, "demand": 25, "not_print": 25, "strive": 26, "extend": 26, "consult": 26, "curli": 26, "student_answ": [26, 27], "python_valu": [26, 27], "subtask": 26, "chosen": 26, "lesser": 26, "categor": 26, "explicit": [26, 30], "futur": 26, "python_cod": 27, "highlight": 27, "python_express": [27, 31], "span": 27, "enter": 27, "suppos": [27, 31], "fo": 27, "hyperlink": 27, "frame": 27, "unmodifi": 27, "check_mark": 27, "white": 27, "negative_mark": 27, "cross": 27, "incorrect": [27, 30, 32], "four": 27, "row": 27, "y": [27, 28, 31], "z": 27, "2d": 27, "1d": 27, "capabl": 27, "bunch": 28, "concis": 28, "tabular": 28, "confus": 28, "messi": 28, "terminologi": 28, "said": 28, "my_point": 28, "five": 28, "imprecis": 28, "precis": 28, "0001": 28, "0000001": 28, "conjunct": 28, "complic": 28, "And": 28, "context_messag": 28, "assertion_messag": 28, "asymmetri": 28, "proper": [28, 31], "guess_numb": 28, "provide_opt": 28, "actaul": 28, "__dataclass_fields__": 28, "is_dataclass": 28, "falsei": 28, "segfault": 28, "isinst": [28, 29], "flexibli": 28, "reason": 28, "hasattr": 28, "blank": [28, 30], "checker": [28, 33], "account": 28, "comment": [28, 31], "90": 28, "adequ": 28, "at_least_messag": 28, "coverage_messag": 28, "bypass": 28, "cheat": 28, "total_cal": 28, "unique_cal": 28, "instructor_ignore_messag": 28, "intuit": 28, "function_not_avail": 28, "name_messag": [28, 31, 32], "mistakenli": [28, 31], "name_is_not_a_funct": 28, "despit": 28, "pep8": 28, "snake_cas": 28, "camelcas": 28, "folk": 28, "alias": 28, "primari": 29, "rerun": 29, "circumst": 29, "favor": 29, "understand": 29, "extrem": 29, "imit": 29, "sneakili": 29, "disk": 29, "generate_numb": 29, "prompt": 29, "yield": 29, "whitespac": [29, 31], "broke": 29, "alpha": 29, "my_sum": 29, "mockedmockmodul": 29, "collaps": 29, "legaci": 30, "light": 30, "undo": 30, "separate_into_sect": 30, "next_sect": 30, "check_section_exist": 30, "prologu": 30, "not_enough_sect": 30, "stop_sect": 30, "blank_sourc": 30, "exceed": 30, "syntax_error": 30, "bad": 30, "traceback_preambl": 30, "suggestion_messag": 30, "incorrect_number_of_sect": 30, "reachabl": 31, "hello_world": 31, "twice": 31, "capac": 31, "invert": 31, "literal_messag": 31, "literal_type_messag": 31, "plural": 31, "names_messag": 31, "clean_data": 31, "move_forward": 31, "sprite": 31, "missing_funct": 31, "duplic": 31, "duplicate_function_definit": 31, "lines_messag": 31, "too_few_paramet": 31, "fewer": 31, "too_many_paramet": 31, "missing_parameter_typ": 31, "parameter_messag": 31, "invalid_parameter_typ": 31, "wrong_parameter_typ": 31, "actual_messag": 31, "expected_messag": 31, "wrong_return_typ": 31, "missing_return_typ": 31, "person": 31, "ag": 31, "missing_dataclass": 31, "duplicate_dataclass_definit": 31, "too_few_field": 31, "too_many_field": 31, "invalid_field_typ": 31, "field_messag": 31, "unknown_field": 31, "missing_field_typ": 31, "wrong_fields_typ": 31, "name_is_not_a_dataclass": 31, "dataclass_not_avail": 31, "missing_dataclass_annot": 31, "dc_annot": 31, "mess": 31, "introduc": 31, "beat": 31, "mundan": 31, "defeat": 31, "save_to_fil": 31, "narrow": 31, "easili": 31, "filter": 31, "reduc": 31, "max": 31, "min": 31, "getattr": 31, "setattr": 31, "surprisingli": 31, "comprehens": 31, "unsurprisingli": 31, "number_of_filenam": 31, "proivd": 31, "incorrectli": 31, "cutom": 31, "action": 32, "action_after_return": 32, "return_outside_funct": 32, "multiple_return_typ": 32, "unequ": 32, "write_out_of_scop": 32, "unconnect": 32, "unconnected_block": 32, "connect": 32, "unfil": 32, "hole": 32, "iteration_problem": 32, "singular": 32, "a_dog": 32, "dog": 32, "initialization_problem": 32, "possible_initialization_problem": 32, "possibli": 32, "overwritten_vari": 32, "gave": 32, "iterating_over_non_list": 32, "whose": 32, "wasnot": 32, "iterating_over_empty_list": 32, "incompatible_typ": 32, "operand": 32, "left_nam": 32, "right_nam": 32, "mismatch": 32, "parameter_type_mismatch": 32, "parameter_name_messag": 32, "parameter_type_nam": 32, "argument_type_nam": 32, "read_out_of_scop": 32, "type_chang": 32, "unnecessari": 32, "unnecessary_second_branch": 32, "else_on_loop_bodi": 32, "recursive_cal": 32, "not_a_funct": 32, "singular_nam": 32, "incorrect_ar": 32, "function_typ": 32, "function_name_messag": 32, "expected_count": 32, "actual_count": 32, "module_not_found": 32, "append_to_non_list": 32, "unusu": 33, "neither": 33, "nor": 33}, "objects": {"": [[29, 0, 1, "", "CommandBlock"], [27, 0, 1, "", "Formatter"], [27, 0, 1, "", "HtmlFormatter"], [29, 0, 1, "", "Sandbox"], [27, 0, 1, "", "TextFormatter"], [26, 2, 1, "", "activate"], [29, 3, 1, "", "allow_function"], [29, 3, 1, "", "allow_module"], [29, 3, 1, "", "allow_real_io"], [28, 3, 1, "", "assert_contains_subset"], [28, 3, 1, "", "assert_equal"], [28, 3, 1, "", "assert_false"], [28, 3, 1, "", "assert_greater"], [28, 3, 1, "", "assert_greater_equal"], [28, 3, 1, "", "assert_has_attr"], [28, 3, 1, "", "assert_has_function"], [28, 3, 1, "", "assert_has_variable"], [28, 3, 1, "", "assert_in"], [28, 3, 1, "", "assert_is"], [28, 3, 1, "", "assert_is_dataclass"], [28, 3, 1, "", "assert_is_instance"], [28, 3, 1, "", "assert_is_none"], [28, 3, 1, "", "assert_is_not"], [28, 3, 1, "", "assert_is_not_dataclass"], [28, 3, 1, "", "assert_is_not_instance"], [28, 3, 1, "", "assert_is_not_none"], [28, 3, 1, "", "assert_length_equal"], [28, 3, 1, "", "assert_length_greater"], [28, 3, 1, "", "assert_length_greater_equal"], [28, 3, 1, "", "assert_length_less"], [28, 3, 1, "", "assert_length_less_equal"], [28, 3, 1, "", "assert_length_not_equal"], [28, 3, 1, "", "assert_less"], [28, 3, 1, "", "assert_less_equal"], [28, 3, 1, "", "assert_not_contains_subset"], [28, 3, 1, "", "assert_not_equal"], [28, 3, 1, "", "assert_not_in"], [28, 3, 1, "", "assert_not_output"], [28, 3, 1, "", "assert_not_output_contains"], [28, 3, 1, "", "assert_not_regex"], [28, 3, 1, "", "assert_not_type"], [28, 3, 1, "", "assert_output"], [28, 3, 1, "", "assert_output_contains"], [28, 3, 1, "", "assert_regex"], [28, 3, 1, "", "assert_true"], [28, 3, 1, "", "assert_type"], [29, 3, 1, "", "block_function"], [29, 3, 1, "", "block_module"], [29, 3, 1, "", "block_real_io"], [29, 3, 1, "", "call"], [26, 2, 1, "", "category"], [29, 3, 1, "", "check_coverage"], [28, 3, 1, "", "check_dataclass_instance"], [30, 3, 1, "", "check_section_exists"], [29, 3, 1, "", "clear_input"], [29, 3, 1, "", "clear_mocks"], [29, 3, 1, "", "clear_output"], [25, 3, 1, "", "clear_report"], [29, 3, 1, "", "clear_sandbox"], [29, 3, 1, "", "clear_student_data"], [25, 3, 1, "", "compliment"], [25, 3, 1, "", "contextualize_report"], [26, 2, 1, "", "correct"], [29, 3, 1, "", "count_unique_calls"], [25, 3, 1, "", "debug"], [26, 2, 1, "", "else_message"], [26, 2, 1, "", "else_message_template"], [31, 3, 1, "", "ensure_ast"], [28, 3, 1, "", "ensure_called_uniquely"], [28, 3, 1, "", "ensure_coverage"], [31, 3, 1, "", "ensure_dataclass"], [31, 3, 1, "", "ensure_documented_functions"], [31, 3, 1, "", "ensure_function"], [31, 3, 1, "", "ensure_function_call"], [28, 3, 1, "", "ensure_function_callable"], [31, 3, 1, "", "ensure_functions_return"], [31, 3, 1, "", "ensure_import"], [31, 3, 1, "", "ensure_literal"], [31, 3, 1, "", "ensure_literal_type"], [31, 3, 1, "", "ensure_operation"], [31, 3, 1, "", "ensure_operator"], [31, 3, 1, "", "ensure_prints_exactly"], [31, 3, 1, "", "ensure_starting_code"], [29, 3, 1, "", "evaluate"], [25, 3, 1, "", "explain"], [26, 2, 1, "", "field_names"], [26, 2, 1, "", "fields"], [31, 3, 1, "", "files_not_handled_correctly"], [31, 3, 1, "", "function_prints"], [25, 3, 1, "", "gently"], [25, 3, 1, "", "get_all_feedback"], [29, 3, 1, "", "get_call_arguments"], [29, 3, 1, "", "get_exception"], [29, 3, 1, "", "get_input"], [29, 3, 1, "", "get_module"], [29, 3, 1, "", "get_output"], [30, 3, 1, "", "get_program"], [29, 3, 1, "", "get_python_errors"], [29, 3, 1, "", "get_raw_output"], [29, 3, 1, "", "get_sandbox"], [29, 3, 1, "", "get_student_data"], [29, 3, 1, "", "get_trace"], [25, 3, 1, "", "give_partial"], [25, 3, 1, "", "guidance"], [25, 3, 1, "", "hide_correctness"], [26, 2, 1, "", "justification"], [26, 2, 1, "", "kind"], [26, 2, 1, "", "label"], [25, 3, 1, "", "log"], [26, 2, 1, "", "message"], [26, 2, 1, "", "message_template"], [29, 3, 1, "", "mock_function"], [29, 3, 1, "", "mock_module"], [26, 2, 1, "", "muted"], [30, 3, 1, "", "next_section"], [31, 3, 1, "", "only_printing_variables"], [31, 3, 1, "", "prevent_advanced_iteration"], [31, 3, 1, "", "prevent_ast"], [31, 3, 1, "", "prevent_embedded_answer"], [31, 3, 1, "", "prevent_function_call"], [31, 3, 1, "", "prevent_import"], [31, 3, 1, "", "prevent_literal"], [31, 3, 1, "", "prevent_literal_type"], [31, 3, 1, "", "prevent_operation"], [31, 3, 1, "", "prevent_operator"], [31, 3, 1, "", "prevent_printing_functions"], [26, 2, 1, "", "priority"], [29, 3, 1, "", "queue_input"], [30, 3, 1, "", "restore_code"], [29, 3, 1, "", "run"], [26, 2, 1, "", "score"], [30, 3, 1, "", "separate_into_sections"], [29, 3, 1, "", "set_input"], [30, 3, 1, "", "set_source"], [25, 3, 1, "", "set_success"], [29, 3, 1, "", "start_trace"], [30, 3, 1, "", "stop_sections"], [29, 3, 1, "", "stop_trace"], [29, 6, 1, "", "student"], [25, 3, 1, "", "suppress"], [32, 3, 1, "", "tifa_analysis"], [26, 2, 1, "", "title"], [26, 2, 1, "", "tool"], [28, 3, 1, "", "unit_test"], [26, 2, 1, "", "unscored"], [30, 3, 1, "", "verify"]], "Formatter": [[27, 1, 1, "", "check_mark"], [27, 2, 1, "", "exception"], [27, 2, 1, "", "filename"], [27, 2, 1, "", "frame"], [27, 1, 1, "", "indent"], [27, 2, 1, "", "inputs"], [27, 2, 1, "", "line"], [27, 2, 1, "", "name"], [27, 1, 1, "", "negative_mark"], [27, 2, 1, "", "output"], [27, 2, 1, "", "python_code"], [27, 2, 1, "", "python_expression"], [27, 2, 1, "", "python_value"], [27, 1, 1, "", "table"], [27, 2, 1, "", "traceback"]], "pedal": [[6, 4, 0, "-", "assertions"], [7, 4, 0, "-", "cait"], [10, 4, 0, "-", "sandbox"], [12, 4, 0, "-", "tifa"]], "pedal.assertions": [[6, 4, 0, "-", "commands"], [6, 3, 1, "", "reset"], [6, 4, 0, "-", "runtime"], [6, 4, 0, "-", "static"]], "pedal.assertions.commands": [[6, 0, 1, "", "check_dataclass_error"], [6, 3, 1, "", "unit_test"], [6, 0, 1, "", "wheat_chaff_game_class"]], "pedal.assertions.commands.wheat_chaff_game_class": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime": [[6, 2, 1, "", "assertAlmostEqual"], [6, 2, 1, "", "assertEqual"], [6, 2, 1, "", "assertFalse"], [6, 2, 1, "", "assertGreater"], [6, 2, 1, "", "assertGreaterEqual"], [6, 2, 1, "", "assertHasAttr"], [6, 2, 1, "", "assertHasFunction"], [6, 2, 1, "", "assertHasVariable"], [6, 2, 1, "", "assertIn"], [6, 2, 1, "", "assertIs"], [6, 2, 1, "", "assertIsInstance"], [6, 2, 1, "", "assertIsNone"], [6, 2, 1, "", "assertIsNot"], [6, 2, 1, "", "assertIsNotInstance"], [6, 2, 1, "", "assertIsNotNone"], [6, 2, 1, "", "assertLengthEqual"], [6, 2, 1, "", "assertLengthGreater"], [6, 2, 1, "", "assertLengthGreaterEqual"], [6, 2, 1, "", "assertLengthLess"], [6, 2, 1, "", "assertLengthLessEqual"], [6, 2, 1, "", "assertLengthNotEqual"], [6, 2, 1, "", "assertLess"], [6, 2, 1, "", "assertLessEqual"], [6, 2, 1, "", "assertNotAlmostEqual"], [6, 2, 1, "", "assertNotEqual"], [6, 2, 1, "", "assertNotIn"], [6, 2, 1, "", "assertNotOutput"], [6, 2, 1, "", "assertNotOutputContains"], [6, 2, 1, "", "assertNotRegex"], [6, 2, 1, "", "assertNotType"], [6, 2, 1, "", "assertOutput"], [6, 2, 1, "", "assertOutputContains"], [6, 2, 1, "", "assertPrints"], [6, 2, 1, "", "assertRegex"], [6, 2, 1, "", "assertTrue"], [6, 2, 1, "", "assertType"], [6, 0, 1, "", "assert_almost_equal"], [6, 0, 1, "", "assert_contains_subset"], [6, 0, 1, "", "assert_equal"], [6, 0, 1, "", "assert_false"], [6, 0, 1, "", "assert_greater"], [6, 0, 1, "", "assert_greater_equal"], [6, 0, 1, "", "assert_has_attr"], [6, 0, 1, "", "assert_has_function"], [6, 0, 1, "", "assert_has_variable"], [6, 0, 1, "", "assert_in"], [6, 0, 1, "", "assert_is"], [6, 0, 1, "", "assert_is_dataclass"], [6, 0, 1, "", "assert_is_instance"], [6, 0, 1, "", "assert_is_none"], [6, 0, 1, "", "assert_is_not"], [6, 0, 1, "", "assert_is_not_dataclass"], [6, 0, 1, "", "assert_is_not_none"], [6, 0, 1, "", "assert_length_equal"], [6, 0, 1, "", "assert_length_greater"], [6, 0, 1, "", "assert_length_greater_equal"], [6, 0, 1, "", "assert_length_less"], [6, 0, 1, "", "assert_length_less_equal"], [6, 0, 1, "", "assert_length_not_equal"], [6, 0, 1, "", "assert_less"], [6, 0, 1, "", "assert_less_equal"], [6, 0, 1, "", "assert_not_almost_equal"], [6, 0, 1, "", "assert_not_contains_subset"], [6, 0, 1, "", "assert_not_equal"], [6, 0, 1, "", "assert_not_in"], [6, 0, 1, "", "assert_not_is_instance"], [6, 0, 1, "", "assert_not_output"], [6, 0, 1, "", "assert_not_output_contains"], [6, 0, 1, "", "assert_not_regex"], [6, 0, 1, "", "assert_not_type"], [6, 0, 1, "", "assert_output"], [6, 0, 1, "", "assert_output_contains"], [6, 0, 1, "", "assert_prints"], [6, 0, 1, "", "assert_regex"], [6, 0, 1, "", "assert_true"], [6, 0, 1, "", "assert_type"], [6, 0, 1, "", "ensure_called_uniquely"], [6, 0, 1, "", "ensure_coverage"]], "pedal.assertions.runtime.assert_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_false": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_attr": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_has_function": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_has_variable": [[6, 1, 1, "", "condition"], [6, 1, 1, "", "format_assertion"]], "pedal.assertions.runtime.assert_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_dataclass": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_is_not_none": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_greater_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_length_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_less_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_contains_subset": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_equal": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_in": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_is_instance": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_not_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_output_contains": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_regex": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.assert_true": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_called_uniquely": [[6, 1, 1, "", "condition"]], "pedal.assertions.runtime.ensure_coverage": [[6, 1, 1, "", "condition"]], "pedal.assertions.static": [[6, 0, 1, "", "ensure_ast"], [6, 3, 1, "", "ensure_dataclass"], [6, 0, 1, "", "ensure_documented_functions"], [6, 3, 1, "", "ensure_function"], [6, 0, 1, "", "ensure_function_call"], [6, 0, 1, "", "ensure_functions_return"], [6, 0, 1, "", "ensure_import"], [6, 0, 1, "", "ensure_literal"], [6, 0, 1, "", "ensure_literal_type"], [6, 0, 1, "", "ensure_operation"], [6, 2, 1, "", "ensure_operator"], [6, 3, 1, "", "ensure_prints_exactly"], [6, 0, 1, "", "ensure_starting_code"], [6, 3, 1, "", "files_not_handled_correctly"], [6, 3, 1, "", "function_prints"], [6, 3, 1, "", "has_import"], [6, 0, 1, "", "only_printing_variables"], [6, 0, 1, "", "open_without_arguments"], [6, 3, 1, "", "prevent_advanced_iteration"], [6, 0, 1, "", "prevent_ast"], [6, 0, 1, "", "prevent_embedded_answer"], [6, 0, 1, "", "prevent_function_call"], [6, 0, 1, "", "prevent_import"], [6, 0, 1, "", "prevent_literal"], [6, 0, 1, "", "prevent_literal_type"], [6, 0, 1, "", "prevent_operation"], [6, 2, 1, "", "prevent_operator"], [6, 0, 1, "", "prevent_printing_functions"]], "pedal.assertions.static.ensure_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_documented_functions": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_functions_return": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.ensure_starting_code": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.only_printing_variables": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_ast": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_embedded_answer": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_function_call": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_import": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_literal_type": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_operation": [[6, 1, 1, "", "condition"]], "pedal.assertions.static.prevent_printing_functions": [[6, 1, 1, "", "condition"]], "pedal.cait": [[7, 4, 0, "-", "cait_api"], [7, 4, 0, "-", "find_node"]], "pedal.cait.cait_api": [[7, 5, 1, "", "CaitException"], [7, 3, 1, "", "data_state"], [7, 3, 1, "", "data_type"], [7, 3, 1, "", "def_use_error"], [7, 3, 1, "", "expire_cait_cache"], [7, 3, 1, "", "find_asts"], [7, 3, 1, "", "find_expr_sub_matches"], [7, 3, 1, "", "find_match"], [7, 3, 1, "", "find_matches"], [7, 3, 1, "", "find_submatches"], [7, 3, 1, "", "parse_program"], [7, 3, 1, "", "reparse_if_needed"], [7, 3, 1, "", "require_tifa"], [7, 3, 1, "", "reset"]], "pedal.cait.find_node": [[7, 3, 1, "", "find_function_calls"], [7, 3, 1, "", "find_function_definition"], [7, 3, 1, "", "find_operation"], [7, 3, 1, "", "find_prior_initializations"], [7, 3, 1, "", "function_is_called"], [7, 3, 1, "", "is_top_level"]], "pedal.core": [[0, 4, 0, "-", "commands"], [0, 4, 0, "-", "environment"], [0, 4, 0, "-", "feedback"], [0, 4, 0, "-", "feedback_category"], [0, 4, 0, "-", "location"], [0, 4, 0, "-", "report"], [0, 4, 0, "-", "submission"], [0, 4, 0, "-", "tool"]], "pedal.core.commands": [[0, 0, 1, "", "Feedback"], [0, 3, 1, "", "clear_report"], [0, 0, 1, "", "compliment"], [0, 3, 1, "", "contextualize_report"], [0, 3, 1, "", "debug"], [0, 0, 1, "", "explain"], [0, 2, 1, "", "feedback"], [0, 0, 1, "", "gently"], [0, 3, 1, "", "get_all_feedback"], [0, 3, 1, "", "get_submission"], [0, 0, 1, "", "give_partial"], [0, 0, 1, "", "guidance"], [0, 3, 1, "", "hide_correctness"], [0, 3, 1, "", "log"], [0, 0, 1, "", "set_correct"], [0, 3, 1, "", "set_formatter"], [0, 2, 1, "", "set_success"], [0, 3, 1, "", "suppress"], [0, 0, 1, "", "system_error"]], "pedal.core.commands.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.environment": [[0, 0, 1, "", "Environment"]], "pedal.core.feedback": [[0, 3, 1, "", "CompositeFeedbackFunction"], [0, 0, 1, "", "Feedback"], [0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackResponse"]], "pedal.core.feedback.Feedback": [[0, 2, 1, "", "CATEGORIES"], [0, 2, 1, "", "KINDS"], [0, 2, 1, "", "activate"], [0, 2, 1, "", "author"], [0, 2, 1, "", "category"], [0, 1, 1, "", "condition"], [0, 2, 1, "", "correct"], [0, 2, 1, "", "else_message"], [0, 2, 1, "", "else_message_template"], [0, 2, 1, "", "fields"], [0, 2, 1, "", "justification"], [0, 2, 1, "", "justification_template"], [0, 2, 1, "", "kind"], [0, 2, 1, "", "label"], [0, 2, 1, "", "location"], [0, 2, 1, "", "message"], [0, 2, 1, "", "message_template"], [0, 2, 1, "", "muted"], [0, 2, 1, "", "parent"], [0, 2, 1, "", "priority"], [0, 2, 1, "", "report"], [0, 2, 1, "", "score"], [0, 2, 1, "", "tags"], [0, 2, 1, "", "title"], [0, 2, 1, "", "tool"], [0, 2, 1, "", "unscored"], [0, 1, 1, "", "update_location"], [0, 2, 1, "", "valence"], [0, 2, 1, "", "version"]], "pedal.core.feedback.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.feedback_category": [[0, 0, 1, "", "FeedbackCategory"], [0, 0, 1, "", "FeedbackKind"], [0, 0, 1, "", "FeedbackStatus"]], "pedal.core.feedback_category.FeedbackCategory": [[0, 2, 1, "", "ALGORITHMIC"], [0, 2, 1, "", "COMPLETE"], [0, 2, 1, "", "INSTRUCTIONS"], [0, 2, 1, "", "INSTRUCTOR"], [0, 2, 1, "", "MISTAKES"], [0, 2, 1, "", "POSITIVE"], [0, 2, 1, "", "RUNTIME"], [0, 2, 1, "", "SPECIFICATION"], [0, 2, 1, "", "STUDENT"], [0, 2, 1, "", "STYLE"], [0, 2, 1, "", "SYNTAX"], [0, 2, 1, "", "SYSTEM"], [0, 2, 1, "", "UNKNOWN"]], "pedal.core.feedback_category.FeedbackKind": [[0, 2, 1, "", "CONSTRAINT"], [0, 2, 1, "", "HINT"], [0, 2, 1, "", "METACOGNITIVE"], [0, 2, 1, "", "MISCONCEPTION"], [0, 2, 1, "", "MISTAKE"]], "pedal.core.location": [[0, 0, 1, "", "Location"]], "pedal.core.location.Location": [[0, 2, 1, "", "col"], [0, 2, 1, "", "end_col"], [0, 2, 1, "", "end_line"], [0, 2, 1, "", "filename"], [0, 1, 1, "", "from_ast"], [0, 2, 1, "", "line"], [0, 1, 1, "", "to_json"]], "pedal.core.report": [[0, 6, 1, "", "MAIN_REPORT"], [0, 0, 1, "", "Report"]], "pedal.core.report.Report": [[0, 2, 1, "", "TOOLS"], [0, 2, 1, "", "_tool_data"], [0, 1, 1, "", "add_class_hook"], [0, 1, 1, "", "add_feedback"], [0, 1, 1, "", "add_hook"], [0, 1, 1, "", "add_ignored_feedback"], [0, 1, 1, "", "clear"], [0, 1, 1, "", "contextualize"], [0, 1, 1, "", "execute_hooks"], [0, 2, 1, "", "feedback"], [0, 1, 1, "", "full_clear"], [0, 2, 1, "", "group"], [0, 2, 1, "", "group_names"], [0, 2, 1, "", "hiddens"], [0, 1, 1, "", "hide_correctness"], [0, 2, 1, "", "hooks"], [0, 1, 1, "", "register_tool"], [0, 2, 1, "", "resolves"], [0, 2, 1, "", "result"], [0, 1, 1, "", "set_formatter"], [0, 1, 1, "", "stop_group"], [0, 2, 1, "", "submission"], [0, 1, 1, "", "suppress"], [0, 2, 1, "", "suppressions"]], "pedal.core.submission": [[0, 0, 1, "", "Submission"]], "pedal.core.submission.Submission": [[0, 2, 1, "", "assignment"], [0, 2, 1, "", "course"], [0, 2, 1, "", "execution"], [0, 2, 1, "", "files"], [0, 1, 1, "", "get_files_lines"], [0, 1, 1, "", "get_lines"], [0, 2, 1, "", "main_code"], [0, 2, 1, "", "main_file"], [0, 1, 1, "", "replace_main"], [0, 1, 1, "", "set_line_offset"], [0, 2, 1, "", "user"]], "pedal.core.tool": [[0, 0, 1, "", "ToolRegistration"]], "pedal.core.tool.ToolRegistration": [[0, 2, 1, "", "name"], [0, 2, 1, "", "reset"]], "pedal.extensions": [[8, 4, 0, "-", "plotting"], [8, 4, 0, "-", "turtles"]], "pedal.extensions.plotting": [[8, 0, 1, "", "BadGraphFeedback"], [8, 3, 1, "", "assert_plot"], [8, 3, 1, "", "compare_data"], [8, 3, 1, "", "ensure_correct_plot"], [8, 0, 1, "", "ensure_show"], [8, 3, 1, "", "get_plots"], [8, 0, 1, "", "no_plt"], [8, 0, 1, "", "other_plt"], [8, 0, 1, "", "plt_rename_err"], [8, 0, 1, "", "plt_wrong_import"], [8, 3, 1, "", "prevent_incorrect_plt"], [8, 0, 1, "", "wrong_plt_data"], [8, 0, 1, "", "wrong_plt_type"]], "pedal.extensions.plotting.ensure_show": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_rename_err": [[8, 1, 1, "", "condition"]], "pedal.extensions.plotting.plt_wrong_import": [[8, 1, 1, "", "condition"]], "pedal.questions": [[9, 4, 0, "-", "setup"]], "pedal.questions.setup": [[9, 3, 1, "", "reset"], [9, 3, 1, "", "set_seed"]], "pedal.sandbox": [[10, 4, 0, "-", "commands"], [10, 4, 0, "-", "feedbacks"], [10, 3, 1, "", "reset"], [10, 4, 0, "-", "sandbox"]], "pedal.sandbox.commands": [[10, 0, 1, "", "CommandBlock"], [10, 3, 1, "", "allow_function"], [10, 3, 1, "", "allow_module"], [10, 3, 1, "", "allow_real_io"], [10, 3, 1, "", "block_function"], [10, 3, 1, "", "block_module"], [10, 3, 1, "", "block_real_io"], [10, 3, 1, "", "call"], [10, 3, 1, "", "check_coverage"], [10, 3, 1, "", "clear_input"], [10, 3, 1, "", "clear_mocks"], [10, 3, 1, "", "clear_output"], [10, 3, 1, "", "clear_sandbox"], [10, 3, 1, "", "clear_student_data"], [10, 3, 1, "", "count_unique_calls"], [10, 3, 1, "", "evaluate"], [10, 3, 1, "", "get_call_arguments"], [10, 3, 1, "", "get_exception"], [10, 3, 1, "", "get_function"], [10, 3, 1, "", "get_input"], [10, 3, 1, "", "get_module"], [10, 3, 1, "", "get_output"], [10, 3, 1, "", "get_python_errors"], [10, 3, 1, "", "get_raw_output"], [10, 3, 1, "", "get_sandbox"], [10, 3, 1, "", "get_student_data"], [10, 3, 1, "", "get_trace"], [10, 3, 1, "", "mock_function"], [10, 3, 1, "", "mock_module"], [10, 3, 1, "", "queue_input"], [10, 3, 1, "", "reset_output"], [10, 3, 1, "", "run"], [10, 3, 1, "", "set_input"], [10, 3, 1, "", "start_trace"], [10, 3, 1, "", "stop_trace"]], "pedal.sandbox.feedbacks": [[10, 0, 1, "", "attribute_error"], [10, 0, 1, "", "import_error"], [10, 0, 1, "", "indentation_error"], [10, 0, 1, "", "index_error"], [10, 0, 1, "", "io_error"], [10, 0, 1, "", "key_error"], [10, 0, 1, "", "memory_error"], [10, 0, 1, "", "name_error"], [10, 0, 1, "", "runtime_error"], [10, 0, 1, "", "timeout_error"], [10, 0, 1, "", "type_error"], [10, 0, 1, "", "value_error"], [10, 0, 1, "", "zero_division_error"]], "pedal.sandbox.feedbacks.runtime_error": [[10, 2, 1, "", "context"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "exception_message"], [10, 2, 1, "", "exception_name"], [10, 2, 1, "", "traceback"], [10, 2, 1, "", "traceback_message"]], "pedal.sandbox.sandbox": [[10, 0, 1, "", "Sandbox"]], "pedal.sandbox.sandbox.Sandbox": [[10, 2, 1, "", "MAXIMUM_TEMPORARY_LENGTH"], [10, 2, 1, "", "_context"], [10, 2, 1, "", "_current_patches"], [10, 2, 1, "", "_next_context_id"], [10, 1, 1, "", "allow_module"], [10, 2, 1, "", "allowed_time"], [10, 1, 1, "", "append_output"], [10, 1, 1, "", "block_module"], [10, 1, 1, "", "call"], [10, 1, 1, "", "clear"], [10, 1, 1, "", "clear_context"], [10, 1, 1, "", "clear_exception"], [10, 1, 1, "", "clear_input"], [10, 1, 1, "", "clear_mocked_function"], [10, 1, 1, "", "clear_mocks"], [10, 1, 1, "", "clear_output"], [10, 1, 1, "", "clear_tracer"], [10, 2, 1, "", "data"], [10, 1, 1, "", "evaluate"], [10, 2, 1, "", "exception"], [10, 2, 1, "", "feedback"], [10, 7, 1, "", "functions"], [10, 1, 1, "", "get_context"], [10, 1, 1, "", "get_function"], [10, 1, 1, "", "get_names_by_type"], [10, 1, 1, "", "get_values_by_type"], [10, 1, 1, "", "get_variables_by_type"], [10, 2, 1, "", "inputs"], [10, 1, 1, "", "make_safe_variable"], [10, 1, 1, "", "mock_module"], [10, 2, 1, "", "output"], [10, 2, 1, "", "raw_output"], [10, 1, 1, "", "reset_default_overrides"], [10, 2, 1, "", "result"], [10, 1, 1, "", "run"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "set_student_data"], [10, 1, 1, "", "start_grouping_context"], [10, 1, 1, "", "stop_grouping_context"], [10, 2, 1, "", "target"], [10, 2, 1, "", "tracer_style"], [10, 7, 1, "", "var"]], "pedal.sandbox.sandbox.Sandbox.modules": [[10, 2, 1, "", "plots"], [10, 2, 1, "", "turtles"]], "pedal.source": [[11, 4, 0, "-", "source"]], "pedal.source.source": [[11, 3, 1, "", "get_original_program"], [11, 3, 1, "", "get_program"], [11, 3, 1, "", "reset"], [11, 3, 1, "", "restore_code"], [11, 3, 1, "", "set_source"], [11, 3, 1, "", "set_source_file"], [11, 3, 1, "", "verify"], [11, 3, 1, "", "verify_section"]], "pedal.tifa": [[12, 0, 1, "", "Tifa"], [12, 3, 1, "", "tifa_analysis"]], "pedal.tifa.Tifa": [[12, 1, 1, "", "assign_target"], [12, 1, 1, "", "process_ast"], [12, 1, 1, "", "process_code"], [12, 1, 1, "", "visit"], [12, 1, 1, "", "visit_AnnAssign"], [12, 1, 1, "", "visit_Assign"], [12, 1, 1, "", "visit_Attribute"], [12, 1, 1, "", "visit_AugAssign"], [12, 1, 1, "", "visit_BinOp"], [12, 1, 1, "", "visit_Bool"], [12, 1, 1, "", "visit_BoolOp"], [12, 1, 1, "", "visit_ClassDef"], [12, 1, 1, "", "visit_Compare"], [12, 1, 1, "", "visit_Constant"], [12, 1, 1, "", "visit_Dict"], [12, 1, 1, "", "visit_DictComp"], [12, 1, 1, "", "visit_Expr"], [12, 1, 1, "", "visit_For"], [12, 1, 1, "", "visit_FunctionDef"], [12, 1, 1, "", "visit_GeneratorExp"], [12, 1, 1, "", "visit_If"], [12, 1, 1, "", "visit_IfExp"], [12, 1, 1, "", "visit_Import"], [12, 1, 1, "", "visit_ImportFrom"], [12, 1, 1, "", "visit_Lambda"], [12, 1, 1, "", "visit_List"], [12, 1, 1, "", "visit_ListComp"], [12, 1, 1, "", "visit_Name"], [12, 1, 1, "", "visit_NameConstant"], [12, 1, 1, "", "visit_Num"], [12, 1, 1, "", "visit_Return"], [12, 1, 1, "", "visit_SetComp"], [12, 1, 1, "", "visit_Slice"], [12, 1, 1, "", "visit_Str"], [12, 1, 1, "", "visit_Subscript"], [12, 1, 1, "", "visit_UnaryOp"], [12, 1, 1, "", "visit_While"], [12, 1, 1, "", "visit_With"], [12, 1, 1, "", "visit_comprehension"], [12, 1, 1, "", "visit_statements"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function", "4": "py:module", "5": "py:exception", "6": "py:data", "7": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "module", "Python module"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "titleterms": {"develop": [0, 3, 5], "api": 0, "import": 0, "concept": [0, 3], "core": [0, 22, 25], "command": [0, 22, 25], "report": [0, 7, 11], "locat": 0, "feedback": [0, 3, 21, 22, 26, 30], "environ": [0, 22], "submiss": 0, "tool": [0, 5], "compil": 1, "pedal": [1, 17, 18, 24, 33], "skulpt": [1, 4], "pyodid": 1, "intern": 2, "name": [2, 28], "convent": 2, "function": [3, 19, 22, 24, 26, 33], "why": 3, "creat": 3, "The": 3, "lifetim": 3, "metadata": 3, "differ": 3, "wai": 3, "disabl": 3, "method": 3, "overrid": 3, "exist": 3, "necessari": 4, "librari": 4, "critic": 4, "standard": 4, "non": 4, "option": 4, "third": 4, "parti": 4, "compatibl": 4, "micropython": 4, "refer": [5, 23, 24], "content": [5, 17, 23], "assert": [6, 22, 28, 31], "cait": [7, 24], "data": [7, 11, 24], "extens": 8, "question": [9, 19], "sandbox": [10, 29], "sourc": [11, 30], "tifa": [12, 32], "contact": 13, "glossari": 14, "instal": 15, "pypi": 15, "github": 15, "compat": 15, "introduct": 16, "an": 16, "exampl": [16, 19], "architectur": 16, "welcom": 17, "": [17, 33], "document": [17, 21], "indic": 17, "tabl": 17, "research": 18, "analyz": 18, "teacher": [19, 22, 23], "basic": 19, "arithmet": 19, "call": [19, 22, 24], "student": [19, 22], "defin": 19, "complex": 19, "medium": 19, "project": 19, "larg": 19, "autograd": 20, "integr": 20, "gradescop": 20, "blockpi": 20, "vpl": 20, "web": 20, "cat": 20, "jupyt": 20, "notebook": 20, "best": 21, "practic": 21, "us": 21, "novic": 21, "friendli": 21, "languag": 21, "quick": 22, "start": 22, "guid": 22, "line": 22, "usag": 22, "instructor": 22, "control": 22, "script": 22, "custom": 22, "find": [22, 24], "ast": 22, "pattern": 22, "check": 22, "execut": 22, "result": 22, "simpl": 22, "unit": 22, "test": 22, "other": 22, "resolv": 22, "list": 24, "type": [24, 33], "save": 24, "variabl": 24, "definit": 24, "subtre": 24, "match": 24, "formatt": 27, "runtim": 28, "equival": 28, "section": 30, "static": 31, "system": 33, "gener": 33, "object": 33, "built": 33, "json": 33, "hint": 33}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Developer API": [[0, "developer-api"]], "Important Concepts": [[0, "important-concepts"]], "Core Commands": [[0, "module-pedal.core.commands"], [25, "core-commands"]], "Report": [[0, "module-pedal.core.report"]], "Location": [[0, "module-pedal.core.location"]], "Feedback": [[0, "module-pedal.core.feedback"]], "Environment": [[0, "module-pedal.core.environment"]], "Submission": [[0, "module-pedal.core.submission"]], "Tools": [[0, "module-pedal.core.tool"]], "Compilation": [[1, "compilation"]], "Compiling Pedal for Skulpt": [[1, "compiling-pedal-for-skulpt"]], "Compiling Pedal for Pyodide": [[1, "compiling-pedal-for-pyodide"]], "Internal Naming Conventions": [[2, "internal-naming-conventions"]], "Developers: Feedback Functions": [[3, "developers-feedback-functions"]], "Why Feedback Functions?": [[3, "why-feedback-functions"]], "Feedback Function Concepts": [[3, "feedback-function-concepts"]], "Creating a Feedback Function": [[3, "creating-a-feedback-function"]], "The Lifetime of a Feedback Function": [[3, "the-lifetime-of-a-feedback-function"]], "The Metadata of Feedback Functions": [[3, "the-metadata-of-feedback-functions"]], "Different Ways of Disabling Feedback": [[3, "different-ways-of-disabling-feedback"]], "Methods of Feedback Functions": [[3, "methods-of-feedback-functions"]], "Overriding Existing Feedback Functions": [[3, "overriding-existing-feedback-functions"]], "Necessary Libraries": [[4, "necessary-libraries"]], "Critical Standard Libraries": [[4, "critical-standard-libraries"]], "Non-Critical Standard Libraries": [[4, "non-critical-standard-libraries"]], "Optional Third Party Libraries": [[4, "optional-third-party-libraries"]], "Compatiblity": [[4, "compatiblity"]], "Skulpt": [[4, "skulpt"]], "MicroPython": [[4, "micropython"]], "Developer Tools Reference": [[5, "developer-tools-reference"]], "Contents": [[5, null], [17, null], [23, null]], "Assertions": [[6, "module-pedal.assertions"]], "CAIT": [[7, "module-pedal.cait"], [24, "cait"]], "Cait Report Data": [[7, "id1"]], "Extensions": [[8, "module-pedal.extensions.plotting"]], "Questions": [[9, "module-pedal.questions.setup"]], "Sandbox": [[10, "module-pedal.sandbox"], [29, "sandbox"]], "Source": [[11, "source"], [30, "source"]], "Source Report Data": [[11, "id2"]], "TIFA": [[12, "tifa"], [32, "tifa"]], "Contact": [[13, "contact"]], "Glossary": [[14, "glossary"]], "Installation": [[15, "installation"]], "PyPi": [[15, "pypi"]], "GitHub": [[15, "github"]], "Compatibility": [[15, "compatibility"]], "Introduction": [[16, "introduction"]], "An Example": [[16, "an-example"]], "Architecture": [[16, "architecture"]], "Welcome to Pedal\u2019s documentation!": [[17, "welcome-to-pedal-s-documentation"]], "Indices and tables": [[17, "indices-and-tables"]], "Researchers: Analyzing with Pedal": [[18, "researchers-analyzing-with-pedal"]], "Teacher Examples": [[19, "teacher-examples"]], "Basic Arithmetic Question": [[19, "basic-arithmetic-question"]], "Basic Function Call Question": [[19, "basic-function-call-question"]], "Student Defined Function": [[19, "student-defined-function"]], "Complex Question": [[19, "complex-question"]], "Medium Project": [[19, "medium-project"]], "Large Project": [[19, "large-project"]], "Autograder Integrations": [[20, "autograder-integrations"]], "GradeScope": [[20, "gradescope"]], "BlockPy": [[20, "blockpy"]], "VPL": [[20, "vpl"]], "Web-CAT": [[20, "web-cat"]], "Jupyter Notebooks": [[20, "jupyter-notebooks"]], "Best Practices": [[21, "best-practices"]], "Documenting Feedback": [[21, "documenting-feedback"]], "Use Novice-Friendly Language": [[21, "use-novice-friendly-language"]], "Teacher Quick Start Guide": [[22, "teacher-quick-start-guide"]], "Command Line Usage": [[22, "command-line-usage"]], "Instructor Control Scripts": [[22, "instructor-control-scripts"]], "Custom Environments": [[22, "custom-environments"]], "Core Feedback Functions": [[22, "core-feedback-functions"]], "Finding AST Patterns": [[22, "finding-ast-patterns"]], "Checking Execution Results": [[22, "checking-execution-results"]], "Calling Students\u2019 Functions": [[22, "calling-students-functions"]], "Simple Assertions": [[22, "simple-assertions"]], "Simple Unit Testing": [[22, "simple-unit-testing"]], "Other Assertions": [[22, "other-assertions"]], "Resolver Feedback": [[22, "resolver-feedback"]], "Teacher Reference": [[23, "teacher-reference"]], "List of Pedal Data Types": [[24, "list-of-pedal-data-types"]], "Save and reference variable": [[24, "save-and-reference-variable"]], "Reference a function call": [[24, "reference-a-function-call"]], "Reference a function definition": [[24, "reference-a-function-definition"]], "Subtree matching": [[24, "subtree-matching"]], "Finding Data types": [[24, "finding-data-types"]], "Feedback Functions": [[26, "feedback-functions"]], "Formatter": [[27, "formatter"]], "Runtime Assertions": [[28, "runtime-assertions"]], "Equivalent Names": [[28, "equivalent-names"]], "Sections": [[30, "sections"]], "Source Feedbacks": [[30, "source-feedbacks"]], "Static Assertions": [[31, "static-assertions"]], "Pedal\u2019s Type System": [[33, "pedal-s-type-system"]], "Generics": [[33, "generics"]], "Objects": [[33, "objects"]], "Built-in Functions": [[33, "built-in-functions"]], "JSON Type Hints": [[33, "json-type-hints"]]}, "indexentries": {"algorithmic (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.ALGORITHMIC"], [0, "pedal.core.feedback_category.FeedbackCategory.ALGORITHMIC"]], "categories (feedback attribute)": [[0, "pedal.core.commands.Feedback.CATEGORIES"], [0, "pedal.core.feedback.Feedback.CATEGORIES"]], "complete (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.COMPLETE"], [0, "pedal.core.feedback_category.FeedbackCategory.COMPLETE"]], "constraint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.CONSTRAINT"], [0, "pedal.core.feedback_category.FeedbackKind.CONSTRAINT"]], "compositefeedbackfunction() (in module pedal.core.feedback)": [[0, "pedal.core.feedback.CompositeFeedbackFunction"]], "environment (class in pedal.core.environment)": [[0, "pedal.core.environment.Environment"]], "feedback (class in pedal.core.commands)": [[0, "pedal.core.commands.Feedback"]], "feedback (class in pedal.core.feedback)": [[0, "pedal.core.feedback.Feedback"]], "feedbackcategory (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackCategory"]], "feedbackcategory (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackCategory"]], "feedbackkind (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackKind"]], "feedbackkind (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackKind"]], "feedbackresponse (class in pedal.core.feedback)": [[0, "pedal.core.feedback.FeedbackResponse"]], "feedbackstatus (class in pedal.core.feedback_category)": [[0, "pedal.core.feedback_category.FeedbackStatus"]], "hint (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.HINT"], [0, "pedal.core.feedback_category.FeedbackKind.HINT"]], "instructions (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTIONS"], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTIONS"]], "instructor (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.INSTRUCTOR"], [0, "pedal.core.feedback_category.FeedbackCategory.INSTRUCTOR"]], "kinds (feedback attribute)": [[0, "pedal.core.commands.Feedback.KINDS"], [0, "pedal.core.feedback.Feedback.KINDS"]], "location (class in pedal.core.location)": [[0, "pedal.core.location.Location"]], "main_report (in module pedal.core.report)": [[0, "pedal.core.report.MAIN_REPORT"]], "metacognitive (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.METACOGNITIVE"], [0, "pedal.core.feedback_category.FeedbackKind.METACOGNITIVE"]], "misconception (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISCONCEPTION"], [0, "pedal.core.feedback_category.FeedbackKind.MISCONCEPTION"]], "mistake (feedbackkind attribute)": [[0, "pedal.core.feedback.FeedbackKind.MISTAKE"], [0, "pedal.core.feedback_category.FeedbackKind.MISTAKE"]], "mistakes (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.MISTAKES"], [0, "pedal.core.feedback_category.FeedbackCategory.MISTAKES"]], "positive (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.POSITIVE"], [0, "pedal.core.feedback_category.FeedbackCategory.POSITIVE"]], "runtime (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.RUNTIME"], [0, "pedal.core.feedback_category.FeedbackCategory.RUNTIME"]], "report (class in pedal.core.report)": [[0, "pedal.core.report.Report"]], "specification (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SPECIFICATION"], [0, "pedal.core.feedback_category.FeedbackCategory.SPECIFICATION"]], "student (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STUDENT"], [0, "pedal.core.feedback_category.FeedbackCategory.STUDENT"]], "style (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.STYLE"], [0, "pedal.core.feedback_category.FeedbackCategory.STYLE"]], "syntax (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYNTAX"], [0, "pedal.core.feedback_category.FeedbackCategory.SYNTAX"]], "system (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.SYSTEM"], [0, "pedal.core.feedback_category.FeedbackCategory.SYSTEM"]], "submission (class in pedal.core.submission)": [[0, "pedal.core.submission.Submission"]], "tools (report attribute)": [[0, "pedal.core.report.Report.TOOLS"]], "toolregistration (class in pedal.core.tool)": [[0, "pedal.core.tool.ToolRegistration"]], "unknown (feedbackcategory attribute)": [[0, "pedal.core.feedback.FeedbackCategory.UNKNOWN"], [0, "pedal.core.feedback_category.FeedbackCategory.UNKNOWN"]], "_tool_data (report attribute)": [[0, "pedal.core.report.Report._tool_data"]], "activate (feedback attribute)": [[0, "pedal.core.commands.Feedback.activate"], [0, "pedal.core.feedback.Feedback.activate"]], "add_class_hook() (report class method)": [[0, "pedal.core.report.Report.add_class_hook"]], "add_feedback() (report method)": [[0, "pedal.core.report.Report.add_feedback"]], "add_hook() (report method)": [[0, "pedal.core.report.Report.add_hook"]], "add_ignored_feedback() (report method)": [[0, "pedal.core.report.Report.add_ignored_feedback"]], "assignment (submission attribute)": [[0, "pedal.core.submission.Submission.assignment"]], "author (feedback attribute)": [[0, "pedal.core.commands.Feedback.author"], [0, "pedal.core.feedback.Feedback.author"]], "category (feedback attribute)": [[0, "pedal.core.commands.Feedback.category"], [0, "pedal.core.feedback.Feedback.category"]], "clear() (report method)": [[0, "pedal.core.report.Report.clear"]], "clear_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.clear_report"]], "col (location attribute)": [[0, "pedal.core.location.Location.col"]], "compliment (class in pedal.core.commands)": [[0, "pedal.core.commands.compliment"]], "condition() (feedback method)": [[0, "pedal.core.commands.Feedback.condition"], [0, "pedal.core.feedback.Feedback.condition"]], "contextualize() (report method)": [[0, "pedal.core.report.Report.contextualize"]], "contextualize_report() (in module pedal.core.commands)": [[0, "pedal.core.commands.contextualize_report"]], "correct (feedback attribute)": [[0, "pedal.core.commands.Feedback.correct"], [0, "pedal.core.feedback.Feedback.correct"]], "course (submission attribute)": [[0, "pedal.core.submission.Submission.course"]], "debug() (in module pedal.core.commands)": [[0, "pedal.core.commands.debug"]], "else_message (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message"], [0, "pedal.core.feedback.Feedback.else_message"]], "else_message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.else_message_template"], [0, "pedal.core.feedback.Feedback.else_message_template"]], "end_col (location attribute)": [[0, "pedal.core.location.Location.end_col"]], "end_line (location attribute)": [[0, "pedal.core.location.Location.end_line"]], "execute_hooks() (report method)": [[0, "pedal.core.report.Report.execute_hooks"]], "execution (submission attribute)": [[0, "pedal.core.submission.Submission.execution"]], "explain (class in pedal.core.commands)": [[0, "pedal.core.commands.explain"]], "feedback (report attribute)": [[0, "pedal.core.report.Report.feedback"]], "feedback (in module pedal.core.commands)": [[0, "pedal.core.commands.feedback"]], "fields (feedback attribute)": [[0, "pedal.core.commands.Feedback.fields"], [0, "pedal.core.feedback.Feedback.fields"]], "filename (location attribute)": [[0, "pedal.core.location.Location.filename"]], "files (submission attribute)": [[0, "pedal.core.submission.Submission.files"]], "from_ast() (location class method)": [[0, "pedal.core.location.Location.from_ast"]], "full_clear() (report method)": [[0, "pedal.core.report.Report.full_clear"]], "gently (class in pedal.core.commands)": [[0, "pedal.core.commands.gently"]], "get_all_feedback() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_all_feedback"]], "get_files_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_files_lines"]], "get_lines() (submission method)": [[0, "pedal.core.submission.Submission.get_lines"]], "get_submission() (in module pedal.core.commands)": [[0, "pedal.core.commands.get_submission"]], "give_partial (class in pedal.core.commands)": [[0, "pedal.core.commands.give_partial"]], "group (report attribute)": [[0, "pedal.core.report.Report.group"]], "group_names (report attribute)": [[0, "pedal.core.report.Report.group_names"]], "guidance (class in pedal.core.commands)": [[0, "pedal.core.commands.guidance"]], "hiddens (report attribute)": [[0, "pedal.core.report.Report.hiddens"]], "hide_correctness() (report method)": [[0, "pedal.core.report.Report.hide_correctness"]], "hide_correctness() (in module pedal.core.commands)": [[0, "pedal.core.commands.hide_correctness"]], "hooks (report attribute)": [[0, "pedal.core.report.Report.hooks"]], "justification (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification"], [0, "pedal.core.feedback.Feedback.justification"]], "justification_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.justification_template"], [0, "pedal.core.feedback.Feedback.justification_template"]], "kind (feedback attribute)": [[0, "pedal.core.commands.Feedback.kind"], [0, "pedal.core.feedback.Feedback.kind"]], "label (feedback attribute)": [[0, "pedal.core.commands.Feedback.label"], [0, "pedal.core.feedback.Feedback.label"]], "line (location attribute)": [[0, "pedal.core.location.Location.line"]], "location (feedback attribute)": [[0, "pedal.core.commands.Feedback.location"], [0, "pedal.core.feedback.Feedback.location"]], "log() (in module pedal.core.commands)": [[0, "pedal.core.commands.log"]], "main_code (submission attribute)": [[0, "pedal.core.submission.Submission.main_code"]], "main_file (submission attribute)": [[0, "pedal.core.submission.Submission.main_file"]], "message (feedback attribute)": [[0, "pedal.core.commands.Feedback.message"], [0, "pedal.core.feedback.Feedback.message"]], "message_template (feedback attribute)": [[0, "pedal.core.commands.Feedback.message_template"], [0, "pedal.core.feedback.Feedback.message_template"]], "module": [[0, "module-pedal.core.commands"], [0, "module-pedal.core.environment"], [0, "module-pedal.core.feedback"], [0, "module-pedal.core.feedback_category"], [0, "module-pedal.core.location"], [0, "module-pedal.core.report"], [0, "module-pedal.core.submission"], [0, "module-pedal.core.tool"], [6, "module-pedal.assertions"], [6, "module-pedal.assertions.commands"], [6, "module-pedal.assertions.runtime"], [6, "module-pedal.assertions.static"], [7, "module-pedal.cait"], [7, "module-pedal.cait.cait_api"], [7, "module-pedal.cait.find_node"], [8, "module-pedal.extensions.plotting"], [8, "module-pedal.extensions.turtles"], [9, "module-pedal.questions.setup"], [10, "module-pedal.sandbox"], [10, "module-pedal.sandbox.commands"], [10, "module-pedal.sandbox.feedbacks"], [10, "module-pedal.sandbox.sandbox"], [11, "module-pedal.source.source"], [12, "module-pedal.tifa"]], "muted (feedback attribute)": [[0, "pedal.core.commands.Feedback.muted"], [0, "pedal.core.feedback.Feedback.muted"]], "name (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.name"]], "parent (feedback attribute)": [[0, "pedal.core.commands.Feedback.parent"], [0, "pedal.core.feedback.Feedback.parent"]], "pedal.core.commands": [[0, "module-pedal.core.commands"]], "pedal.core.environment": [[0, "module-pedal.core.environment"]], "pedal.core.feedback": [[0, "module-pedal.core.feedback"]], "pedal.core.feedback_category": [[0, "module-pedal.core.feedback_category"]], "pedal.core.location": [[0, "module-pedal.core.location"]], "pedal.core.report": [[0, "module-pedal.core.report"]], "pedal.core.submission": [[0, "module-pedal.core.submission"]], "pedal.core.tool": [[0, "module-pedal.core.tool"]], "priority (feedback attribute)": [[0, "pedal.core.commands.Feedback.priority"], [0, "pedal.core.feedback.Feedback.priority"]], "register_tool() (report class method)": [[0, "pedal.core.report.Report.register_tool"]], "replace_main() (submission method)": [[0, "pedal.core.submission.Submission.replace_main"]], "report (feedback attribute)": [[0, "pedal.core.commands.Feedback.report"], [0, "pedal.core.feedback.Feedback.report"]], "reset (toolregistration attribute)": [[0, "pedal.core.tool.ToolRegistration.reset"]], "resolves (report attribute)": [[0, "pedal.core.report.Report.resolves"]], "result (report attribute)": [[0, "pedal.core.report.Report.result"]], "score (feedback attribute)": [[0, "pedal.core.commands.Feedback.score"], [0, "pedal.core.feedback.Feedback.score"]], "set_correct (class in pedal.core.commands)": [[0, "pedal.core.commands.set_correct"]], "set_formatter() (report method)": [[0, "pedal.core.report.Report.set_formatter"]], "set_formatter() (in module pedal.core.commands)": [[0, "pedal.core.commands.set_formatter"]], "set_line_offset() (submission method)": [[0, "pedal.core.submission.Submission.set_line_offset"]], "set_success (in module pedal.core.commands)": [[0, "pedal.core.commands.set_success"]], "stop_group() (report method)": [[0, "pedal.core.report.Report.stop_group"]], "submission (report attribute)": [[0, "pedal.core.report.Report.submission"]], "suppress() (report method)": [[0, "pedal.core.report.Report.suppress"]], "suppress() (in module pedal.core.commands)": [[0, "pedal.core.commands.suppress"]], "suppressions (report attribute)": [[0, "pedal.core.report.Report.suppressions"]], "system_error (class in pedal.core.commands)": [[0, "pedal.core.commands.system_error"]], "tags (feedback attribute)": [[0, "pedal.core.commands.Feedback.tags"], [0, "pedal.core.feedback.Feedback.tags"]], "title (feedback attribute)": [[0, "pedal.core.commands.Feedback.title"], [0, "pedal.core.feedback.Feedback.title"]], "to_json() (location method)": [[0, "pedal.core.location.Location.to_json"]], "tool (feedback attribute)": [[0, "pedal.core.commands.Feedback.tool"], [0, "pedal.core.feedback.Feedback.tool"]], "unscored (feedback attribute)": [[0, "pedal.core.commands.Feedback.unscored"], [0, "pedal.core.feedback.Feedback.unscored"]], "update_location() (feedback method)": [[0, "pedal.core.commands.Feedback.update_location"], [0, "pedal.core.feedback.Feedback.update_location"]], "user (submission attribute)": [[0, "pedal.core.submission.Submission.user"]], "valence (feedback attribute)": [[0, "pedal.core.commands.Feedback.valence"], [0, "pedal.core.feedback.Feedback.valence"]], "version (feedback attribute)": [[0, "pedal.core.commands.Feedback.version"], [0, "pedal.core.feedback.Feedback.version"]], "assertalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertAlmostEqual"]], "assertequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertEqual"]], "assertfalse (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertFalse"]], "assertgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreater"]], "assertgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertGreaterEqual"]], "asserthasattr (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasAttr"]], "asserthasfunction (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasFunction"]], "asserthasvariable (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertHasVariable"]], "assertin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIn"]], "assertis (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIs"]], "assertisinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsInstance"]], "assertisnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNone"]], "assertisnot (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNot"]], "assertisnotinstance (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotInstance"]], "assertisnotnone (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertIsNotNone"]], "assertlengthequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthEqual"]], "assertlengthgreater (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreater"]], "assertlengthgreaterequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthGreaterEqual"]], "assertlengthless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLess"]], "assertlengthlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthLessEqual"]], "assertlengthnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLengthNotEqual"]], "assertless (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLess"]], "assertlessequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertLessEqual"]], "assertnotalmostequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotAlmostEqual"]], "assertnotequal (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotEqual"]], "assertnotin (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotIn"]], "assertnotoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutput"]], "assertnotoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotOutputContains"]], "assertnotregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotRegex"]], "assertnottype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertNotType"]], "assertoutput (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutput"]], "assertoutputcontains (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertOutputContains"]], "assertprints (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertPrints"]], "assertregex (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertRegex"]], "asserttrue (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertTrue"]], "asserttype (in module pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assertType"]], "assert_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_almost_equal"]], "assert_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_contains_subset"]], "assert_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_equal"]], "assert_false (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_false"]], "assert_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater"]], "assert_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_greater_equal"]], "assert_has_attr (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_attr"]], "assert_has_function (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_function"]], "assert_has_variable (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_has_variable"]], "assert_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_in"]], "assert_is (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is"]], "assert_is_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_dataclass"]], "assert_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_instance"]], "assert_is_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_none"]], "assert_is_not (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not"]], "assert_is_not_dataclass (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass"]], "assert_is_not_none (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_is_not_none"]], "assert_length_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_equal"]], "assert_length_greater (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater"]], "assert_length_greater_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_greater_equal"]], "assert_length_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less"]], "assert_length_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_less_equal"]], "assert_length_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_length_not_equal"]], "assert_less (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less"]], "assert_less_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_less_equal"]], "assert_not_almost_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_almost_equal"]], "assert_not_contains_subset (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_contains_subset"]], "assert_not_equal (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_equal"]], "assert_not_in (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_in"]], "assert_not_is_instance (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_is_instance"]], "assert_not_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output"]], "assert_not_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_output_contains"]], "assert_not_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_regex"]], "assert_not_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_not_type"]], "assert_output (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output"]], "assert_output_contains (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_output_contains"]], "assert_prints (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_prints"]], "assert_regex (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_regex"]], "assert_true (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_true"]], "assert_type (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.assert_type"]], "check_dataclass_error (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.check_dataclass_error"]], "condition() (assert_contains_subset method)": [[6, "pedal.assertions.runtime.assert_contains_subset.condition"]], "condition() (assert_equal method)": [[6, "pedal.assertions.runtime.assert_equal.condition"]], "condition() (assert_false method)": [[6, "pedal.assertions.runtime.assert_false.condition"]], "condition() (assert_greater method)": [[6, "pedal.assertions.runtime.assert_greater.condition"]], "condition() (assert_greater_equal method)": [[6, "pedal.assertions.runtime.assert_greater_equal.condition"]], "condition() (assert_has_attr method)": [[6, "pedal.assertions.runtime.assert_has_attr.condition"]], "condition() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.condition"]], "condition() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.condition"]], "condition() (assert_in method)": [[6, "pedal.assertions.runtime.assert_in.condition"]], "condition() (assert_is method)": [[6, "pedal.assertions.runtime.assert_is.condition"]], "condition() (assert_is_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_dataclass.condition"]], "condition() (assert_is_instance method)": [[6, "pedal.assertions.runtime.assert_is_instance.condition"]], "condition() (assert_is_none method)": [[6, "pedal.assertions.runtime.assert_is_none.condition"]], "condition() (assert_is_not method)": [[6, "pedal.assertions.runtime.assert_is_not.condition"]], "condition() (assert_is_not_dataclass method)": [[6, "pedal.assertions.runtime.assert_is_not_dataclass.condition"]], "condition() (assert_is_not_none method)": [[6, "pedal.assertions.runtime.assert_is_not_none.condition"]], "condition() (assert_length_equal method)": [[6, "pedal.assertions.runtime.assert_length_equal.condition"]], "condition() (assert_length_greater method)": [[6, "pedal.assertions.runtime.assert_length_greater.condition"]], "condition() (assert_length_greater_equal method)": [[6, "pedal.assertions.runtime.assert_length_greater_equal.condition"]], "condition() (assert_length_less method)": [[6, "pedal.assertions.runtime.assert_length_less.condition"]], "condition() (assert_length_less_equal method)": [[6, "pedal.assertions.runtime.assert_length_less_equal.condition"]], "condition() (assert_length_not_equal method)": [[6, "pedal.assertions.runtime.assert_length_not_equal.condition"]], "condition() (assert_less method)": [[6, "pedal.assertions.runtime.assert_less.condition"]], "condition() (assert_less_equal method)": [[6, "pedal.assertions.runtime.assert_less_equal.condition"]], "condition() (assert_not_contains_subset method)": [[6, "pedal.assertions.runtime.assert_not_contains_subset.condition"]], "condition() (assert_not_equal method)": [[6, "pedal.assertions.runtime.assert_not_equal.condition"]], "condition() (assert_not_in method)": [[6, "pedal.assertions.runtime.assert_not_in.condition"]], "condition() (assert_not_is_instance method)": [[6, "pedal.assertions.runtime.assert_not_is_instance.condition"]], "condition() (assert_not_output method)": [[6, "pedal.assertions.runtime.assert_not_output.condition"]], "condition() (assert_not_output_contains method)": [[6, "pedal.assertions.runtime.assert_not_output_contains.condition"]], "condition() (assert_not_regex method)": [[6, "pedal.assertions.runtime.assert_not_regex.condition"]], "condition() (assert_not_type method)": [[6, "pedal.assertions.runtime.assert_not_type.condition"]], "condition() (assert_output method)": [[6, "pedal.assertions.runtime.assert_output.condition"]], "condition() (assert_output_contains method)": [[6, "pedal.assertions.runtime.assert_output_contains.condition"]], "condition() (assert_regex method)": [[6, "pedal.assertions.runtime.assert_regex.condition"]], "condition() (assert_true method)": [[6, "pedal.assertions.runtime.assert_true.condition"]], "condition() (ensure_ast method)": [[6, "pedal.assertions.static.ensure_ast.condition"]], "condition() (ensure_called_uniquely method)": [[6, "pedal.assertions.runtime.ensure_called_uniquely.condition"]], "condition() (ensure_coverage method)": [[6, "pedal.assertions.runtime.ensure_coverage.condition"]], "condition() (ensure_documented_functions method)": [[6, "pedal.assertions.static.ensure_documented_functions.condition"]], "condition() (ensure_function_call method)": [[6, "pedal.assertions.static.ensure_function_call.condition"]], "condition() (ensure_functions_return method)": [[6, "pedal.assertions.static.ensure_functions_return.condition"]], "condition() (ensure_import method)": [[6, "pedal.assertions.static.ensure_import.condition"]], "condition() (ensure_literal method)": [[6, "pedal.assertions.static.ensure_literal.condition"]], "condition() (ensure_literal_type method)": [[6, "pedal.assertions.static.ensure_literal_type.condition"]], "condition() (ensure_operation method)": [[6, "pedal.assertions.static.ensure_operation.condition"]], "condition() (ensure_starting_code method)": [[6, "pedal.assertions.static.ensure_starting_code.condition"]], "condition() (only_printing_variables method)": [[6, "pedal.assertions.static.only_printing_variables.condition"]], "condition() (prevent_ast method)": [[6, "pedal.assertions.static.prevent_ast.condition"]], "condition() (prevent_embedded_answer method)": [[6, "pedal.assertions.static.prevent_embedded_answer.condition"]], "condition() (prevent_function_call method)": [[6, "pedal.assertions.static.prevent_function_call.condition"]], "condition() (prevent_import method)": [[6, "pedal.assertions.static.prevent_import.condition"]], "condition() (prevent_literal method)": [[6, "pedal.assertions.static.prevent_literal.condition"]], "condition() (prevent_literal_type method)": [[6, "pedal.assertions.static.prevent_literal_type.condition"]], "condition() (prevent_operation method)": [[6, "pedal.assertions.static.prevent_operation.condition"]], "condition() (prevent_printing_functions method)": [[6, "pedal.assertions.static.prevent_printing_functions.condition"]], "condition() (wheat_chaff_game_class method)": [[6, "pedal.assertions.commands.wheat_chaff_game_class.condition"]], "ensure_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_ast"]], "ensure_called_uniquely (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_called_uniquely"]], "ensure_coverage (class in pedal.assertions.runtime)": [[6, "pedal.assertions.runtime.ensure_coverage"]], "ensure_dataclass() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_dataclass"]], "ensure_documented_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_documented_functions"]], "ensure_function() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function"]], "ensure_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_function_call"]], "ensure_functions_return (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_functions_return"]], "ensure_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_import"]], "ensure_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal"]], "ensure_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_literal_type"]], "ensure_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operation"]], "ensure_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_operator"]], "ensure_prints_exactly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_prints_exactly"]], "ensure_starting_code (class in pedal.assertions.static)": [[6, "pedal.assertions.static.ensure_starting_code"]], "files_not_handled_correctly() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.files_not_handled_correctly"]], "format_assertion() (assert_has_function method)": [[6, "pedal.assertions.runtime.assert_has_function.format_assertion"]], "format_assertion() (assert_has_variable method)": [[6, "pedal.assertions.runtime.assert_has_variable.format_assertion"]], "function_prints() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.function_prints"]], "has_import() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.has_import"]], "only_printing_variables (class in pedal.assertions.static)": [[6, "pedal.assertions.static.only_printing_variables"]], "open_without_arguments (class in pedal.assertions.static)": [[6, "pedal.assertions.static.open_without_arguments"]], "pedal.assertions": [[6, "module-pedal.assertions"]], "pedal.assertions.commands": [[6, "module-pedal.assertions.commands"]], "pedal.assertions.runtime": [[6, "module-pedal.assertions.runtime"]], "pedal.assertions.static": [[6, "module-pedal.assertions.static"]], "prevent_advanced_iteration() (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_advanced_iteration"]], "prevent_ast (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_ast"]], "prevent_embedded_answer (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_embedded_answer"]], "prevent_function_call (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_function_call"]], "prevent_import (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_import"]], "prevent_literal (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal"]], "prevent_literal_type (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_literal_type"]], "prevent_operation (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operation"]], "prevent_operator (in module pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_operator"]], "prevent_printing_functions (class in pedal.assertions.static)": [[6, "pedal.assertions.static.prevent_printing_functions"]], "reset() (in module pedal.assertions)": [[6, "pedal.assertions.reset"]], "unit_test() (in module pedal.assertions.commands)": [[6, "pedal.assertions.commands.unit_test"]], "wheat_chaff_game_class (class in pedal.assertions.commands)": [[6, "pedal.assertions.commands.wheat_chaff_game_class"]], "caitexception": [[7, "pedal.cait.cait_api.CaitException"]], "data_state() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_state"]], "data_type() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.data_type"]], "def_use_error() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.def_use_error"]], "expire_cait_cache() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.expire_cait_cache"]], "find_asts() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_asts"]], "find_expr_sub_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_expr_sub_matches"]], "find_function_calls() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_calls"]], "find_function_definition() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_function_definition"]], "find_match() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_match"]], "find_matches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_matches"]], "find_operation() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_operation"]], "find_prior_initializations() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.find_prior_initializations"]], "find_submatches() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.find_submatches"]], "function_is_called() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.function_is_called"]], "is_top_level() (in module pedal.cait.find_node)": [[7, "pedal.cait.find_node.is_top_level"]], "parse_program() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.parse_program"]], "pedal.cait": [[7, "module-pedal.cait"]], "pedal.cait.cait_api": [[7, "module-pedal.cait.cait_api"]], "pedal.cait.find_node": [[7, "module-pedal.cait.find_node"]], "reparse_if_needed() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reparse_if_needed"]], "require_tifa() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.require_tifa"]], "reset() (in module pedal.cait.cait_api)": [[7, "pedal.cait.cait_api.reset"]], "badgraphfeedback (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.BadGraphFeedback"]], "assert_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.assert_plot"]], "compare_data() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.compare_data"]], "condition() (ensure_show method)": [[8, "pedal.extensions.plotting.ensure_show.condition"]], "condition() (plt_rename_err method)": [[8, "pedal.extensions.plotting.plt_rename_err.condition"]], "condition() (plt_wrong_import method)": [[8, "pedal.extensions.plotting.plt_wrong_import.condition"]], "ensure_correct_plot() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_correct_plot"]], "ensure_show (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.ensure_show"]], "get_plots() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.get_plots"]], "no_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.no_plt"]], "other_plt (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.other_plt"]], "pedal.extensions.plotting": [[8, "module-pedal.extensions.plotting"]], "pedal.extensions.turtles": [[8, "module-pedal.extensions.turtles"]], "plt_rename_err (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_rename_err"]], "plt_wrong_import (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.plt_wrong_import"]], "prevent_incorrect_plt() (in module pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.prevent_incorrect_plt"]], "wrong_plt_data (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_data"]], "wrong_plt_type (class in pedal.extensions.plotting)": [[8, "pedal.extensions.plotting.wrong_plt_type"]], "pedal.questions.setup": [[9, "module-pedal.questions.setup"]], "reset() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.reset"]], "set_seed() (in module pedal.questions.setup)": [[9, "pedal.questions.setup.set_seed"]], "commandblock (class in pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.CommandBlock"]], "maximum_temporary_length (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.MAXIMUM_TEMPORARY_LENGTH"]], "sandbox (class in pedal.sandbox.sandbox)": [[10, "pedal.sandbox.sandbox.Sandbox"]], "_context (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._context"]], "_current_patches (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._current_patches"]], "_next_context_id (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox._next_context_id"]], "allow_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_function"]], "allow_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.allow_module"]], "allow_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_module"]], "allow_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.allow_real_io"]], "allowed_time (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.allowed_time"]], "append_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.append_output"]], "attribute_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.attribute_error"]], "block_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_function"]], "block_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.block_module"]], "block_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_module"]], "block_real_io() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.block_real_io"]], "call() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.call"]], "call() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.call"]], "check_coverage() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.check_coverage"]], "clear() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear"]], "clear_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_context"]], "clear_exception() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_exception"]], "clear_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_input"]], "clear_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_input"]], "clear_mocked_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocked_function"]], "clear_mocks() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_mocks"]], "clear_mocks() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_mocks"]], "clear_output() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_output"]], "clear_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_output"]], "clear_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_sandbox"]], "clear_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.clear_student_data"]], "clear_tracer() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.clear_tracer"]], "context (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.context"]], "count_unique_calls() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.count_unique_calls"]], "data (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.data"]], "evaluate() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.evaluate"]], "evaluate() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.evaluate"]], "exception (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.exception"]], "exception (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception"]], "exception_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_message"]], "exception_name (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.exception_name"]], "feedback (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.feedback"]], "functions (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.functions"]], "get_call_arguments() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_call_arguments"]], "get_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_context"]], "get_exception() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_exception"]], "get_function() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_function"]], "get_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_function"]], "get_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_input"]], "get_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_module"]], "get_names_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_names_by_type"]], "get_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_output"]], "get_python_errors() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_python_errors"]], "get_raw_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_raw_output"]], "get_sandbox() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_sandbox"]], "get_student_data() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_student_data"]], "get_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.get_trace"]], "get_values_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_values_by_type"]], "get_variables_by_type() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.get_variables_by_type"]], "import_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.import_error"]], "indentation_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.indentation_error"]], "index_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.index_error"]], "inputs (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.inputs"]], "io_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.io_error"]], "key_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.key_error"]], "make_safe_variable() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.make_safe_variable"]], "memory_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.memory_error"]], "mock_function() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_function"]], "mock_module() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.mock_module"]], "mock_module() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.mock_module"]], "name_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.name_error"]], "output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.output"]], "pedal.sandbox": [[10, "module-pedal.sandbox"]], "pedal.sandbox.commands": [[10, "module-pedal.sandbox.commands"]], "pedal.sandbox.feedbacks": [[10, "module-pedal.sandbox.feedbacks"]], "pedal.sandbox.sandbox": [[10, "module-pedal.sandbox.sandbox"]], "plots (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.plots"]], "queue_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.queue_input"]], "raw_output (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.raw_output"]], "reset() (in module pedal.sandbox)": [[10, "pedal.sandbox.reset"]], "reset_default_overrides() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.reset_default_overrides"]], "reset_output() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.reset_output"]], "result (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.result"]], "run() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.run"]], "run() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.run"]], "runtime_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.runtime_error"]], "set_input() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_input"]], "set_input() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.set_input"]], "set_student_data() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.set_student_data"]], "start_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.start_grouping_context"]], "start_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.start_trace"]], "stop_grouping_context() (sandbox method)": [[10, "pedal.sandbox.sandbox.Sandbox.stop_grouping_context"]], "stop_trace() (in module pedal.sandbox.commands)": [[10, "pedal.sandbox.commands.stop_trace"]], "target (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.target"]], "timeout_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.timeout_error"]], "traceback (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback"]], "traceback_message (runtime_error attribute)": [[10, "pedal.sandbox.feedbacks.runtime_error.traceback_message"]], "tracer_style (sandbox attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.tracer_style"]], "turtles (sandbox.modules attribute)": [[10, "pedal.sandbox.sandbox.Sandbox.modules.turtles"]], "type_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.type_error"]], "value_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.value_error"]], "var (sandbox property)": [[10, "pedal.sandbox.sandbox.Sandbox.var"]], "zero_division_error (class in pedal.sandbox.feedbacks)": [[10, "pedal.sandbox.feedbacks.zero_division_error"]], "get_original_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_original_program"]], "get_program() (in module pedal.source.source)": [[11, "pedal.source.source.get_program"]], "pedal.source.source": [[11, "module-pedal.source.source"]], "reset() (in module pedal.source.source)": [[11, "pedal.source.source.reset"]], "restore_code() (in module pedal.source.source)": [[11, "pedal.source.source.restore_code"]], "set_source() (in module pedal.source.source)": [[11, "pedal.source.source.set_source"]], "set_source_file() (in module pedal.source.source)": [[11, "pedal.source.source.set_source_file"]], "verify() (in module pedal.source.source)": [[11, "pedal.source.source.verify"]], "verify_section() (in module pedal.source.source)": [[11, "pedal.source.source.verify_section"]], "error": [[12, "term-Error"]], "fully qualified name": [[12, "term-Fully-Qualified-Name"]], "identifier": [[12, "term-Identifier"]], "issue": [[12, "term-Issue"]], "literal": [[12, "term-Literal"]], "name": [[12, "term-Name"]], "name map": [[12, "term-Name-Map"]], "path": [[12, "term-Path"]], "scope": [[12, "term-Scope"]], "scope chain": [[12, "term-Scope-Chain"]], "state": [[12, "term-State"]], "tifa (class in pedal.tifa)": [[12, "pedal.tifa.Tifa"]], "type": [[12, "term-Type"]], "assign_target() (tifa method)": [[12, "pedal.tifa.Tifa.assign_target"]], "pedal.tifa": [[12, "module-pedal.tifa"]], "process_ast() (tifa method)": [[12, "pedal.tifa.Tifa.process_ast"]], "process_code() (tifa method)": [[12, "pedal.tifa.Tifa.process_code"]], "tifa_analysis() (in module pedal.tifa)": [[12, "pedal.tifa.tifa_analysis"]], "visit() (tifa method)": [[12, "pedal.tifa.Tifa.visit"]], "visit_annassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AnnAssign"]], "visit_assign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Assign"]], "visit_attribute() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Attribute"]], "visit_augassign() (tifa method)": [[12, "pedal.tifa.Tifa.visit_AugAssign"]], "visit_binop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BinOp"]], "visit_bool() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Bool"]], "visit_boolop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_BoolOp"]], "visit_classdef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ClassDef"]], "visit_compare() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Compare"]], "visit_constant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Constant"]], "visit_dict() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Dict"]], "visit_dictcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_DictComp"]], "visit_expr() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Expr"]], "visit_for() (tifa method)": [[12, "pedal.tifa.Tifa.visit_For"]], "visit_functiondef() (tifa method)": [[12, "pedal.tifa.Tifa.visit_FunctionDef"]], "visit_generatorexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_GeneratorExp"]], "visit_if() (tifa method)": [[12, "pedal.tifa.Tifa.visit_If"]], "visit_ifexp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_IfExp"]], "visit_import() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Import"]], "visit_importfrom() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ImportFrom"]], "visit_lambda() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Lambda"]], "visit_list() (tifa method)": [[12, "pedal.tifa.Tifa.visit_List"]], "visit_listcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_ListComp"]], "visit_name() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Name"]], "visit_nameconstant() (tifa method)": [[12, "pedal.tifa.Tifa.visit_NameConstant"]], "visit_num() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Num"]], "visit_return() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Return"]], "visit_setcomp() (tifa method)": [[12, "pedal.tifa.Tifa.visit_SetComp"]], "visit_slice() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Slice"]], "visit_str() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Str"]], "visit_subscript() (tifa method)": [[12, "pedal.tifa.Tifa.visit_Subscript"]], "visit_unaryop() (tifa method)": [[12, "pedal.tifa.Tifa.visit_UnaryOp"]], "visit_while() (tifa method)": [[12, "pedal.tifa.Tifa.visit_While"]], "visit_with() (tifa method)": [[12, "pedal.tifa.Tifa.visit_With"]], "visit_comprehension() (tifa method)": [[12, "pedal.tifa.Tifa.visit_comprehension"]], "visit_statements() (tifa method)": [[12, "pedal.tifa.Tifa.visit_statements"]], "atomic feedback function": [[14, "term-Atomic-Feedback-Function"]], "composite feedback function": [[14, "term-Composite-Feedback-Function"]], "environment": [[14, "term-Environment"]], "feedback": [[14, "term-Feedback"]], "feedback category": [[14, "term-Feedback-Category"]], "feedback condition": [[14, "term-Feedback-Condition"]], "feedback function": [[14, "term-Feedback-Function"]], "feedback kind": [[14, "term-Feedback-Kind"]], "feedback label": [[14, "term-Feedback-Label"]], "feedback response": [[14, "term-Feedback-Response"]], "instructor control script": [[14, "term-Instructor-Control-Script"]], "main report": [[14, "term-Main-Report"]], "report": [[14, "term-Report"]], "resolver": [[14, "term-Resolver"]], "submission": [[14, "term-Submission"]], "tool": [[14, "term-Tool"], [26, "tool"]], "built-in function": [[25, "clear_report"], [25, "compliment"], [25, "contextualize_report"], [25, "debug"], [25, "explain"], [25, "gently"], [25, "get_all_feedback"], [25, "give_partial"], [25, "guidance"], [25, "hide_correctness"], [25, "log"], [25, "set_success"], [25, "suppress"], [28, "assert_contains_subset"], [28, "assert_equal"], [28, "assert_false"], [28, "assert_greater"], [28, "assert_greater_equal"], [28, "assert_has_attr"], [28, "assert_has_function"], [28, "assert_has_variable"], [28, "assert_in"], [28, "assert_is"], [28, "assert_is_dataclass"], [28, "assert_is_instance"], [28, "assert_is_none"], [28, "assert_is_not"], [28, "assert_is_not_dataclass"], [28, "assert_is_not_instance"], [28, "assert_is_not_none"], [28, "assert_length_equal"], [28, "assert_length_greater"], [28, "assert_length_greater_equal"], [28, "assert_length_less"], [28, "assert_length_less_equal"], [28, "assert_length_not_equal"], [28, "assert_less"], [28, "assert_less_equal"], [28, "assert_not_contains_subset"], [28, "assert_not_equal"], [28, "assert_not_in"], [28, "assert_not_output"], [28, "assert_not_output_contains"], [28, "assert_not_regex"], [28, "assert_not_type"], [28, "assert_output"], [28, "assert_output_contains"], [28, "assert_regex"], [28, "assert_true"], [28, "assert_type"], [28, "check_dataclass_instance"], [28, "ensure_called_uniquely"], [28, "ensure_coverage"], [28, "ensure_function_callable"], [28, "unit_test"], [29, "allow_function"], [29, "allow_module"], [29, "allow_real_io"], [29, "block_function"], [29, "block_module"], [29, "block_real_io"], [29, "call"], [29, "check_coverage"], [29, "clear_input"], [29, "clear_mocks"], [29, "clear_output"], [29, "clear_sandbox"], [29, "clear_student_data"], [29, "count_unique_calls"], [29, "evaluate"], [29, "get_call_arguments"], [29, "get_exception"], [29, "get_input"], [29, "get_module"], [29, "get_output"], [29, "get_python_errors"], [29, "get_raw_output"], [29, "get_sandbox"], [29, "get_student_data"], [29, "get_trace"], [29, "mock_function"], [29, "mock_module"], [29, "queue_input"], [29, "run"], [29, "set_input"], [29, "start_trace"], [29, "stop_trace"], [30, "check_section_exists"], [30, "get_program"], [30, "next_section"], [30, "restore_code"], [30, "separate_into_sections"], [30, "set_source"], [30, "stop_sections"], [30, "verify"], [31, "ensure_ast"], [31, "ensure_dataclass"], [31, "ensure_documented_functions"], [31, "ensure_function"], [31, "ensure_function_call"], [31, "ensure_functions_return"], [31, "ensure_import"], [31, "ensure_literal"], [31, "ensure_literal_type"], [31, "ensure_operation"], [31, "ensure_operator"], [31, "ensure_prints_exactly"], [31, "ensure_starting_code"], [31, "files_not_handled_correctly"], [31, "function_prints"], [31, "only_printing_variables"], [31, "prevent_advanced_iteration"], [31, "prevent_ast"], [31, "prevent_embedded_answer"], [31, "prevent_function_call"], [31, "prevent_import"], [31, "prevent_literal"], [31, "prevent_literal_type"], [31, "prevent_operation"], [31, "prevent_operator"], [31, "prevent_printing_functions"], [32, "tifa_analysis"]], "clear_report()": [[25, "clear_report"]], "compliment()": [[25, "compliment"]], "contextualize_report()": [[25, "contextualize_report"]], "debug()": [[25, "debug"]], "explain()": [[25, "explain"]], "gently()": [[25, "gently"]], "get_all_feedback()": [[25, "get_all_feedback"]], "give_partial()": [[25, "give_partial"]], "guidance()": [[25, "guidance"]], "hide_correctness()": [[25, "hide_correctness"]], "log()": [[25, "log"]], "set_success()": [[25, "set_success"]], "suppress()": [[25, "suppress"]], "activate": [[26, "activate"]], "category": [[26, "category"]], "correct": [[26, "correct"]], "else_message": [[26, "else_message"]], "else_message_template": [[26, "else_message_template"]], "field_names": [[26, "field_names"]], "fields": [[26, "fields"]], "justification": [[26, "justification"]], "kind": [[26, "kind"]], "label": [[26, "label"]], "message": [[26, "message"]], "message_template": [[26, "message_template"]], "muted": [[26, "muted"]], "priority": [[26, "priority"]], "score": [[26, "score"]], "title": [[26, "title"]], "unscored": [[26, "unscored"]], "formatter (built-in class)": [[27, "Formatter"]], "htmlformatter (built-in class)": [[27, "HtmlFormatter"]], "textformatter (built-in class)": [[27, "TextFormatter"]], "check_mark() (formatter method)": [[27, "Formatter.check_mark"]], "exception (formatter attribute)": [[27, "Formatter.exception"]], "filename (formatter attribute)": [[27, "Formatter.filename"]], "frame (formatter attribute)": [[27, "Formatter.frame"]], "indent() (formatter method)": [[27, "Formatter.indent"]], "inputs (formatter attribute)": [[27, "Formatter.inputs"]], "line (formatter attribute)": [[27, "Formatter.line"]], "name (formatter attribute)": [[27, "Formatter.name"]], "negative_mark() (formatter method)": [[27, "Formatter.negative_mark"]], "output (formatter attribute)": [[27, "Formatter.output"]], "python_code (formatter attribute)": [[27, "Formatter.python_code"]], "python_expression (formatter attribute)": [[27, "Formatter.python_expression"]], "python_value (formatter attribute)": [[27, "Formatter.python_value"]], "table() (formatter method)": [[27, "Formatter.table"]], "traceback (formatter attribute)": [[27, "Formatter.traceback"]], "assert_contains_subset()": [[28, "assert_contains_subset"]], "assert_equal()": [[28, "assert_equal"]], "assert_false()": [[28, "assert_false"]], "assert_greater()": [[28, "assert_greater"]], "assert_greater_equal()": [[28, "assert_greater_equal"]], "assert_has_attr()": [[28, "assert_has_attr"]], "assert_has_function()": [[28, "assert_has_function"]], "assert_has_variable()": [[28, "assert_has_variable"]], "assert_in()": [[28, "assert_in"]], "assert_is()": [[28, "assert_is"]], "assert_is_dataclass()": [[28, "assert_is_dataclass"]], "assert_is_instance()": [[28, "assert_is_instance"]], "assert_is_none()": [[28, "assert_is_none"]], "assert_is_not()": [[28, "assert_is_not"]], "assert_is_not_dataclass()": [[28, "assert_is_not_dataclass"]], "assert_is_not_instance()": [[28, "assert_is_not_instance"]], "assert_is_not_none()": [[28, "assert_is_not_none"]], "assert_length_equal()": [[28, "assert_length_equal"]], "assert_length_greater()": [[28, "assert_length_greater"]], "assert_length_greater_equal()": [[28, "assert_length_greater_equal"]], "assert_length_less()": [[28, "assert_length_less"]], "assert_length_less_equal()": [[28, "assert_length_less_equal"]], "assert_length_not_equal()": [[28, "assert_length_not_equal"]], "assert_less()": [[28, "assert_less"]], "assert_less_equal()": [[28, "assert_less_equal"]], "assert_not_contains_subset()": [[28, "assert_not_contains_subset"]], "assert_not_equal()": [[28, "assert_not_equal"]], "assert_not_in()": [[28, "assert_not_in"]], "assert_not_output()": [[28, "assert_not_output"]], "assert_not_output_contains()": [[28, "assert_not_output_contains"]], "assert_not_regex()": [[28, "assert_not_regex"]], "assert_not_type()": [[28, "assert_not_type"]], "assert_output()": [[28, "assert_output"]], "assert_output_contains()": [[28, "assert_output_contains"]], "assert_regex()": [[28, "assert_regex"]], "assert_true()": [[28, "assert_true"]], "assert_type()": [[28, "assert_type"]], "check_dataclass_instance()": [[28, "check_dataclass_instance"]], "ensure_called_uniquely()": [[28, "ensure_called_uniquely"]], "ensure_coverage()": [[28, "ensure_coverage"]], "ensure_function_callable()": [[28, "ensure_function_callable"]], "unit_test()": [[28, "unit_test"]], "commandblock (built-in class)": [[29, "CommandBlock"]], "sandbox (built-in class)": [[29, "Sandbox"]], "allow_function()": [[29, "allow_function"]], "allow_module()": [[29, "allow_module"]], "allow_real_io()": [[29, "allow_real_io"]], "block_function()": [[29, "block_function"]], "block_module()": [[29, "block_module"]], "block_real_io()": [[29, "block_real_io"]], "call()": [[29, "call"]], "check_coverage()": [[29, "check_coverage"]], "clear_input()": [[29, "clear_input"]], "clear_mocks()": [[29, "clear_mocks"]], "clear_output()": [[29, "clear_output"]], "clear_sandbox()": [[29, "clear_sandbox"]], "clear_student_data()": [[29, "clear_student_data"]], "count_unique_calls()": [[29, "count_unique_calls"]], "evaluate()": [[29, "evaluate"]], "get_call_arguments()": [[29, "get_call_arguments"]], "get_exception()": [[29, "get_exception"]], "get_input()": [[29, "get_input"]], "get_module()": [[29, "get_module"]], "get_output()": [[29, "get_output"]], "get_python_errors()": [[29, "get_python_errors"]], "get_raw_output()": [[29, "get_raw_output"]], "get_sandbox()": [[29, "get_sandbox"]], "get_student_data()": [[29, "get_student_data"]], "get_trace()": [[29, "get_trace"]], "mock_function()": [[29, "mock_function"]], "mock_module()": [[29, "mock_module"]], "queue_input()": [[29, "queue_input"]], "run()": [[29, "run"]], "set_input()": [[29, "set_input"]], "start_trace()": [[29, "start_trace"]], "stop_trace()": [[29, "stop_trace"]], "student (built-in variable)": [[29, "student"]], "check_section_exists()": [[30, "check_section_exists"]], "get_program()": [[30, "get_program"]], "next_section()": [[30, "next_section"]], "restore_code()": [[30, "restore_code"]], "separate_into_sections()": [[30, "separate_into_sections"]], "set_source()": [[30, "set_source"]], "stop_sections()": [[30, "stop_sections"]], "verify()": [[30, "verify"]], "ensure_ast()": [[31, "ensure_ast"]], "ensure_dataclass()": [[31, "ensure_dataclass"]], "ensure_documented_functions()": [[31, "ensure_documented_functions"]], "ensure_function()": [[31, "ensure_function"]], "ensure_function_call()": [[31, "ensure_function_call"]], "ensure_functions_return()": [[31, "ensure_functions_return"]], "ensure_import()": [[31, "ensure_import"]], "ensure_literal()": [[31, "ensure_literal"]], "ensure_literal_type()": [[31, "ensure_literal_type"]], "ensure_operation()": [[31, "ensure_operation"]], "ensure_operator()": [[31, "ensure_operator"]], "ensure_prints_exactly()": [[31, "ensure_prints_exactly"]], "ensure_starting_code()": [[31, "ensure_starting_code"]], "files_not_handled_correctly()": [[31, "files_not_handled_correctly"]], "function_prints()": [[31, "function_prints"]], "only_printing_variables()": [[31, "only_printing_variables"]], "prevent_advanced_iteration()": [[31, "prevent_advanced_iteration"]], "prevent_ast()": [[31, "prevent_ast"]], "prevent_embedded_answer()": [[31, "prevent_embedded_answer"]], "prevent_function_call()": [[31, "prevent_function_call"]], "prevent_import()": [[31, "prevent_import"]], "prevent_literal()": [[31, "prevent_literal"]], "prevent_literal_type()": [[31, "prevent_literal_type"]], "prevent_operation()": [[31, "prevent_operation"]], "prevent_operator()": [[31, "prevent_operator"]], "prevent_printing_functions()": [[31, "prevent_printing_functions"]], "tifa_analysis()": [[32, "tifa_analysis"]]}})